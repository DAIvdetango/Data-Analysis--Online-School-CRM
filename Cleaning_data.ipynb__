{"cells":[{"cell_type":"code","execution_count":70,"metadata":{"id":"e_PCa3D28wRy","executionInfo":{"status":"ok","timestamp":1741036450140,"user_tz":-60,"elapsed":57,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import datetime\n","#pd.set_option('display.max_columns', None)"]},{"cell_type":"code","source":["def load_data(file_path: str, file_type: str = \"csv\", **kwargs) -> pd.DataFrame:\n","    if file_type == \"csv\":\n","        df = pd.read_csv(file_path, **kwargs)\n","    elif file_type in (\"excel\", \"xlsx\"):\n","        df = pd.read_excel(file_path, **kwargs)\n","    else:\n","        raise ValueError(f\"Unsupported file type: {file_type}\")\n","    return df\n"],"metadata":{"id":"HFxqZasPOmar","executionInfo":{"status":"ok","timestamp":1741036450163,"user_tz":-60,"elapsed":25,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"execution_count":71,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WqTdmaIJgquS"},"source":["##✨ **Data Cleaning `contacts_df`**"]},{"cell_type":"code","execution_count":72,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"elapsed":2073,"status":"ok","timestamp":1741036452233,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"J_UfH9UymfWn","outputId":"24ba5410-62e7-4cf7-dc90-e9adeb438337"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    Id Contact Owner Name      Created Time     Modified Time\n","0  5805028000000645014       Rachel White  27.06.2023 11:28  22.12.2023 13:34\n","1  5805028000000872003      Charlie Davis  03.07.2023 11:31  21.05.2024 10:23\n","2  5805028000000889001          Bob Brown  02.07.2023 22:37  21.12.2023 13:17\n","3  5805028000000907006          Bob Brown  03.07.2023 05:44  29.12.2023 15:20\n","4  5805028000000939010         Nina Scott  04.07.2023 10:11  16.04.2024 16:14"],"text/html":["\n","  <div id=\"df-3b09e0dd-3f80-4521-b9b3-2b3b5a03321c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Contact Owner Name</th>\n","      <th>Created Time</th>\n","      <th>Modified Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5805028000000645014</td>\n","      <td>Rachel White</td>\n","      <td>27.06.2023 11:28</td>\n","      <td>22.12.2023 13:34</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5805028000000872003</td>\n","      <td>Charlie Davis</td>\n","      <td>03.07.2023 11:31</td>\n","      <td>21.05.2024 10:23</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5805028000000889001</td>\n","      <td>Bob Brown</td>\n","      <td>02.07.2023 22:37</td>\n","      <td>21.12.2023 13:17</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5805028000000907006</td>\n","      <td>Bob Brown</td>\n","      <td>03.07.2023 05:44</td>\n","      <td>29.12.2023 15:20</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5805028000000939010</td>\n","      <td>Nina Scott</td>\n","      <td>04.07.2023 10:11</td>\n","      <td>16.04.2024 16:14</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b09e0dd-3f80-4521-b9b3-2b3b5a03321c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3b09e0dd-3f80-4521-b9b3-2b3b5a03321c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3b09e0dd-3f80-4521-b9b3-2b3b5a03321c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9ec70667-edb0-4ef9-ba9e-95417009b993\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ec70667-edb0-4ef9-ba9e-95417009b993')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9ec70667-edb0-4ef9-ba9e-95417009b993 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"contacts_df","summary":"{\n  \"name\": \"contacts_df\",\n  \"rows\": 18548,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18548,\n        \"samples\": [\n          \"5805028000031097228\",\n          \"5805028000023895178\",\n          \"5805028000026317259\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contact Owner Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"Quincy Vincent\",\n          \"Wendy Clark\",\n          \"George King\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Created Time\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 17921,\n        \"samples\": [\n          \"31.03.2024 18:16\",\n          \"18.01.2024 00:49\",\n          \"01.02.2024 13:46\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Modified Time\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 16580,\n        \"samples\": [\n          \"26.05.2024 18:02\",\n          \"05.06.2024 03:06\",\n          \"30.04.2024 10:28\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":72}],"source":["df_path = '/content/Contacts (Done).xlsx'\n","contacts_df = load_data(df_path, 'xlsx', dtype={'Id': str})\n","contacts_df.head()"]},{"cell_type":"code","execution_count":73,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1741036452235,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"jKOSdZ4PmjQI","outputId":"8c6866c0-d586-49e7-bbdd-a1c20a31c4da"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 18548 entries, 0 to 18547\n","Data columns (total 4 columns):\n"," #   Column              Non-Null Count  Dtype \n","---  ------              --------------  ----- \n"," 0   Id                  18548 non-null  object\n"," 1   Contact Owner Name  18548 non-null  object\n"," 2   Created Time        18548 non-null  object\n"," 3   Modified Time       18548 non-null  object\n","dtypes: object(4)\n","memory usage: 579.8+ KB\n"]}],"source":["contacts_df.info()"]},{"cell_type":"code","execution_count":74,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"executionInfo":{"elapsed":79,"status":"ok","timestamp":1741036452315,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"-53T5y9zD97W","outputId":"ccc6ef00-ed8b-4909-b521-f5459306d3b7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         Id Contact Owner Name      Created Time  \\\n","count                 18548              18548             18548   \n","unique                18548                 28             17921   \n","top     5805028000000645014      Charlie Davis  10.06.2024 09:00   \n","freq                      1               2018                13   \n","\n","           Modified Time  \n","count              18548  \n","unique             16580  \n","top     13.06.2024 17:08  \n","freq                  25  "],"text/html":["\n","  <div id=\"df-33ce3f73-8ff6-4ff9-b1fe-8be11b39452e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Contact Owner Name</th>\n","      <th>Created Time</th>\n","      <th>Modified Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>18548</td>\n","      <td>18548</td>\n","      <td>18548</td>\n","      <td>18548</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>18548</td>\n","      <td>28</td>\n","      <td>17921</td>\n","      <td>16580</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>5805028000000645014</td>\n","      <td>Charlie Davis</td>\n","      <td>10.06.2024 09:00</td>\n","      <td>13.06.2024 17:08</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>1</td>\n","      <td>2018</td>\n","      <td>13</td>\n","      <td>25</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-33ce3f73-8ff6-4ff9-b1fe-8be11b39452e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-33ce3f73-8ff6-4ff9-b1fe-8be11b39452e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-33ce3f73-8ff6-4ff9-b1fe-8be11b39452e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d15fccac-3b69-40c9-92cf-76426ae41779\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d15fccac-3b69-40c9-92cf-76426ae41779')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d15fccac-3b69-40c9-92cf-76426ae41779 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"contacts_df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"18548\",\n          \"5805028000000645014\",\n          \"1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contact Owner Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          28,\n          \"2018\",\n          \"18548\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Created Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000000013\",\n        \"max\": \"2024-10-06 09:00:00\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          17921,\n          \"13\",\n          \"18548\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Modified Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000000025\",\n        \"max\": \"2024-06-13 17:08:00\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          16580,\n          \"25\",\n          \"18548\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":74}],"source":["contacts_df.describe()"]},{"cell_type":"markdown","metadata":{"id":"b2apdqz7nCWO"},"source":["---\n","##  Data Type Conversions\n","---"]},{"cell_type":"code","execution_count":75,"metadata":{"id":"pCQP9bnagzRF","executionInfo":{"status":"ok","timestamp":1741036452442,"user_tz":-60,"elapsed":92,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["contacts_df[\"Created Time\"] = pd.to_datetime(contacts_df[\"Created Time\"], format='%d.%m.%Y %H:%M', dayfirst=True, errors=\"raise\")\n","contacts_df[\"Modified Time\"] = pd.to_datetime(contacts_df[\"Modified Time\"], format='%d.%m.%Y %H:%M', dayfirst=True, errors=\"raise\")"]},{"cell_type":"code","execution_count":76,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"elapsed":52,"status":"ok","timestamp":1741036452498,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"pTQ2phOJD1ED","outputId":"c60b7c17-a2be-4c8b-b79f-512615fef707"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Created Time                  Modified Time\n","count                          18548                          18548\n","mean   2024-01-24 14:00:21.679965696  2024-02-15 07:41:24.814535168\n","min              2023-06-27 11:28:00            2023-07-06 10:54:00\n","25%              2023-11-15 16:40:45            2023-12-09 12:43:00\n","50%              2024-02-01 18:30:00            2024-02-28 22:21:30\n","75%              2024-04-12 16:37:15            2024-04-26 22:02:30\n","max              2024-06-21 15:30:00            2024-06-21 15:32:00"],"text/html":["\n","  <div id=\"df-947d5ba0-d893-4ed1-8779-cf858da23ea8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Created Time</th>\n","      <th>Modified Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>18548</td>\n","      <td>18548</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2024-01-24 14:00:21.679965696</td>\n","      <td>2024-02-15 07:41:24.814535168</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2023-06-27 11:28:00</td>\n","      <td>2023-07-06 10:54:00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2023-11-15 16:40:45</td>\n","      <td>2023-12-09 12:43:00</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2024-02-01 18:30:00</td>\n","      <td>2024-02-28 22:21:30</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2024-04-12 16:37:15</td>\n","      <td>2024-04-26 22:02:30</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2024-06-21 15:30:00</td>\n","      <td>2024-06-21 15:32:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-947d5ba0-d893-4ed1-8779-cf858da23ea8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-947d5ba0-d893-4ed1-8779-cf858da23ea8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-947d5ba0-d893-4ed1-8779-cf858da23ea8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-149ae5bb-4c25-48b2-8ffa-37a154934f92\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-149ae5bb-4c25-48b2-8ffa-37a154934f92')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-149ae5bb-4c25-48b2-8ffa-37a154934f92 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"contacts_df\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"Created Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000018548\",\n        \"max\": \"2024-06-21 15:30:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"18548\",\n          \"2024-01-24 14:00:21.679965696\",\n          \"2024-04-12 16:37:15\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Modified Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000018548\",\n        \"max\": \"2024-06-21 15:32:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"18548\",\n          \"2024-02-15 07:41:24.814535168\",\n          \"2024-04-26 22:02:30\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":76}],"source":["contacts_df.describe()"]},{"cell_type":"code","execution_count":77,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":50,"status":"ok","timestamp":1741036452554,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"ed619-hfhQIR","outputId":"d5bf8387-9dac-4152-cf68-3f0f798ea613"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 18548 entries, 0 to 18547\n","Data columns (total 4 columns):\n"," #   Column              Non-Null Count  Dtype         \n","---  ------              --------------  -----         \n"," 0   Id                  18548 non-null  object        \n"," 1   Contact Owner Name  18548 non-null  object        \n"," 2   Created Time        18548 non-null  datetime64[ns]\n"," 3   Modified Time       18548 non-null  datetime64[ns]\n","dtypes: datetime64[ns](2), object(2)\n","memory usage: 579.8+ KB\n"]}],"source":["contacts_df.info()"]},{"cell_type":"markdown","metadata":{"id":"Zyqofs8LhVzr"},"source":["---\n","## Removing duplicates\n","---"]},{"cell_type":"code","execution_count":78,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1741036452574,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"hl67Y9LaFCIN","outputId":"0f191792-077b-426c-8336-5864397c3d41"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["38"]},"metadata":{},"execution_count":78}],"source":["contacts_df.duplicated(subset=contacts_df.columns[1:]).sum()"]},{"cell_type":"code","execution_count":79,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1741036452585,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"hbT0D8j-h8-p","outputId":"a84966ad-acd2-49f6-d9c5-657d3b544b99"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Id Contact Owner Name        Created Time  \\\n","203    5805028000001949074          Bob Brown 2023-07-17 18:40:00   \n","205    5805028000001953081          Bob Brown 2023-07-17 18:40:00   \n","279    5805028000002340967          Bob Brown 2023-07-18 16:53:00   \n","280    5805028000002344049          Bob Brown 2023-07-18 16:53:00   \n","334    5805028000002740077          Bob Brown 2023-07-21 12:26:00   \n","...                    ...                ...                 ...   \n","17864  5805028000054231884       Rachel White 2024-06-10 09:00:00   \n","17865  5805028000054232018       Rachel White 2024-06-10 09:00:00   \n","17869  5805028000054238271       Rachel White 2024-06-10 09:00:00   \n","17870  5805028000054238317       Rachel White 2024-06-10 09:00:00   \n","17872  5805028000054238365       Rachel White 2024-06-10 09:00:00   \n","\n","            Modified Time  \n","203   2023-07-17 18:40:00  \n","205   2023-07-17 18:40:00  \n","279   2023-07-18 16:53:00  \n","280   2023-07-18 16:53:00  \n","334   2023-07-21 12:26:00  \n","...                   ...  \n","17864 2024-06-10 09:33:00  \n","17865 2024-06-10 09:33:00  \n","17869 2024-06-10 09:33:00  \n","17870 2024-06-10 09:33:00  \n","17872 2024-06-10 09:33:00  \n","\n","[71 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-8e62fa87-5c64-49ba-bc12-af096dc50074\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Contact Owner Name</th>\n","      <th>Created Time</th>\n","      <th>Modified Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>203</th>\n","      <td>5805028000001949074</td>\n","      <td>Bob Brown</td>\n","      <td>2023-07-17 18:40:00</td>\n","      <td>2023-07-17 18:40:00</td>\n","    </tr>\n","    <tr>\n","      <th>205</th>\n","      <td>5805028000001953081</td>\n","      <td>Bob Brown</td>\n","      <td>2023-07-17 18:40:00</td>\n","      <td>2023-07-17 18:40:00</td>\n","    </tr>\n","    <tr>\n","      <th>279</th>\n","      <td>5805028000002340967</td>\n","      <td>Bob Brown</td>\n","      <td>2023-07-18 16:53:00</td>\n","      <td>2023-07-18 16:53:00</td>\n","    </tr>\n","    <tr>\n","      <th>280</th>\n","      <td>5805028000002344049</td>\n","      <td>Bob Brown</td>\n","      <td>2023-07-18 16:53:00</td>\n","      <td>2023-07-18 16:53:00</td>\n","    </tr>\n","    <tr>\n","      <th>334</th>\n","      <td>5805028000002740077</td>\n","      <td>Bob Brown</td>\n","      <td>2023-07-21 12:26:00</td>\n","      <td>2023-07-21 12:26:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>17864</th>\n","      <td>5805028000054231884</td>\n","      <td>Rachel White</td>\n","      <td>2024-06-10 09:00:00</td>\n","      <td>2024-06-10 09:33:00</td>\n","    </tr>\n","    <tr>\n","      <th>17865</th>\n","      <td>5805028000054232018</td>\n","      <td>Rachel White</td>\n","      <td>2024-06-10 09:00:00</td>\n","      <td>2024-06-10 09:33:00</td>\n","    </tr>\n","    <tr>\n","      <th>17869</th>\n","      <td>5805028000054238271</td>\n","      <td>Rachel White</td>\n","      <td>2024-06-10 09:00:00</td>\n","      <td>2024-06-10 09:33:00</td>\n","    </tr>\n","    <tr>\n","      <th>17870</th>\n","      <td>5805028000054238317</td>\n","      <td>Rachel White</td>\n","      <td>2024-06-10 09:00:00</td>\n","      <td>2024-06-10 09:33:00</td>\n","    </tr>\n","    <tr>\n","      <th>17872</th>\n","      <td>5805028000054238365</td>\n","      <td>Rachel White</td>\n","      <td>2024-06-10 09:00:00</td>\n","      <td>2024-06-10 09:33:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>71 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e62fa87-5c64-49ba-bc12-af096dc50074')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8e62fa87-5c64-49ba-bc12-af096dc50074 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8e62fa87-5c64-49ba-bc12-af096dc50074');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ba06ab79-0432-44ff-90d3-2f9405253405\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ba06ab79-0432-44ff-90d3-2f9405253405')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ba06ab79-0432-44ff-90d3-2f9405253405 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"contacts_df[contacts_df\",\n  \"rows\": 71,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 71,\n        \"samples\": [\n          \"5805028000017707493\",\n          \"5805028000001949074\",\n          \"5805028000038491056\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contact Owner Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 12,\n        \"samples\": [\n          \"Amy Green\",\n          \"Paula Underwood\",\n          \"Bob Brown\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Created Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-17 18:40:00\",\n        \"max\": \"2024-06-10 09:00:00\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"2024-06-06 17:48:00\",\n          \"2024-01-15 20:05:00\",\n          \"2024-04-13 19:48:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Modified Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-17 18:40:00\",\n        \"max\": \"2024-06-10 09:33:00\",\n        \"num_unique_values\": 32,\n        \"samples\": [\n          \"2024-05-01 19:04:00\",\n          \"2024-01-15 22:06:00\",\n          \"2024-04-07 17:18:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":79}],"source":["contacts_df[contacts_df.duplicated(keep=False, subset=contacts_df.columns[1:])]"]},{"cell_type":"code","execution_count":80,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1741036452686,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"3IS69KS-fVD2","outputId":"1a03f46d-8638-4b83-b12d-0aee144a1c6a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0, 4)"]},"metadata":{},"execution_count":80}],"source":["contacts_df.drop_duplicates(subset=contacts_df.columns[1:], inplace=True)\n","\n","contacts_df[contacts_df.duplicated(subset=contacts_df.columns[1:])].shape"]},{"cell_type":"markdown","metadata":{"id":"42YSXn7MqJrP"},"source":["---\n","## Processing Missing Values\n","---"]},{"cell_type":"code","execution_count":81,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1741036452694,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"MzJfjfIAk5gs","outputId":"3ca3e3c0-23e6-4d62-fe5a-a492c6aaae6a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Id                    0\n","Contact Owner Name    0\n","Created Time          0\n","Modified Time         0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Contact Owner Name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Created Time</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Modified Time</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":81}],"source":["contacts_df.isna().sum()"]},{"cell_type":"markdown","metadata":{"id":"YxZltOepnK5Z"},"source":["---\n","## Results Output\n","---"]},{"cell_type":"code","execution_count":82,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":32,"status":"ok","timestamp":1741036452728,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"BAU2Uz1FnLKh","outputId":"e5341ecb-dbde-4e50-ac2c-e33a40c8f6a1"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    Id Contact Owner Name        Created Time  \\\n","0  5805028000000645014       Rachel White 2023-06-27 11:28:00   \n","1  5805028000000872003      Charlie Davis 2023-07-03 11:31:00   \n","2  5805028000000889001          Bob Brown 2023-07-02 22:37:00   \n","3  5805028000000907006          Bob Brown 2023-07-03 05:44:00   \n","4  5805028000000939010         Nina Scott 2023-07-04 10:11:00   \n","\n","        Modified Time  \n","0 2023-12-22 13:34:00  \n","1 2024-05-21 10:23:00  \n","2 2023-12-21 13:17:00  \n","3 2023-12-29 15:20:00  \n","4 2024-04-16 16:14:00  "],"text/html":["\n","  <div id=\"df-0884afd1-aa5a-4924-913f-396ed9d7110a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Contact Owner Name</th>\n","      <th>Created Time</th>\n","      <th>Modified Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5805028000000645014</td>\n","      <td>Rachel White</td>\n","      <td>2023-06-27 11:28:00</td>\n","      <td>2023-12-22 13:34:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5805028000000872003</td>\n","      <td>Charlie Davis</td>\n","      <td>2023-07-03 11:31:00</td>\n","      <td>2024-05-21 10:23:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5805028000000889001</td>\n","      <td>Bob Brown</td>\n","      <td>2023-07-02 22:37:00</td>\n","      <td>2023-12-21 13:17:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5805028000000907006</td>\n","      <td>Bob Brown</td>\n","      <td>2023-07-03 05:44:00</td>\n","      <td>2023-12-29 15:20:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5805028000000939010</td>\n","      <td>Nina Scott</td>\n","      <td>2023-07-04 10:11:00</td>\n","      <td>2024-04-16 16:14:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0884afd1-aa5a-4924-913f-396ed9d7110a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0884afd1-aa5a-4924-913f-396ed9d7110a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0884afd1-aa5a-4924-913f-396ed9d7110a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-40c0d904-c47c-4382-87ef-75ac3c43b698\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-40c0d904-c47c-4382-87ef-75ac3c43b698')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-40c0d904-c47c-4382-87ef-75ac3c43b698 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"contacts_df","summary":"{\n  \"name\": \"contacts_df\",\n  \"rows\": 18510,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18510,\n        \"samples\": [\n          \"5805028000039945128\",\n          \"5805028000043764454\",\n          \"5805028000002379043\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contact Owner Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"Quincy Vincent\",\n          \"Wendy Clark\",\n          \"George King\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Created Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-06-27 11:28:00\",\n        \"max\": \"2024-06-21 15:30:00\",\n        \"num_unique_values\": 17921,\n        \"samples\": [\n          \"2024-03-31 18:16:00\",\n          \"2024-01-18 00:49:00\",\n          \"2024-02-01 13:46:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Modified Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-06 10:54:00\",\n        \"max\": \"2024-06-21 15:32:00\",\n        \"num_unique_values\": 16580,\n        \"samples\": [\n          \"2024-05-26 18:02:00\",\n          \"2024-06-05 03:06:00\",\n          \"2024-04-30 10:28:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":82}],"source":["contacts_df.head()"]},{"cell_type":"code","execution_count":83,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":63,"status":"ok","timestamp":1741036452796,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"sunsiimznLKi","outputId":"2a923752-d43b-4053-a1dd-b345e83beaac"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 18510 entries, 0 to 18547\n","Data columns (total 4 columns):\n"," #   Column              Non-Null Count  Dtype         \n","---  ------              --------------  -----         \n"," 0   Id                  18510 non-null  object        \n"," 1   Contact Owner Name  18510 non-null  object        \n"," 2   Created Time        18510 non-null  datetime64[ns]\n"," 3   Modified Time       18510 non-null  datetime64[ns]\n","dtypes: datetime64[ns](2), object(2)\n","memory usage: 723.0+ KB\n"]}],"source":["contacts_df.info()"]},{"cell_type":"code","execution_count":84,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":54,"status":"ok","timestamp":1741036452848,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"QmfZa78ln7FQ","outputId":"20359d7b-17b6-4c2f-d0a9-e9d56ef632da"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Id Contact Owner Name        Created Time  \\\n","0      5805028000000645014       Rachel White 2023-06-27 11:28:00   \n","1      5805028000000872003      Charlie Davis 2023-07-03 11:31:00   \n","2      5805028000000889001          Bob Brown 2023-07-02 22:37:00   \n","3      5805028000000907006          Bob Brown 2023-07-03 05:44:00   \n","4      5805028000000939010         Nina Scott 2023-07-04 10:11:00   \n","...                    ...                ...                 ...   \n","18543  5805028000056889209      Ulysses Adams 2024-06-21 12:11:00   \n","18544  5805028000056889351           Eva Kent 2024-06-21 13:32:00   \n","18545  5805028000056892018           Eva Kent 2024-06-21 10:21:00   \n","18546  5805028000056892055       Yara Edwards 2024-06-21 10:22:00   \n","18547  5805028000056907001           Ben Hall 2024-06-21 10:56:00   \n","\n","            Modified Time  \n","0     2023-12-22 13:34:00  \n","1     2024-05-21 10:23:00  \n","2     2023-12-21 13:17:00  \n","3     2023-12-29 15:20:00  \n","4     2024-04-16 16:14:00  \n","...                   ...  \n","18543 2024-06-21 14:11:00  \n","18544 2024-06-21 15:32:00  \n","18545 2024-06-21 12:21:00  \n","18546 2024-06-21 12:23:00  \n","18547 2024-06-21 12:56:00  \n","\n","[18510 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-d1e28906-3e06-4737-8557-7037dd90f613\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Contact Owner Name</th>\n","      <th>Created Time</th>\n","      <th>Modified Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5805028000000645014</td>\n","      <td>Rachel White</td>\n","      <td>2023-06-27 11:28:00</td>\n","      <td>2023-12-22 13:34:00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5805028000000872003</td>\n","      <td>Charlie Davis</td>\n","      <td>2023-07-03 11:31:00</td>\n","      <td>2024-05-21 10:23:00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5805028000000889001</td>\n","      <td>Bob Brown</td>\n","      <td>2023-07-02 22:37:00</td>\n","      <td>2023-12-21 13:17:00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5805028000000907006</td>\n","      <td>Bob Brown</td>\n","      <td>2023-07-03 05:44:00</td>\n","      <td>2023-12-29 15:20:00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5805028000000939010</td>\n","      <td>Nina Scott</td>\n","      <td>2023-07-04 10:11:00</td>\n","      <td>2024-04-16 16:14:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>18543</th>\n","      <td>5805028000056889209</td>\n","      <td>Ulysses Adams</td>\n","      <td>2024-06-21 12:11:00</td>\n","      <td>2024-06-21 14:11:00</td>\n","    </tr>\n","    <tr>\n","      <th>18544</th>\n","      <td>5805028000056889351</td>\n","      <td>Eva Kent</td>\n","      <td>2024-06-21 13:32:00</td>\n","      <td>2024-06-21 15:32:00</td>\n","    </tr>\n","    <tr>\n","      <th>18545</th>\n","      <td>5805028000056892018</td>\n","      <td>Eva Kent</td>\n","      <td>2024-06-21 10:21:00</td>\n","      <td>2024-06-21 12:21:00</td>\n","    </tr>\n","    <tr>\n","      <th>18546</th>\n","      <td>5805028000056892055</td>\n","      <td>Yara Edwards</td>\n","      <td>2024-06-21 10:22:00</td>\n","      <td>2024-06-21 12:23:00</td>\n","    </tr>\n","    <tr>\n","      <th>18547</th>\n","      <td>5805028000056907001</td>\n","      <td>Ben Hall</td>\n","      <td>2024-06-21 10:56:00</td>\n","      <td>2024-06-21 12:56:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>18510 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d1e28906-3e06-4737-8557-7037dd90f613')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d1e28906-3e06-4737-8557-7037dd90f613 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d1e28906-3e06-4737-8557-7037dd90f613');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4858ba67-d84a-4417-b512-1fafe70948ad\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4858ba67-d84a-4417-b512-1fafe70948ad')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4858ba67-d84a-4417-b512-1fafe70948ad button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_84e0d7ef-4f9e-4755-ba0a-cb9a106bf7f3\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('contacts_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_84e0d7ef-4f9e-4755-ba0a-cb9a106bf7f3 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('contacts_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"contacts_df","summary":"{\n  \"name\": \"contacts_df\",\n  \"rows\": 18510,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18510,\n        \"samples\": [\n          \"5805028000039945128\",\n          \"5805028000043764454\",\n          \"5805028000002379043\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Contact Owner Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"Quincy Vincent\",\n          \"Wendy Clark\",\n          \"George King\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Created Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-06-27 11:28:00\",\n        \"max\": \"2024-06-21 15:30:00\",\n        \"num_unique_values\": 17921,\n        \"samples\": [\n          \"2024-03-31 18:16:00\",\n          \"2024-01-18 00:49:00\",\n          \"2024-02-01 13:46:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Modified Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-06 10:54:00\",\n        \"max\": \"2024-06-21 15:32:00\",\n        \"num_unique_values\": 16580,\n        \"samples\": [\n          \"2024-05-26 18:02:00\",\n          \"2024-06-05 03:06:00\",\n          \"2024-04-30 10:28:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":84}],"source":["contacts_df"]},{"cell_type":"code","execution_count":85,"metadata":{"id":"MPbibPSVnL4R","executionInfo":{"status":"ok","timestamp":1741036455253,"user_tz":-60,"elapsed":2410,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["contacts_df.to_excel(\"Contacts (Result).xlsx\", index=False)"]},{"cell_type":"markdown","metadata":{"id":"1bzFeYLqFCYU"},"source":["============================================================================================\n","\n"]},{"cell_type":"markdown","metadata":{"id":"aimeHKTwP15V"},"source":["##✨ **Data Cleaning `calls_df`**"]},{"cell_type":"code","source":["df_path = '/content/Calls (Done).xlsx'\n","calls_df = load_data(df_path, 'xlsx', dtype={'Id': str, \"CONTACTID\": str})\n","calls_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":327},"id":"lz07Imoktb8E","executionInfo":{"status":"ok","timestamp":1741036476229,"user_tz":-60,"elapsed":21004,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}},"outputId":"fb6c37e9-e6e7-47d1-9c3a-c69971586512"},"execution_count":86,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    Id   Call Start Time Call Owner Name            CONTACTID  \\\n","0  5805028000000805001  30.06.2023 08:43        John Doe                  NaN   \n","1  5805028000000768006  30.06.2023 08:46        John Doe                  NaN   \n","2  5805028000000764027  30.06.2023 08:59        John Doe                  NaN   \n","3  5805028000000787003  30.06.2023 09:20        John Doe  5805028000000645014   \n","4  5805028000000768019  30.06.2023 09:30        John Doe  5805028000000645014   \n","\n","  Call Type  Call Duration (in seconds)       Call Status  Dialled Number  \\\n","0   Inbound                       171.0          Received             NaN   \n","1  Outbound                        28.0  Attended Dialled             NaN   \n","2  Outbound                        24.0  Attended Dialled             NaN   \n","3  Outbound                         6.0  Attended Dialled             NaN   \n","4  Outbound                        11.0  Attended Dialled             NaN   \n","\n","  Outgoing Call Status  Scheduled in CRM  Tag  \n","0                  NaN               NaN  NaN  \n","1            Completed               0.0  NaN  \n","2            Completed               0.0  NaN  \n","3            Completed               0.0  NaN  \n","4            Completed               0.0  NaN  "],"text/html":["\n","  <div id=\"df-7b0f45a3-d785-4555-a677-2a8ac9bbc800\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Call Start Time</th>\n","      <th>Call Owner Name</th>\n","      <th>CONTACTID</th>\n","      <th>Call Type</th>\n","      <th>Call Duration (in seconds)</th>\n","      <th>Call Status</th>\n","      <th>Dialled Number</th>\n","      <th>Outgoing Call Status</th>\n","      <th>Scheduled in CRM</th>\n","      <th>Tag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5805028000000805001</td>\n","      <td>30.06.2023 08:43</td>\n","      <td>John Doe</td>\n","      <td>NaN</td>\n","      <td>Inbound</td>\n","      <td>171.0</td>\n","      <td>Received</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5805028000000768006</td>\n","      <td>30.06.2023 08:46</td>\n","      <td>John Doe</td>\n","      <td>NaN</td>\n","      <td>Outbound</td>\n","      <td>28.0</td>\n","      <td>Attended Dialled</td>\n","      <td>NaN</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5805028000000764027</td>\n","      <td>30.06.2023 08:59</td>\n","      <td>John Doe</td>\n","      <td>NaN</td>\n","      <td>Outbound</td>\n","      <td>24.0</td>\n","      <td>Attended Dialled</td>\n","      <td>NaN</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5805028000000787003</td>\n","      <td>30.06.2023 09:20</td>\n","      <td>John Doe</td>\n","      <td>5805028000000645014</td>\n","      <td>Outbound</td>\n","      <td>6.0</td>\n","      <td>Attended Dialled</td>\n","      <td>NaN</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5805028000000768019</td>\n","      <td>30.06.2023 09:30</td>\n","      <td>John Doe</td>\n","      <td>5805028000000645014</td>\n","      <td>Outbound</td>\n","      <td>11.0</td>\n","      <td>Attended Dialled</td>\n","      <td>NaN</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7b0f45a3-d785-4555-a677-2a8ac9bbc800')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7b0f45a3-d785-4555-a677-2a8ac9bbc800 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7b0f45a3-d785-4555-a677-2a8ac9bbc800');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0329332c-ddeb-4a20-bf99-01707bde7889\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0329332c-ddeb-4a20-bf99-01707bde7889')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0329332c-ddeb-4a20-bf99-01707bde7889 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"calls_df","summary":"{\n  \"name\": \"calls_df\",\n  \"rows\": 95874,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 95874,\n        \"samples\": [\n          \"5805028000018777278\",\n          \"5805028000043843571\",\n          \"5805028000033264965\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Start Time\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 68445,\n        \"samples\": [\n          \"16.01.2024 17:32\",\n          \"04.06.2024 10:41\",\n          \"18.01.2024 13:27\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Owner Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"Derek James\",\n          \"Nina Scott\",\n          \"Yara Edwards\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CONTACTID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15214,\n        \"samples\": [\n          \"5805028000005696083\",\n          \"5805028000045296949\",\n          \"5805028000034214589\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Inbound\",\n          \"Outbound\",\n          \"Missed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Duration (in seconds)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 401.41082622308244,\n        \"min\": 0.0,\n        \"max\": 7625.0,\n        \"num_unique_values\": 2619,\n        \"samples\": [\n          1933.0,\n          1742.0,\n          269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"Scheduled Unattended\",\n          \"Received\",\n          \"Scheduled Attended Delay\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dialled Number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outgoing Call Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Scheduled in CRM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.040396527848836294,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tag\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":86}]},{"cell_type":"code","execution_count":87,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":88,"status":"ok","timestamp":1741036476311,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"2Wmh1ysAP_FD","outputId":"07f23692-8c34-4618-fc9d-6ba2b00d5a2c"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 95874 entries, 0 to 95873\n","Data columns (total 11 columns):\n"," #   Column                      Non-Null Count  Dtype  \n","---  ------                      --------------  -----  \n"," 0   Id                          95874 non-null  object \n"," 1   Call Start Time             95874 non-null  object \n"," 2   Call Owner Name             95874 non-null  object \n"," 3   CONTACTID                   91941 non-null  object \n"," 4   Call Type                   95874 non-null  object \n"," 5   Call Duration (in seconds)  95791 non-null  float64\n"," 6   Call Status                 95874 non-null  object \n"," 7   Dialled Number              0 non-null      float64\n"," 8   Outgoing Call Status        86875 non-null  object \n"," 9   Scheduled in CRM            86875 non-null  float64\n"," 10  Tag                         0 non-null      float64\n","dtypes: float64(4), object(7)\n","memory usage: 8.0+ MB\n"]}],"source":["calls_df.info()"]},{"cell_type":"code","execution_count":88,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":78,"status":"ok","timestamp":1741036476329,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"BVmkEQKgchTt","outputId":"ee0ff794-6ded-4b0c-c6f5-500a95ab5911"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Call Duration (in seconds)  Dialled Number  Scheduled in CRM  Tag\n","count                95791.000000             0.0      86875.000000  0.0\n","mean                   164.977263             NaN          0.001635  NaN\n","std                    401.410826             NaN          0.040397  NaN\n","min                      0.000000             NaN          0.000000  NaN\n","25%                      4.000000             NaN          0.000000  NaN\n","50%                      8.000000             NaN          0.000000  NaN\n","75%                     98.000000             NaN          0.000000  NaN\n","max                   7625.000000             NaN          1.000000  NaN"],"text/html":["\n","  <div id=\"df-9fae6ef3-e453-423f-97a2-458a59439ba4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Call Duration (in seconds)</th>\n","      <th>Dialled Number</th>\n","      <th>Scheduled in CRM</th>\n","      <th>Tag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>95791.000000</td>\n","      <td>0.0</td>\n","      <td>86875.000000</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>164.977263</td>\n","      <td>NaN</td>\n","      <td>0.001635</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>401.410826</td>\n","      <td>NaN</td>\n","      <td>0.040397</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>4.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>8.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>98.000000</td>\n","      <td>NaN</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>7625.000000</td>\n","      <td>NaN</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9fae6ef3-e453-423f-97a2-458a59439ba4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9fae6ef3-e453-423f-97a2-458a59439ba4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9fae6ef3-e453-423f-97a2-458a59439ba4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dbf910e1-6fc6-4b57-a4db-965bd3fe4f22\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dbf910e1-6fc6-4b57-a4db-965bd3fe4f22')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dbf910e1-6fc6-4b57-a4db-965bd3fe4f22 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"calls_df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Call Duration (in seconds)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33551.349091215074,\n        \"min\": 0.0,\n        \"max\": 95791.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          164.9772629996555,\n          8.0,\n          95791.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dialled Number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Scheduled in CRM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 30714.89817924291,\n        \"min\": 0.0,\n        \"max\": 86875.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.0016345323741007193\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tag\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":88}],"source":["calls_df.describe()"]},{"cell_type":"markdown","metadata":{"id":"12mVM-PbWfjb"},"source":["---\n","## Removing duplicates\n","---"]},{"cell_type":"code","execution_count":89,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":131,"status":"ok","timestamp":1741036476461,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"UhhNZog2QKDy","outputId":"02b26398-5314-4aef-ab79-658720533058"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["3257"]},"metadata":{},"execution_count":89}],"source":["calls_df.duplicated(subset=calls_df.columns[1:]).sum()"]},{"cell_type":"code","execution_count":90,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":649},"executionInfo":{"elapsed":156,"status":"ok","timestamp":1741036476612,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"P4o328S_XDAw","outputId":"b48db8e5-5c0b-4d36-c994-116dccf3dc94"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Id   Call Start Time Call Owner Name  \\\n","34     5805028000001140014  06.07.2023 17:15   Alice Johnson   \n","35     5805028000001167001  06.07.2023 17:15   Alice Johnson   \n","101    5805028000001372054  08.07.2023 16:43        John Doe   \n","102    5805028000001348077  08.07.2023 16:43        John Doe   \n","254    5805028000001568042  12.07.2023 19:23      Jane Smith   \n","...                    ...               ...             ...   \n","95804  5805028000056832311  21.06.2024 14:17    Yara Edwards   \n","95833  5805028000056845313  21.06.2024 14:47   Ulysses Adams   \n","95834  5805028000056873560  21.06.2024 14:47   Ulysses Adams   \n","95838  5805028000056834447  21.06.2024 14:55        John Doe   \n","95839  5805028000056892435  21.06.2024 14:55        John Doe   \n","\n","                 CONTACTID Call Type  Call Duration (in seconds)  \\\n","34     5805028000001129001  Outbound                         0.0   \n","35     5805028000001129001  Outbound                         0.0   \n","101                    NaN    Missed                         0.0   \n","102                    NaN    Missed                         0.0   \n","254    5805028000001552025  Outbound                         0.0   \n","...                    ...       ...                         ...   \n","95804                  NaN  Outbound                         8.0   \n","95833  5805028000026041053  Outbound                         0.0   \n","95834  5805028000026041053  Outbound                         0.0   \n","95838                  NaN    Missed                         0.0   \n","95839                  NaN    Missed                         0.0   \n","\n","              Call Status  Dialled Number Outgoing Call Status  \\\n","34     Unattended Dialled             NaN            Completed   \n","35     Unattended Dialled             NaN            Completed   \n","101                Missed             NaN                  NaN   \n","102                Missed             NaN                  NaN   \n","254    Unattended Dialled             NaN            Completed   \n","...                   ...             ...                  ...   \n","95804    Attended Dialled             NaN            Completed   \n","95833  Unattended Dialled             NaN            Completed   \n","95834  Unattended Dialled             NaN            Completed   \n","95838              Missed             NaN                  NaN   \n","95839              Missed             NaN                  NaN   \n","\n","       Scheduled in CRM  Tag  \n","34                  0.0  NaN  \n","35                  0.0  NaN  \n","101                 NaN  NaN  \n","102                 NaN  NaN  \n","254                 0.0  NaN  \n","...                 ...  ...  \n","95804               0.0  NaN  \n","95833               0.0  NaN  \n","95834               0.0  NaN  \n","95838               NaN  NaN  \n","95839               NaN  NaN  \n","\n","[6382 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-538fb820-7444-40e7-917d-de415c1b232d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Call Start Time</th>\n","      <th>Call Owner Name</th>\n","      <th>CONTACTID</th>\n","      <th>Call Type</th>\n","      <th>Call Duration (in seconds)</th>\n","      <th>Call Status</th>\n","      <th>Dialled Number</th>\n","      <th>Outgoing Call Status</th>\n","      <th>Scheduled in CRM</th>\n","      <th>Tag</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>34</th>\n","      <td>5805028000001140014</td>\n","      <td>06.07.2023 17:15</td>\n","      <td>Alice Johnson</td>\n","      <td>5805028000001129001</td>\n","      <td>Outbound</td>\n","      <td>0.0</td>\n","      <td>Unattended Dialled</td>\n","      <td>NaN</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>5805028000001167001</td>\n","      <td>06.07.2023 17:15</td>\n","      <td>Alice Johnson</td>\n","      <td>5805028000001129001</td>\n","      <td>Outbound</td>\n","      <td>0.0</td>\n","      <td>Unattended Dialled</td>\n","      <td>NaN</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>101</th>\n","      <td>5805028000001372054</td>\n","      <td>08.07.2023 16:43</td>\n","      <td>John Doe</td>\n","      <td>NaN</td>\n","      <td>Missed</td>\n","      <td>0.0</td>\n","      <td>Missed</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>5805028000001348077</td>\n","      <td>08.07.2023 16:43</td>\n","      <td>John Doe</td>\n","      <td>NaN</td>\n","      <td>Missed</td>\n","      <td>0.0</td>\n","      <td>Missed</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>254</th>\n","      <td>5805028000001568042</td>\n","      <td>12.07.2023 19:23</td>\n","      <td>Jane Smith</td>\n","      <td>5805028000001552025</td>\n","      <td>Outbound</td>\n","      <td>0.0</td>\n","      <td>Unattended Dialled</td>\n","      <td>NaN</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95804</th>\n","      <td>5805028000056832311</td>\n","      <td>21.06.2024 14:17</td>\n","      <td>Yara Edwards</td>\n","      <td>NaN</td>\n","      <td>Outbound</td>\n","      <td>8.0</td>\n","      <td>Attended Dialled</td>\n","      <td>NaN</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>95833</th>\n","      <td>5805028000056845313</td>\n","      <td>21.06.2024 14:47</td>\n","      <td>Ulysses Adams</td>\n","      <td>5805028000026041053</td>\n","      <td>Outbound</td>\n","      <td>0.0</td>\n","      <td>Unattended Dialled</td>\n","      <td>NaN</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>95834</th>\n","      <td>5805028000056873560</td>\n","      <td>21.06.2024 14:47</td>\n","      <td>Ulysses Adams</td>\n","      <td>5805028000026041053</td>\n","      <td>Outbound</td>\n","      <td>0.0</td>\n","      <td>Unattended Dialled</td>\n","      <td>NaN</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>95838</th>\n","      <td>5805028000056834447</td>\n","      <td>21.06.2024 14:55</td>\n","      <td>John Doe</td>\n","      <td>NaN</td>\n","      <td>Missed</td>\n","      <td>0.0</td>\n","      <td>Missed</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>95839</th>\n","      <td>5805028000056892435</td>\n","      <td>21.06.2024 14:55</td>\n","      <td>John Doe</td>\n","      <td>NaN</td>\n","      <td>Missed</td>\n","      <td>0.0</td>\n","      <td>Missed</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6382 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-538fb820-7444-40e7-917d-de415c1b232d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-538fb820-7444-40e7-917d-de415c1b232d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-538fb820-7444-40e7-917d-de415c1b232d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-80dfd693-c8e1-4940-a98a-a9368cb0b6ec\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-80dfd693-c8e1-4940-a98a-a9368cb0b6ec')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-80dfd693-c8e1-4940-a98a-a9368cb0b6ec button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"calls_df[calls_df\",\n  \"rows\": 6382,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 6382,\n        \"samples\": [\n          \"5805028000016109078\",\n          \"5805028000050696417\",\n          \"5805028000037270028\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Start Time\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3041,\n        \"samples\": [\n          \"26.09.2023 12:15\",\n          \"05.06.2024 17:25\",\n          \"27.08.2023 12:27\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Owner Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 28,\n        \"samples\": [\n          \"Julia Nelson\",\n          \"Cara Iverson\",\n          \"George King\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CONTACTID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2310,\n        \"samples\": [\n          \"5805028000046521338\",\n          \"5805028000019951551\",\n          \"5805028000042431102\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Outbound\",\n          \"Missed\",\n          \"Inbound\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Duration (in seconds)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 100.42434110414521,\n        \"min\": 0.0,\n        \"max\": 2885.0,\n        \"num_unique_values\": 112,\n        \"samples\": [\n          234.0,\n          31.0,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"Unattended Dialled\",\n          \"Missed\",\n          \"Received\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Dialled Number\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outgoing Call Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Scheduled in CRM\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.044609892391540375,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Tag\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":90}],"source":["calls_df[calls_df.duplicated(keep=False, subset=calls_df.columns[1:])]"]},{"cell_type":"code","execution_count":91,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":157,"status":"ok","timestamp":1741036476770,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"ZmuuItglX9u2","outputId":"cae1e80e-3e5b-48c6-ed87-7dd18649758b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0, 11)"]},"metadata":{},"execution_count":91}],"source":["calls_df.drop_duplicates(subset=calls_df.columns[1:], inplace=True)\n","\n","calls_df[calls_df.duplicated(subset=calls_df.columns[1:])].shape"]},{"cell_type":"markdown","metadata":{"id":"DMIusU2VX9u3"},"source":["---\n","## Processing Missing Values and Data Type Conversions\n","---"]},{"cell_type":"code","execution_count":92,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":429},"executionInfo":{"elapsed":128,"status":"ok","timestamp":1741036476901,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"Ft9kfQRbX9u3","outputId":"673ec390-0bf2-45b5-e0b5-aa1e37ba9d1c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Id                                0\n","Call Start Time                   0\n","Call Owner Name                   0\n","CONTACTID                      3802\n","Call Type                         0\n","Call Duration (in seconds)       79\n","Call Status                       0\n","Dialled Number                92617\n","Outgoing Call Status           8813\n","Scheduled in CRM               8813\n","Tag                           92617\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Call Start Time</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Call Owner Name</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>CONTACTID</th>\n","      <td>3802</td>\n","    </tr>\n","    <tr>\n","      <th>Call Type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Call Duration (in seconds)</th>\n","      <td>79</td>\n","    </tr>\n","    <tr>\n","      <th>Call Status</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Dialled Number</th>\n","      <td>92617</td>\n","    </tr>\n","    <tr>\n","      <th>Outgoing Call Status</th>\n","      <td>8813</td>\n","    </tr>\n","    <tr>\n","      <th>Scheduled in CRM</th>\n","      <td>8813</td>\n","    </tr>\n","    <tr>\n","      <th>Tag</th>\n","      <td>92617</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":92}],"source":["calls_df.isna().sum()"]},{"cell_type":"markdown","metadata":{"id":"801fRWaERSWk"},"source":["#### ☑ columns'Dialled Number' and 'Tag' - remove columns as all values ​​are NaN\n","\n"]},{"cell_type":"code","execution_count":93,"metadata":{"id":"TE2zTgu-ZF63","executionInfo":{"status":"ok","timestamp":1741036476906,"user_tz":-60,"elapsed":3,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["calls_df = calls_df.drop(columns=['Dialled Number', 'Tag'])"]},{"cell_type":"code","execution_count":94,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1741036476932,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"maOu9wPLaU3N","outputId":"459d10dc-9899-4e84-c31c-9ccf6eeb071a"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 92617 entries, 0 to 95873\n","Data columns (total 9 columns):\n"," #   Column                      Non-Null Count  Dtype  \n","---  ------                      --------------  -----  \n"," 0   Id                          92617 non-null  object \n"," 1   Call Start Time             92617 non-null  object \n"," 2   Call Owner Name             92617 non-null  object \n"," 3   CONTACTID                   88815 non-null  object \n"," 4   Call Type                   92617 non-null  object \n"," 5   Call Duration (in seconds)  92538 non-null  float64\n"," 6   Call Status                 92617 non-null  object \n"," 7   Outgoing Call Status        83804 non-null  object \n"," 8   Scheduled in CRM            83804 non-null  float64\n","dtypes: float64(2), object(7)\n","memory usage: 7.1+ MB\n"]}],"source":["calls_df.info()"]},{"cell_type":"code","execution_count":95,"metadata":{"id":"bRJUsYWsTNc5","executionInfo":{"status":"ok","timestamp":1741036477165,"user_tz":-60,"elapsed":235,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["calls_df['Call Start Time'] = pd.to_datetime(calls_df['Call Start Time'], format='%d.%m.%Y %H:%M', dayfirst=True, errors='raise')"]},{"cell_type":"code","execution_count":96,"metadata":{"id":"VVbELsjRbQBO","executionInfo":{"status":"ok","timestamp":1741036477238,"user_tz":-60,"elapsed":71,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["category_columns = ['Call Owner Name', 'Call Type', 'Call Status', 'Outgoing Call Status', 'Scheduled in CRM']\n","\n","for col in category_columns:\n","    calls_df[col] = calls_df[col].astype('category')\n","\n","for col in ['Outgoing Call Status', 'Scheduled in CRM']:\n","    if 'Unknown' not in calls_df[col].cat.categories:\n","        calls_df[col] = calls_df[col].cat.add_categories(['Unknown'])\n","    calls_df[col] = calls_df[col].fillna('Unknown')"]},{"cell_type":"code","execution_count":97,"metadata":{"id":"Jv5gVazFhOay","executionInfo":{"status":"ok","timestamp":1741036477249,"user_tz":-60,"elapsed":8,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["calls_df[\"CONTACTID\"] = calls_df[\"CONTACTID\"].fillna(\"Unknown\")"]},{"cell_type":"markdown","metadata":{"id":"pYl7jq3gX9u3"},"source":["---\n","## Results Output\n","---"]},{"cell_type":"code","execution_count":98,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":310},"executionInfo":{"elapsed":289,"status":"ok","timestamp":1741036477536,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"oEe-uiA_X9u3","outputId":"c5bf3ac6-bc37-4500-f2ac-a9dcba30e222"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    Id     Call Start Time Call Owner Name  \\\n","0  5805028000000805001 2023-06-30 08:43:00        John Doe   \n","1  5805028000000768006 2023-06-30 08:46:00        John Doe   \n","2  5805028000000764027 2023-06-30 08:59:00        John Doe   \n","3  5805028000000787003 2023-06-30 09:20:00        John Doe   \n","4  5805028000000768019 2023-06-30 09:30:00        John Doe   \n","\n","             CONTACTID Call Type  Call Duration (in seconds)  \\\n","0              Unknown   Inbound                       171.0   \n","1              Unknown  Outbound                        28.0   \n","2              Unknown  Outbound                        24.0   \n","3  5805028000000645014  Outbound                         6.0   \n","4  5805028000000645014  Outbound                        11.0   \n","\n","        Call Status Outgoing Call Status Scheduled in CRM  \n","0          Received              Unknown          Unknown  \n","1  Attended Dialled            Completed              0.0  \n","2  Attended Dialled            Completed              0.0  \n","3  Attended Dialled            Completed              0.0  \n","4  Attended Dialled            Completed              0.0  "],"text/html":["\n","  <div id=\"df-3d75ab8f-a9f3-459c-be30-6a8918cf0a36\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Call Start Time</th>\n","      <th>Call Owner Name</th>\n","      <th>CONTACTID</th>\n","      <th>Call Type</th>\n","      <th>Call Duration (in seconds)</th>\n","      <th>Call Status</th>\n","      <th>Outgoing Call Status</th>\n","      <th>Scheduled in CRM</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5805028000000805001</td>\n","      <td>2023-06-30 08:43:00</td>\n","      <td>John Doe</td>\n","      <td>Unknown</td>\n","      <td>Inbound</td>\n","      <td>171.0</td>\n","      <td>Received</td>\n","      <td>Unknown</td>\n","      <td>Unknown</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5805028000000768006</td>\n","      <td>2023-06-30 08:46:00</td>\n","      <td>John Doe</td>\n","      <td>Unknown</td>\n","      <td>Outbound</td>\n","      <td>28.0</td>\n","      <td>Attended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5805028000000764027</td>\n","      <td>2023-06-30 08:59:00</td>\n","      <td>John Doe</td>\n","      <td>Unknown</td>\n","      <td>Outbound</td>\n","      <td>24.0</td>\n","      <td>Attended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5805028000000787003</td>\n","      <td>2023-06-30 09:20:00</td>\n","      <td>John Doe</td>\n","      <td>5805028000000645014</td>\n","      <td>Outbound</td>\n","      <td>6.0</td>\n","      <td>Attended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5805028000000768019</td>\n","      <td>2023-06-30 09:30:00</td>\n","      <td>John Doe</td>\n","      <td>5805028000000645014</td>\n","      <td>Outbound</td>\n","      <td>11.0</td>\n","      <td>Attended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d75ab8f-a9f3-459c-be30-6a8918cf0a36')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3d75ab8f-a9f3-459c-be30-6a8918cf0a36 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3d75ab8f-a9f3-459c-be30-6a8918cf0a36');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-40594275-89a6-4b0e-abb4-1fff9093bb71\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-40594275-89a6-4b0e-abb4-1fff9093bb71')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-40594275-89a6-4b0e-abb4-1fff9093bb71 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"calls_df","summary":"{\n  \"name\": \"calls_df\",\n  \"rows\": 92617,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 92617,\n        \"samples\": [\n          \"5805028000028756317\",\n          \"5805028000034060340\",\n          \"5805028000023526468\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Start Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-06-30 08:43:00\",\n        \"max\": \"2024-06-21 15:31:00\",\n        \"num_unique_values\": 68445,\n        \"samples\": [\n          \"2024-01-16 17:32:00\",\n          \"2024-06-04 10:41:00\",\n          \"2024-01-18 13:27:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Owner Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"Derek James\",\n          \"Nina Scott\",\n          \"Yara Edwards\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CONTACTID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15215,\n        \"samples\": [\n          \"5805028000005572074\",\n          \"5805028000017925790\",\n          \"5805028000034214589\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Inbound\",\n          \"Outbound\",\n          \"Missed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Duration (in seconds)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 406.9444676259001,\n        \"min\": 0.0,\n        \"max\": 7625.0,\n        \"num_unique_values\": 2619,\n        \"samples\": [\n          1933.0,\n          1742.0,\n          269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"Scheduled Unattended\",\n          \"Received\",\n          \"Scheduled Attended Delay\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outgoing Call Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Completed\",\n          \"Scheduled\",\n          \"Cancelled\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Scheduled in CRM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Unknown\",\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":98}],"source":["calls_df.head()"]},{"cell_type":"code","execution_count":99,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":59,"status":"ok","timestamp":1741036477637,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"jGzzZEjwX9u3","outputId":"e4cc4ca1-f757-4f92-bd7d-452422c0de39"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 92617 entries, 0 to 95873\n","Data columns (total 9 columns):\n"," #   Column                      Non-Null Count  Dtype         \n","---  ------                      --------------  -----         \n"," 0   Id                          92617 non-null  object        \n"," 1   Call Start Time             92617 non-null  datetime64[ns]\n"," 2   Call Owner Name             92617 non-null  category      \n"," 3   CONTACTID                   92617 non-null  object        \n"," 4   Call Type                   92617 non-null  category      \n"," 5   Call Duration (in seconds)  92538 non-null  float64       \n"," 6   Call Status                 92617 non-null  category      \n"," 7   Outgoing Call Status        92617 non-null  category      \n"," 8   Scheduled in CRM            92617 non-null  category      \n","dtypes: category(5), datetime64[ns](1), float64(1), object(2)\n","memory usage: 4.0+ MB\n"]}],"source":["calls_df.info()"]},{"cell_type":"code","execution_count":100,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":614},"executionInfo":{"elapsed":256,"status":"ok","timestamp":1741036477895,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"Rdomn_oEX9u4","outputId":"798ddd51-8009-4fb9-f6c9-91f6e04f84c6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Id     Call Start Time Call Owner Name  \\\n","0      5805028000000805001 2023-06-30 08:43:00        John Doe   \n","1      5805028000000768006 2023-06-30 08:46:00        John Doe   \n","2      5805028000000764027 2023-06-30 08:59:00        John Doe   \n","3      5805028000000787003 2023-06-30 09:20:00        John Doe   \n","4      5805028000000768019 2023-06-30 09:30:00        John Doe   \n","...                    ...                 ...             ...   \n","95869  5805028000056889515 2024-06-21 15:30:00   Ulysses Adams   \n","95870  5805028000056875317 2024-06-21 15:30:00   Victor Barnes   \n","95871  5805028000056832495 2024-06-21 15:30:00    Kevin Parker   \n","95872  5805028000056893619 2024-06-21 15:30:00   Victor Barnes   \n","95873  5805028000056893631 2024-06-21 15:31:00        John Doe   \n","\n","                 CONTACTID Call Type  Call Duration (in seconds)  \\\n","0                  Unknown   Inbound                       171.0   \n","1                  Unknown  Outbound                        28.0   \n","2                  Unknown  Outbound                        24.0   \n","3      5805028000000645014  Outbound                         6.0   \n","4      5805028000000645014  Outbound                        11.0   \n","...                    ...       ...                         ...   \n","95869  5805028000056564231  Outbound                         6.0   \n","95870  5805028000054867023  Outbound                         8.0   \n","95871  5805028000010617278  Outbound                         5.0   \n","95872  5805028000056839048  Outbound                         0.0   \n","95873              Unknown    Missed                         0.0   \n","\n","              Call Status Outgoing Call Status Scheduled in CRM  \n","0                Received              Unknown          Unknown  \n","1        Attended Dialled            Completed              0.0  \n","2        Attended Dialled            Completed              0.0  \n","3        Attended Dialled            Completed              0.0  \n","4        Attended Dialled            Completed              0.0  \n","...                   ...                  ...              ...  \n","95869    Attended Dialled            Completed              0.0  \n","95870    Attended Dialled            Completed              0.0  \n","95871    Attended Dialled            Completed              0.0  \n","95872  Unattended Dialled            Completed              0.0  \n","95873              Missed              Unknown          Unknown  \n","\n","[92617 rows x 9 columns]"],"text/html":["\n","  <div id=\"df-347d5d6f-f0f7-486c-9751-1762d6d2c122\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Call Start Time</th>\n","      <th>Call Owner Name</th>\n","      <th>CONTACTID</th>\n","      <th>Call Type</th>\n","      <th>Call Duration (in seconds)</th>\n","      <th>Call Status</th>\n","      <th>Outgoing Call Status</th>\n","      <th>Scheduled in CRM</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5805028000000805001</td>\n","      <td>2023-06-30 08:43:00</td>\n","      <td>John Doe</td>\n","      <td>Unknown</td>\n","      <td>Inbound</td>\n","      <td>171.0</td>\n","      <td>Received</td>\n","      <td>Unknown</td>\n","      <td>Unknown</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5805028000000768006</td>\n","      <td>2023-06-30 08:46:00</td>\n","      <td>John Doe</td>\n","      <td>Unknown</td>\n","      <td>Outbound</td>\n","      <td>28.0</td>\n","      <td>Attended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5805028000000764027</td>\n","      <td>2023-06-30 08:59:00</td>\n","      <td>John Doe</td>\n","      <td>Unknown</td>\n","      <td>Outbound</td>\n","      <td>24.0</td>\n","      <td>Attended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5805028000000787003</td>\n","      <td>2023-06-30 09:20:00</td>\n","      <td>John Doe</td>\n","      <td>5805028000000645014</td>\n","      <td>Outbound</td>\n","      <td>6.0</td>\n","      <td>Attended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5805028000000768019</td>\n","      <td>2023-06-30 09:30:00</td>\n","      <td>John Doe</td>\n","      <td>5805028000000645014</td>\n","      <td>Outbound</td>\n","      <td>11.0</td>\n","      <td>Attended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95869</th>\n","      <td>5805028000056889515</td>\n","      <td>2024-06-21 15:30:00</td>\n","      <td>Ulysses Adams</td>\n","      <td>5805028000056564231</td>\n","      <td>Outbound</td>\n","      <td>6.0</td>\n","      <td>Attended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>95870</th>\n","      <td>5805028000056875317</td>\n","      <td>2024-06-21 15:30:00</td>\n","      <td>Victor Barnes</td>\n","      <td>5805028000054867023</td>\n","      <td>Outbound</td>\n","      <td>8.0</td>\n","      <td>Attended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>95871</th>\n","      <td>5805028000056832495</td>\n","      <td>2024-06-21 15:30:00</td>\n","      <td>Kevin Parker</td>\n","      <td>5805028000010617278</td>\n","      <td>Outbound</td>\n","      <td>5.0</td>\n","      <td>Attended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>95872</th>\n","      <td>5805028000056893619</td>\n","      <td>2024-06-21 15:30:00</td>\n","      <td>Victor Barnes</td>\n","      <td>5805028000056839048</td>\n","      <td>Outbound</td>\n","      <td>0.0</td>\n","      <td>Unattended Dialled</td>\n","      <td>Completed</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>95873</th>\n","      <td>5805028000056893631</td>\n","      <td>2024-06-21 15:31:00</td>\n","      <td>John Doe</td>\n","      <td>Unknown</td>\n","      <td>Missed</td>\n","      <td>0.0</td>\n","      <td>Missed</td>\n","      <td>Unknown</td>\n","      <td>Unknown</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>92617 rows × 9 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-347d5d6f-f0f7-486c-9751-1762d6d2c122')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-347d5d6f-f0f7-486c-9751-1762d6d2c122 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-347d5d6f-f0f7-486c-9751-1762d6d2c122');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-06f82494-2045-4d5f-a34b-045b794f783b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-06f82494-2045-4d5f-a34b-045b794f783b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-06f82494-2045-4d5f-a34b-045b794f783b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_1a79c201-fed2-4cb8-a812-655a3a834909\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('calls_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_1a79c201-fed2-4cb8-a812-655a3a834909 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('calls_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"calls_df","summary":"{\n  \"name\": \"calls_df\",\n  \"rows\": 92617,\n  \"fields\": [\n    {\n      \"column\": \"Id\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 92617,\n        \"samples\": [\n          \"5805028000028756317\",\n          \"5805028000034060340\",\n          \"5805028000023526468\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Start Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-06-30 08:43:00\",\n        \"max\": \"2024-06-21 15:31:00\",\n        \"num_unique_values\": 68445,\n        \"samples\": [\n          \"2024-01-16 17:32:00\",\n          \"2024-06-04 10:41:00\",\n          \"2024-01-18 13:27:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Owner Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 33,\n        \"samples\": [\n          \"Derek James\",\n          \"Nina Scott\",\n          \"Yara Edwards\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CONTACTID\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15215,\n        \"samples\": [\n          \"5805028000005572074\",\n          \"5805028000017925790\",\n          \"5805028000034214589\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Inbound\",\n          \"Outbound\",\n          \"Missed\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Duration (in seconds)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 406.9444676259001,\n        \"min\": 0.0,\n        \"max\": 7625.0,\n        \"num_unique_values\": 2619,\n        \"samples\": [\n          1933.0,\n          1742.0,\n          269.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"Scheduled Unattended\",\n          \"Received\",\n          \"Scheduled Attended Delay\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Outgoing Call Status\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Completed\",\n          \"Scheduled\",\n          \"Cancelled\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Scheduled in CRM\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Unknown\",\n          0.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":100}],"source":["calls_df"]},{"cell_type":"code","execution_count":101,"metadata":{"id":"2-UGhtHrX9u4","executionInfo":{"status":"ok","timestamp":1741036499255,"user_tz":-60,"elapsed":21358,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["calls_df.to_excel(\"Calls (Result).xlsx\", index=False)"]},{"cell_type":"markdown","metadata":{"id":"B79gzLwpTuIE"},"source":["============================================================================================"]},{"cell_type":"markdown","metadata":{"id":"C1PQYNv_iOhU"},"source":["##✨ **Data Cleaning `spend_df`**\n","\n","\n"]},{"cell_type":"code","source":["df_path = '/content/Spend (Done).xlsx'\n","spend_df = load_data(df_path, 'xlsx')\n","spend_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"0ZXpKSTutti6","executionInfo":{"status":"ok","timestamp":1741036501949,"user_tz":-60,"elapsed":2689,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}},"outputId":"41d4dd6d-5ba2-440c-8528-6b73dcbe018f"},"execution_count":102,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date        Source               Campaign  Impressions  Spend  Clicks  \\\n","0 2023-07-03    Google Ads         gen_analyst_DE            6   0.00       0   \n","1 2023-07-03    Google Ads  performancemax_eng_DE            4   0.01       1   \n","2 2023-07-03  Facebook Ads                    NaN            0   0.00       0   \n","3 2023-07-03    Google Ads                    NaN            0   0.00       0   \n","4 2023-07-03           CRM                    NaN            0   0.00       0   \n","\n","  AdGroup   Ad  \n","0     NaN  NaN  \n","1     NaN  NaN  \n","2     NaN  NaN  \n","3     NaN  NaN  \n","4     NaN  NaN  "],"text/html":["\n","  <div id=\"df-b17710c8-9c0d-4dc8-b90f-b0ecf5dd1aa7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Source</th>\n","      <th>Campaign</th>\n","      <th>Impressions</th>\n","      <th>Spend</th>\n","      <th>Clicks</th>\n","      <th>AdGroup</th>\n","      <th>Ad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-07-03</td>\n","      <td>Google Ads</td>\n","      <td>gen_analyst_DE</td>\n","      <td>6</td>\n","      <td>0.00</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-07-03</td>\n","      <td>Google Ads</td>\n","      <td>performancemax_eng_DE</td>\n","      <td>4</td>\n","      <td>0.01</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-07-03</td>\n","      <td>Facebook Ads</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-07-03</td>\n","      <td>Google Ads</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-07-03</td>\n","      <td>CRM</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0.00</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b17710c8-9c0d-4dc8-b90f-b0ecf5dd1aa7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b17710c8-9c0d-4dc8-b90f-b0ecf5dd1aa7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b17710c8-9c0d-4dc8-b90f-b0ecf5dd1aa7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-22ac34b3-fe0c-4048-9188-a02652966aa3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-22ac34b3-fe0c-4048-9188-a02652966aa3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-22ac34b3-fe0c-4048-9188-a02652966aa3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"spend_df","summary":"{\n  \"name\": \"spend_df\",\n  \"rows\": 20779,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-03 00:00:00\",\n        \"max\": \"2024-06-21 00:00:00\",\n        \"num_unique_values\": 355,\n        \"samples\": [\n          \"2024-02-15 00:00:00\",\n          \"2023-08-14 00:00:00\",\n          \"2024-03-15 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Source\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Webinar\",\n          \"Partnership\",\n          \"Google Ads\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Campaign\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 51,\n        \"samples\": [\n          \"08.04.24wide_webinar_DE\",\n          \"1performancemax_wide_PL\",\n          \"20.05.24interests_DE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impressions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11442,\n        \"min\": 0,\n        \"max\": 431445,\n        \"num_unique_values\": 4003,\n        \"samples\": [\n          511,\n          1427,\n          1012\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spend\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 26.76008045583134,\n        \"min\": 0.0,\n        \"max\": 774.0,\n        \"num_unique_values\": 2859,\n        \"samples\": [\n          11.78,\n          69.39,\n          2.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clicks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 85,\n        \"min\": 0,\n        \"max\": 2415,\n        \"num_unique_values\": 552,\n        \"samples\": [\n          376,\n          73,\n          49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AdGroup\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"LAL1\",\n          \"retargeting\",\n          \"women\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ad\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 176,\n        \"samples\": [\n          \"v8com\",\n          \"v11com\",\n          \"bloggervideo1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":102}]},{"cell_type":"code","execution_count":103,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1741036501951,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"cR7DZ8J4iOhV","outputId":"75003085-53cb-4c05-d6ad-8872b4ccc2a1"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 20779 entries, 0 to 20778\n","Data columns (total 8 columns):\n"," #   Column       Non-Null Count  Dtype         \n","---  ------       --------------  -----         \n"," 0   Date         20779 non-null  datetime64[ns]\n"," 1   Source       20779 non-null  object        \n"," 2   Campaign     14785 non-null  object        \n"," 3   Impressions  20779 non-null  int64         \n"," 4   Spend        20779 non-null  float64       \n"," 5   Clicks       20779 non-null  int64         \n"," 6   AdGroup      13951 non-null  object        \n"," 7   Ad           13951 non-null  object        \n","dtypes: datetime64[ns](1), float64(1), int64(2), object(4)\n","memory usage: 1.3+ MB\n"]}],"source":["spend_df.info()"]},{"cell_type":"markdown","metadata":{"id":"Ev_VNv4WiOhW"},"source":["---\n","## Data Type Conversions\n","---"]},{"cell_type":"code","execution_count":104,"metadata":{"id":"Eth_CNm3iOhW","executionInfo":{"status":"ok","timestamp":1741036501953,"user_tz":-60,"elapsed":8,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["spend_df['Source'] = spend_df['Source'].astype('category')\n","spend_df['Campaign'] = spend_df['Campaign'].fillna('Unknown').astype('category')"]},{"cell_type":"markdown","metadata":{"id":"Ro-TpUP-iOhX"},"source":["### Removing duplicates"]},{"cell_type":"code","execution_count":105,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20,"status":"ok","timestamp":1741036501967,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"4ldF80v1iOhX","outputId":"35c25b02-80be-45ac-9fd1-c80b3a418aa0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["5722"]},"metadata":{},"execution_count":105}],"source":["spend_df.duplicated(subset=spend_df.columns[1:]).sum()"]},{"cell_type":"code","execution_count":106,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":62,"status":"ok","timestamp":1741036502030,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"HJ_76oN2iOhX","outputId":"e129ef29-55f2-4f32-f765-0db5b65f6928"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date          Source Campaign  Impressions  Spend  Clicks AdGroup  \\\n","2     2023-07-03    Facebook Ads  Unknown            0    0.0       0     NaN   \n","3     2023-07-03      Google Ads  Unknown            0    0.0       0     NaN   \n","4     2023-07-03             CRM  Unknown            0    0.0       0     NaN   \n","7     2023-07-03        Bloggers  Unknown            0    0.0       0     NaN   \n","8     2023-07-03     Youtube Ads  Unknown            0    0.0       0     NaN   \n","...          ...             ...      ...          ...    ...     ...     ...   \n","20764 2024-06-21  Telegram posts  Unknown            0    0.0       0     NaN   \n","20770 2024-06-21         Organic  Unknown            0    0.0       0     NaN   \n","20773 2024-06-21         Organic  Unknown            0    0.0       0     NaN   \n","20776 2024-06-21     Partnership  Unknown            0    0.0       0     NaN   \n","20777 2024-06-21      Tiktok Ads  Unknown            0    0.0       0     NaN   \n","\n","        Ad  \n","2      NaN  \n","3      NaN  \n","4      NaN  \n","7      NaN  \n","8      NaN  \n","...    ...  \n","20764  NaN  \n","20770  NaN  \n","20773  NaN  \n","20776  NaN  \n","20777  NaN  \n","\n","[6367 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-a2b75799-5f92-425f-a50b-ce83994af70b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Source</th>\n","      <th>Campaign</th>\n","      <th>Impressions</th>\n","      <th>Spend</th>\n","      <th>Clicks</th>\n","      <th>AdGroup</th>\n","      <th>Ad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-07-03</td>\n","      <td>Facebook Ads</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-07-03</td>\n","      <td>Google Ads</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-07-03</td>\n","      <td>CRM</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2023-07-03</td>\n","      <td>Bloggers</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2023-07-03</td>\n","      <td>Youtube Ads</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20764</th>\n","      <td>2024-06-21</td>\n","      <td>Telegram posts</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20770</th>\n","      <td>2024-06-21</td>\n","      <td>Organic</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20773</th>\n","      <td>2024-06-21</td>\n","      <td>Organic</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20776</th>\n","      <td>2024-06-21</td>\n","      <td>Partnership</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>20777</th>\n","      <td>2024-06-21</td>\n","      <td>Tiktok Ads</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6367 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a2b75799-5f92-425f-a50b-ce83994af70b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a2b75799-5f92-425f-a50b-ce83994af70b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a2b75799-5f92-425f-a50b-ce83994af70b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c1ac7dca-5a63-47a4-8ec4-e2a0eb477b6c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c1ac7dca-5a63-47a4-8ec4-e2a0eb477b6c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c1ac7dca-5a63-47a4-8ec4-e2a0eb477b6c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"spend_df[spend_df\",\n  \"rows\": 6367,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-03 00:00:00\",\n        \"max\": \"2024-06-21 00:00:00\",\n        \"num_unique_values\": 355,\n        \"samples\": [\n          \"2024-02-15 00:00:00\",\n          \"2023-08-14 00:00:00\",\n          \"2024-03-15 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Source\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Webinar\",\n          \"Partnership\",\n          \"Facebook Ads\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Campaign\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 27,\n        \"samples\": [\n          \"24.07.2023wide_DE\",\n          \"24.09.23retargeting_DE\",\n          \"07.07.23LAL_DE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impressions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 44,\n        \"min\": 0,\n        \"max\": 1061,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          32,\n          100,\n          81\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spend\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.542505591555851,\n        \"min\": 0.0,\n        \"max\": 50.0,\n        \"num_unique_values\": 20,\n        \"samples\": [\n          0.0,\n          0.11,\n          0.22\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clicks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32,\n        \"min\": 0,\n        \"max\": 303,\n        \"num_unique_values\": 148,\n        \"samples\": [\n          274,\n          14,\n          116\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AdGroup\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"interest_programming_WebDev\",\n          \"retargeting\",\n          \"interest_dataanalytics \\u2013 Copy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ad\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 85,\n        \"samples\": [\n          \"bloggersvideo19com\",\n          \"b3\",\n          \"v14com_at\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":106}],"source":["spend_df[spend_df.duplicated(keep=False, subset=spend_df.columns[1:])]"]},{"cell_type":"code","execution_count":107,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":43,"status":"ok","timestamp":1741036502075,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"9qhcFixhiOhY","outputId":"57dacff7-5d66-4537-ee11-f154e744600a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0, 8)"]},"metadata":{},"execution_count":107}],"source":["spend_df.drop_duplicates(subset=spend_df.columns[1:], inplace=True)\n","\n","spend_df[spend_df.duplicated(subset=spend_df.columns[1:])].shape"]},{"cell_type":"markdown","metadata":{"id":"HvRM21vwiOhY"},"source":["---\n","### Processing Missing Values\n","---"]},{"cell_type":"code","execution_count":108,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"executionInfo":{"elapsed":14,"status":"ok","timestamp":1741036502077,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"h7T6IiNh9Pnc","outputId":"b356bd09-5466-4ebc-e8dc-ce0e5c4e06e3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date              0\n","Source            0\n","Campaign          0\n","Impressions       0\n","Spend             0\n","Clicks            0\n","AdGroup        2087\n","Ad             2087\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Source</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Campaign</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Impressions</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Spend</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Clicks</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>AdGroup</th>\n","      <td>2087</td>\n","    </tr>\n","    <tr>\n","      <th>Ad</th>\n","      <td>2087</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":108}],"source":["spend_df.isna().sum()"]},{"cell_type":"code","execution_count":109,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1741036502081,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"7e-j-cxfiOhY","outputId":"603983ab-2b20-491b-c059-293c1e99cef0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Date              0\n","Source            0\n","Campaign          0\n","Impressions     533\n","Spend          1153\n","Clicks         4024\n","AdGroup        2087\n","Ad             2087\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Source</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Campaign</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Impressions</th>\n","      <td>533</td>\n","    </tr>\n","    <tr>\n","      <th>Spend</th>\n","      <td>1153</td>\n","    </tr>\n","    <tr>\n","      <th>Clicks</th>\n","      <td>4024</td>\n","    </tr>\n","    <tr>\n","      <th>AdGroup</th>\n","      <td>2087</td>\n","    </tr>\n","    <tr>\n","      <th>Ad</th>\n","      <td>2087</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":109}],"source":["(spend_df.isna().sum() + (spend_df == 0).sum())"]},{"cell_type":"code","execution_count":110,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":93,"status":"ok","timestamp":1741036502175,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"xQNkvrUF9sC7","outputId":"87345400-8c5f-4eae-9c37-05c15534b8fe"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Spend                 Campaign  Impressions  Clicks\n","2        0.00                  Unknown            0       0\n","3        0.00                  Unknown            0       0\n","4        0.00                  Unknown            0       0\n","7        0.00                  Unknown            0       0\n","8        0.00                  Unknown            0       0\n","...       ...                      ...          ...     ...\n","20642    0.00  08.04.24wide_webinar_DE            0       0\n","20643    0.00  08.04.24wide_webinar_DE            0       0\n","20712    4.25                  Unknown            0       0\n","20755  200.00                  Unknown            0       0\n","20763   74.25                  Unknown            0       0\n","\n","[533 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-72e9f307-0398-4717-86ed-6884b7a0434f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Spend</th>\n","      <th>Campaign</th>\n","      <th>Impressions</th>\n","      <th>Clicks</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>0.00</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.00</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.00</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.00</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.00</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20642</th>\n","      <td>0.00</td>\n","      <td>08.04.24wide_webinar_DE</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20643</th>\n","      <td>0.00</td>\n","      <td>08.04.24wide_webinar_DE</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20712</th>\n","      <td>4.25</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20755</th>\n","      <td>200.00</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20763</th>\n","      <td>74.25</td>\n","      <td>Unknown</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>533 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-72e9f307-0398-4717-86ed-6884b7a0434f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-72e9f307-0398-4717-86ed-6884b7a0434f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-72e9f307-0398-4717-86ed-6884b7a0434f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7b9032c4-94d0-41e5-ba00-6c9b36114e5b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7b9032c4-94d0-41e5-ba00-6c9b36114e5b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7b9032c4-94d0-41e5-ba00-6c9b36114e5b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"spend_df[spend_df['Impressions']== 0][['Spend', 'Campaign', 'Impressions', 'Clicks']]\",\n  \"rows\": 533,\n  \"fields\": [\n    {\n      \"column\": \"Spend\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 76.01972693569442,\n        \"min\": 0.0,\n        \"max\": 750.0,\n        \"num_unique_values\": 18,\n        \"samples\": [\n          0.0,\n          100.0,\n          640.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Campaign\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 20,\n        \"samples\": [\n          \"Unknown\",\n          \"20.03.2024wide_PL\",\n          \"24.09.23retargeting_DE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impressions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clicks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 93,\n        \"min\": 0,\n        \"max\": 715,\n        \"num_unique_values\": 252,\n        \"samples\": [\n          134\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":110}],"source":["spend_df[spend_df['Impressions']== 0][['Spend', 'Campaign', 'Impressions', 'Clicks']]"]},{"cell_type":"code","execution_count":111,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1741036502184,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"3-1Eubsl-zS8","outputId":"034bafc2-40b4-491a-f40b-3247e1bf8eeb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Spend           7238.5\n","Impressions        0.0\n","Clicks         44486.0\n","dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Spend</th>\n","      <td>7238.5</td>\n","    </tr>\n","    <tr>\n","      <th>Impressions</th>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>Clicks</th>\n","      <td>44486.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":111}],"source":["spend_df[spend_df['Impressions']== 0][['Spend', 'Impressions', 'Clicks']].sum()"]},{"cell_type":"code","execution_count":112,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1741036502200,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"qe-5Og4-_cLE","outputId":"423305ae-9b9c-48d3-c816-b4a9e171a8b5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Spend  Impressions  Clicks\n","2        0.0            0       0\n","3        0.0            0       0\n","4        0.0            0       0\n","7        0.0            0       0\n","8        0.0            0       0\n","...      ...          ...     ...\n","20572    0.0            0       0\n","20610    0.0            0       0\n","20616    0.0            0       0\n","20642    0.0            0       0\n","20643    0.0            0       0\n","\n","[90 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-8265ea2e-3ed6-4c15-8122-0d52c57b9b88\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Spend</th>\n","      <th>Impressions</th>\n","      <th>Clicks</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20572</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20610</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20616</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20642</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20643</th>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>90 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8265ea2e-3ed6-4c15-8122-0d52c57b9b88')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8265ea2e-3ed6-4c15-8122-0d52c57b9b88 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8265ea2e-3ed6-4c15-8122-0d52c57b9b88');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-360d988d-e5f6-4615-a0e1-075aaf2f4850\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-360d988d-e5f6-4615-a0e1-075aaf2f4850')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-360d988d-e5f6-4615-a0e1-075aaf2f4850 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"spend_df[(spend_df[['Spend', 'Impressions', 'Clicks']] == 0)\",\n  \"rows\": 90,\n  \"fields\": [\n    {\n      \"column\": \"Spend\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.0,\n        \"max\": 0.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impressions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clicks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":112}],"source":["spend_df[(spend_df[['Spend', 'Impressions', 'Clicks']] == 0).all(axis=1)][['Spend', 'Impressions', 'Clicks']]"]},{"cell_type":"markdown","source":["#### ☑ We remove rows where Spend, Impressions, and Clicks are all zero, as they do not provide useful information and may distort data analysis."],"metadata":{"id":"ymWLgnNS2XOw"}},{"cell_type":"code","execution_count":113,"metadata":{"id":"cIE1c-YcAd26","executionInfo":{"status":"ok","timestamp":1741036502339,"user_tz":-60,"elapsed":135,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["spend_df = spend_df[~(spend_df[['Spend', 'Impressions', 'Clicks']] == 0).all(axis=1)]"]},{"cell_type":"code","execution_count":114,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":53},"executionInfo":{"elapsed":51,"status":"ok","timestamp":1741036502342,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"vHTrXAg3CYMh","outputId":"38c4f2a3-e35b-47d4-af78-c39036e2dee8"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Empty DataFrame\n","Columns: [Spend, Impressions, Clicks]\n","Index: []"],"text/html":["\n","  <div id=\"df-8460582c-429c-48eb-bafe-31d5822b6c34\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Spend</th>\n","      <th>Impressions</th>\n","      <th>Clicks</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8460582c-429c-48eb-bafe-31d5822b6c34')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8460582c-429c-48eb-bafe-31d5822b6c34 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8460582c-429c-48eb-bafe-31d5822b6c34');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"spend_df[(spend_df[['Spend', 'Impressions', 'Clicks']] == 0)\",\n  \"rows\": 0,\n  \"fields\": [\n    {\n      \"column\": \"Spend\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impressions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clicks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":114}],"source":["spend_df[(spend_df[['Spend', 'Impressions', 'Clicks']] == 0).all(axis=1)][['Spend', 'Impressions', 'Clicks']]"]},{"cell_type":"code","execution_count":115,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":21,"status":"ok","timestamp":1741036502364,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"1bXSQG6riOha","outputId":"f053b124-5806-4fd9-fb41-02e636b2c27f"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 14967 entries, 0 to 20778\n","Data columns (total 8 columns):\n"," #   Column       Non-Null Count  Dtype         \n","---  ------       --------------  -----         \n"," 0   Date         14967 non-null  datetime64[ns]\n"," 1   Source       14967 non-null  category      \n"," 2   Campaign     14967 non-null  category      \n"," 3   Impressions  14967 non-null  int64         \n"," 4   Spend        14967 non-null  float64       \n"," 5   Clicks       14967 non-null  int64         \n"," 6   AdGroup      12894 non-null  object        \n"," 7   Ad           12894 non-null  object        \n","dtypes: category(2), datetime64[ns](1), float64(1), int64(2), object(2)\n","memory usage: 850.9+ KB\n"]}],"source":["spend_df.info()"]},{"cell_type":"markdown","metadata":{"id":"jFnnMEHHiOhb"},"source":["---\n","### Results Output\n","---"]},{"cell_type":"code","execution_count":116,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1741036502373,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"X7NdZ_uziOhb","outputId":"24866bbd-b467-4625-bd1f-fbfa7ead5a08"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Date        Source               Campaign  Impressions  Spend  Clicks  \\\n","0 2023-07-03    Google Ads         gen_analyst_DE            6   0.00       0   \n","1 2023-07-03    Google Ads  performancemax_eng_DE            4   0.01       1   \n","5 2023-07-03  Facebook Ads          03.07.23women          187   3.30       6   \n","6 2023-07-03  Facebook Ads          03.07.23women            4   0.02       1   \n","9 2023-07-03  Facebook Ads        02.07.23wide_DE           61   0.58       0   \n","\n","  AdGroup   Ad  \n","0     NaN  NaN  \n","1     NaN  NaN  \n","5   women   b3  \n","6   women   b1  \n","9    wide   b4  "],"text/html":["\n","  <div id=\"df-a8316f81-f223-46be-9080-c0eb7caaf5f5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Source</th>\n","      <th>Campaign</th>\n","      <th>Impressions</th>\n","      <th>Spend</th>\n","      <th>Clicks</th>\n","      <th>AdGroup</th>\n","      <th>Ad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-07-03</td>\n","      <td>Google Ads</td>\n","      <td>gen_analyst_DE</td>\n","      <td>6</td>\n","      <td>0.00</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-07-03</td>\n","      <td>Google Ads</td>\n","      <td>performancemax_eng_DE</td>\n","      <td>4</td>\n","      <td>0.01</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2023-07-03</td>\n","      <td>Facebook Ads</td>\n","      <td>03.07.23women</td>\n","      <td>187</td>\n","      <td>3.30</td>\n","      <td>6</td>\n","      <td>women</td>\n","      <td>b3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2023-07-03</td>\n","      <td>Facebook Ads</td>\n","      <td>03.07.23women</td>\n","      <td>4</td>\n","      <td>0.02</td>\n","      <td>1</td>\n","      <td>women</td>\n","      <td>b1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2023-07-03</td>\n","      <td>Facebook Ads</td>\n","      <td>02.07.23wide_DE</td>\n","      <td>61</td>\n","      <td>0.58</td>\n","      <td>0</td>\n","      <td>wide</td>\n","      <td>b4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a8316f81-f223-46be-9080-c0eb7caaf5f5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a8316f81-f223-46be-9080-c0eb7caaf5f5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a8316f81-f223-46be-9080-c0eb7caaf5f5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d925d7ef-fd68-4231-a796-6f02cce6ee00\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d925d7ef-fd68-4231-a796-6f02cce6ee00')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d925d7ef-fd68-4231-a796-6f02cce6ee00 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"spend_df","summary":"{\n  \"name\": \"spend_df\",\n  \"rows\": 14967,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-03 00:00:00\",\n        \"max\": \"2024-06-21 00:00:00\",\n        \"num_unique_values\": 355,\n        \"samples\": [\n          \"2024-02-15 00:00:00\",\n          \"2023-08-14 00:00:00\",\n          \"2024-03-15 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Source\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Webinar\",\n          \"Partnership\",\n          \"Google Ads\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Campaign\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"discovery_DE\",\n          \"1performancemax_wide_PL\",\n          \"20.05.24interests_DE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impressions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13361,\n        \"min\": 0,\n        \"max\": 431445,\n        \"num_unique_values\": 4003,\n        \"samples\": [\n          511,\n          1427,\n          1012\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spend\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31.077729382241078,\n        \"min\": 0.0,\n        \"max\": 774.0,\n        \"num_unique_values\": 2859,\n        \"samples\": [\n          11.78,\n          69.39,\n          2.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clicks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 98,\n        \"min\": 0,\n        \"max\": 2415,\n        \"num_unique_values\": 552,\n        \"samples\": [\n          376,\n          73,\n          49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AdGroup\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"LAL1\",\n          \"retargeting\",\n          \"women\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ad\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 176,\n        \"samples\": [\n          \"v8com\",\n          \"v11com\",\n          \"bloggervideo1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":116}],"source":["spend_df.head()"]},{"cell_type":"code","execution_count":117,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":68,"status":"ok","timestamp":1741036502444,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"3yUiDo3liOhb","outputId":"4fd72fa4-c2e6-4f78-f494-a0d94d2e1ef4"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 14967 entries, 0 to 20778\n","Data columns (total 8 columns):\n"," #   Column       Non-Null Count  Dtype         \n","---  ------       --------------  -----         \n"," 0   Date         14967 non-null  datetime64[ns]\n"," 1   Source       14967 non-null  category      \n"," 2   Campaign     14967 non-null  category      \n"," 3   Impressions  14967 non-null  int64         \n"," 4   Spend        14967 non-null  float64       \n"," 5   Clicks       14967 non-null  int64         \n"," 6   AdGroup      12894 non-null  object        \n"," 7   Ad           12894 non-null  object        \n","dtypes: category(2), datetime64[ns](1), float64(1), int64(2), object(2)\n","memory usage: 850.9+ KB\n"]}],"source":["spend_df.info()"]},{"cell_type":"code","execution_count":118,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":29,"status":"ok","timestamp":1741036502475,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"lcXUgwAaiOhc","outputId":"5ca9f214-53ff-4dfb-d2cb-ead1caba4a7b"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Date        Source                  Campaign  Impressions  Spend  \\\n","0     2023-07-03    Google Ads            gen_analyst_DE            6   0.00   \n","1     2023-07-03    Google Ads     performancemax_eng_DE            4   0.01   \n","5     2023-07-03  Facebook Ads             03.07.23women          187   3.30   \n","6     2023-07-03  Facebook Ads             03.07.23women            4   0.02   \n","9     2023-07-03  Facebook Ads           02.07.23wide_DE           61   0.58   \n","...          ...           ...                       ...          ...    ...   \n","20771 2024-06-21    Tiktok Ads         22.05.2024wide_DE            7   0.03   \n","20772 2024-06-21   Youtube Ads         youtube_shorts_DE           90   0.51   \n","20774 2024-06-21  Facebook Ads           17.03.24wide_AT            7   0.07   \n","20775 2024-06-21    Tiktok Ads         12.07.2023wide_DE           61   0.16   \n","20778 2024-06-21  Facebook Ads  04.07.23recentlymoved_DE            7   0.05   \n","\n","       Clicks        AdGroup                     Ad  \n","0           0            NaN                    NaN  \n","1           1            NaN                    NaN  \n","5           6          women                     b3  \n","6           1          women                     b1  \n","9           0           wide                     b4  \n","...       ...            ...                    ...  \n","20771       0           wide     bloggersvideo18com  \n","20772       2     Com_august     bloggersvideo3june  \n","20774       0           wide  bloggersvideo16com_at  \n","20775       0           wide     bloggersvideo14com  \n","20778       1  recentlymoved     bloggersvideo14com  \n","\n","[14967 rows x 8 columns]"],"text/html":["\n","  <div id=\"df-ab5dbfe6-6104-441b-8706-4639ecfe7e40\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Source</th>\n","      <th>Campaign</th>\n","      <th>Impressions</th>\n","      <th>Spend</th>\n","      <th>Clicks</th>\n","      <th>AdGroup</th>\n","      <th>Ad</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-07-03</td>\n","      <td>Google Ads</td>\n","      <td>gen_analyst_DE</td>\n","      <td>6</td>\n","      <td>0.00</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-07-03</td>\n","      <td>Google Ads</td>\n","      <td>performancemax_eng_DE</td>\n","      <td>4</td>\n","      <td>0.01</td>\n","      <td>1</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2023-07-03</td>\n","      <td>Facebook Ads</td>\n","      <td>03.07.23women</td>\n","      <td>187</td>\n","      <td>3.30</td>\n","      <td>6</td>\n","      <td>women</td>\n","      <td>b3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2023-07-03</td>\n","      <td>Facebook Ads</td>\n","      <td>03.07.23women</td>\n","      <td>4</td>\n","      <td>0.02</td>\n","      <td>1</td>\n","      <td>women</td>\n","      <td>b1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2023-07-03</td>\n","      <td>Facebook Ads</td>\n","      <td>02.07.23wide_DE</td>\n","      <td>61</td>\n","      <td>0.58</td>\n","      <td>0</td>\n","      <td>wide</td>\n","      <td>b4</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>20771</th>\n","      <td>2024-06-21</td>\n","      <td>Tiktok Ads</td>\n","      <td>22.05.2024wide_DE</td>\n","      <td>7</td>\n","      <td>0.03</td>\n","      <td>0</td>\n","      <td>wide</td>\n","      <td>bloggersvideo18com</td>\n","    </tr>\n","    <tr>\n","      <th>20772</th>\n","      <td>2024-06-21</td>\n","      <td>Youtube Ads</td>\n","      <td>youtube_shorts_DE</td>\n","      <td>90</td>\n","      <td>0.51</td>\n","      <td>2</td>\n","      <td>Com_august</td>\n","      <td>bloggersvideo3june</td>\n","    </tr>\n","    <tr>\n","      <th>20774</th>\n","      <td>2024-06-21</td>\n","      <td>Facebook Ads</td>\n","      <td>17.03.24wide_AT</td>\n","      <td>7</td>\n","      <td>0.07</td>\n","      <td>0</td>\n","      <td>wide</td>\n","      <td>bloggersvideo16com_at</td>\n","    </tr>\n","    <tr>\n","      <th>20775</th>\n","      <td>2024-06-21</td>\n","      <td>Tiktok Ads</td>\n","      <td>12.07.2023wide_DE</td>\n","      <td>61</td>\n","      <td>0.16</td>\n","      <td>0</td>\n","      <td>wide</td>\n","      <td>bloggersvideo14com</td>\n","    </tr>\n","    <tr>\n","      <th>20778</th>\n","      <td>2024-06-21</td>\n","      <td>Facebook Ads</td>\n","      <td>04.07.23recentlymoved_DE</td>\n","      <td>7</td>\n","      <td>0.05</td>\n","      <td>1</td>\n","      <td>recentlymoved</td>\n","      <td>bloggersvideo14com</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>14967 rows × 8 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab5dbfe6-6104-441b-8706-4639ecfe7e40')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ab5dbfe6-6104-441b-8706-4639ecfe7e40 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ab5dbfe6-6104-441b-8706-4639ecfe7e40');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-60225351-3c11-4a85-8a6f-eaf5eb75d8bc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-60225351-3c11-4a85-8a6f-eaf5eb75d8bc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-60225351-3c11-4a85-8a6f-eaf5eb75d8bc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_4d598425-1830-433e-8b17-d44263c797a8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('spend_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_4d598425-1830-433e-8b17-d44263c797a8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('spend_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"spend_df","summary":"{\n  \"name\": \"spend_df\",\n  \"rows\": 14967,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-07-03 00:00:00\",\n        \"max\": \"2024-06-21 00:00:00\",\n        \"num_unique_values\": 355,\n        \"samples\": [\n          \"2024-02-15 00:00:00\",\n          \"2023-08-14 00:00:00\",\n          \"2024-03-15 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Source\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 14,\n        \"samples\": [\n          \"Webinar\",\n          \"Partnership\",\n          \"Google Ads\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Campaign\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"discovery_DE\",\n          \"1performancemax_wide_PL\",\n          \"20.05.24interests_DE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impressions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13361,\n        \"min\": 0,\n        \"max\": 431445,\n        \"num_unique_values\": 4003,\n        \"samples\": [\n          511,\n          1427,\n          1012\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spend\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 31.077729382241078,\n        \"min\": 0.0,\n        \"max\": 774.0,\n        \"num_unique_values\": 2859,\n        \"samples\": [\n          11.78,\n          69.39,\n          2.13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clicks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 98,\n        \"min\": 0,\n        \"max\": 2415,\n        \"num_unique_values\": 552,\n        \"samples\": [\n          376,\n          73,\n          49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"AdGroup\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 24,\n        \"samples\": [\n          \"LAL1\",\n          \"retargeting\",\n          \"women\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ad\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 176,\n        \"samples\": [\n          \"v8com\",\n          \"v11com\",\n          \"bloggervideo1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":118}],"source":["spend_df"]},{"cell_type":"code","execution_count":119,"metadata":{"id":"R5sdiajGiOhd","executionInfo":{"status":"ok","timestamp":1741036505384,"user_tz":-60,"elapsed":2916,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["spend_df.to_excel(\"Spend (Result).xlsx\", index=False)"]},{"cell_type":"code","execution_count":120,"metadata":{"id":"8-8wD8N3qf1h","executionInfo":{"status":"ok","timestamp":1741036508041,"user_tz":-60,"elapsed":2691,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["contacts_df.to_excel(\"Contacts (Result).xlsx\", index=False)"]},{"cell_type":"markdown","source":["============================================================================================\n","\n"],"metadata":{"id":"u5rvfCiquJkq"}},{"cell_type":"markdown","metadata":{"id":"3gs6mNEIqf1i"},"source":["##✨ **Data Cleaning `deals_df`**"]},{"cell_type":"code","source":["path = '/content/Deals (Done).xlsx'\n","deals_df = load_data(path, 'xlsx', dtype={'Id': str, 'Contact Name': str})\n","deals_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":377},"id":"ryDP70p0uL_8","executionInfo":{"status":"ok","timestamp":1741036517420,"user_tz":-60,"elapsed":9386,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}},"outputId":"6331ef73-91af-4a1a-ed21-259cc65f92c9"},"execution_count":121,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    Id Deal Owner Name Closing Date            Quality  \\\n","0  5805028000056864695        Ben Hall          NaN                NaN   \n","1  5805028000056859489   Ulysses Adams          NaN                NaN   \n","2  5805028000056832357   Ulysses Adams   21.06.2024     D - Non Target   \n","3  5805028000056824246        Eva Kent   21.06.2024  E - Non Qualified   \n","4  5805028000056873292        Ben Hall   21.06.2024     D - Non Target   \n","\n","      Stage     Lost Reason       Page                  Campaign       SLA  \\\n","0  New Lead             NaN  /eng/test             03.07.23women       NaN   \n","1  New Lead             NaN    /at-eng                       NaN       NaN   \n","2      Lost      Non target    /at-eng                engwien_AT  00:26:43   \n","3      Lost  Invalid number       /eng  04.07.23recentlymoved_DE  01:00:04   \n","4      Lost      Non target       /eng              discovery_DE  00:53:12   \n","\n","              Content  ...        Product Education Type      Created Time  \\\n","0                 v16  ...            NaN            NaN  21.06.2024 15:30   \n","1                 NaN  ...  Web Developer        Morning  21.06.2024 15:23   \n","2               b1-at  ...            NaN            NaN  21.06.2024 14:45   \n","3  bloggersvideo14com  ...            NaN            NaN  21.06.2024 13:32   \n","4             website  ...            NaN            NaN  21.06.2024 13:21   \n","\n","  Course duration Months of study Initial Amount Paid  Offer Total Amount  \\\n","0             NaN             NaN                 NaN                 NaN   \n","1             6.0             NaN                   0                2000   \n","2             NaN             NaN                 NaN                 NaN   \n","3             NaN             NaN                 NaN                 NaN   \n","4             NaN             NaN                 NaN                 NaN   \n","\n","          Contact Name City Level of Deutsch  \n","0  5805028000056849495  NaN              NaN  \n","1  5805028000056834471  NaN              NaN  \n","2  5805028000056854421  NaN              NaN  \n","3  5805028000056889351  NaN              NaN  \n","4  5805028000056876176  NaN              NaN  \n","\n","[5 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-5f88f73a-fd74-43d8-a90e-b9fa7fa2aceb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Deal Owner Name</th>\n","      <th>Closing Date</th>\n","      <th>Quality</th>\n","      <th>Stage</th>\n","      <th>Lost Reason</th>\n","      <th>Page</th>\n","      <th>Campaign</th>\n","      <th>SLA</th>\n","      <th>Content</th>\n","      <th>...</th>\n","      <th>Product</th>\n","      <th>Education Type</th>\n","      <th>Created Time</th>\n","      <th>Course duration</th>\n","      <th>Months of study</th>\n","      <th>Initial Amount Paid</th>\n","      <th>Offer Total Amount</th>\n","      <th>Contact Name</th>\n","      <th>City</th>\n","      <th>Level of Deutsch</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5805028000056864695</td>\n","      <td>Ben Hall</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>New Lead</td>\n","      <td>NaN</td>\n","      <td>/eng/test</td>\n","      <td>03.07.23women</td>\n","      <td>NaN</td>\n","      <td>v16</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>21.06.2024 15:30</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056849495</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5805028000056859489</td>\n","      <td>Ulysses Adams</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>New Lead</td>\n","      <td>NaN</td>\n","      <td>/at-eng</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>Web Developer</td>\n","      <td>Morning</td>\n","      <td>21.06.2024 15:23</td>\n","      <td>6.0</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>2000</td>\n","      <td>5805028000056834471</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5805028000056832357</td>\n","      <td>Ulysses Adams</td>\n","      <td>21.06.2024</td>\n","      <td>D - Non Target</td>\n","      <td>Lost</td>\n","      <td>Non target</td>\n","      <td>/at-eng</td>\n","      <td>engwien_AT</td>\n","      <td>00:26:43</td>\n","      <td>b1-at</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>21.06.2024 14:45</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056854421</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5805028000056824246</td>\n","      <td>Eva Kent</td>\n","      <td>21.06.2024</td>\n","      <td>E - Non Qualified</td>\n","      <td>Lost</td>\n","      <td>Invalid number</td>\n","      <td>/eng</td>\n","      <td>04.07.23recentlymoved_DE</td>\n","      <td>01:00:04</td>\n","      <td>bloggersvideo14com</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>21.06.2024 13:32</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056889351</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5805028000056873292</td>\n","      <td>Ben Hall</td>\n","      <td>21.06.2024</td>\n","      <td>D - Non Target</td>\n","      <td>Lost</td>\n","      <td>Non target</td>\n","      <td>/eng</td>\n","      <td>discovery_DE</td>\n","      <td>00:53:12</td>\n","      <td>website</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>21.06.2024 13:21</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056876176</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f88f73a-fd74-43d8-a90e-b9fa7fa2aceb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5f88f73a-fd74-43d8-a90e-b9fa7fa2aceb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5f88f73a-fd74-43d8-a90e-b9fa7fa2aceb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e4e9bd92-31b7-4869-9a6b-d9dd2cd45710\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e4e9bd92-31b7-4869-9a6b-d9dd2cd45710')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e4e9bd92-31b7-4869-9a6b-d9dd2cd45710 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"deals_df"}},"metadata":{},"execution_count":121}]},{"cell_type":"code","execution_count":122,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":51,"status":"ok","timestamp":1741036517472,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"orYh5b9Vqf1j","outputId":"79a75506-090d-4702-b207-163d4299a02f"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 21595 entries, 0 to 21594\n","Data columns (total 23 columns):\n"," #   Column               Non-Null Count  Dtype  \n","---  ------               --------------  -----  \n"," 0   Id                   21593 non-null  object \n"," 1   Deal Owner Name      21564 non-null  object \n"," 2   Closing Date         14645 non-null  object \n"," 3   Quality              19340 non-null  object \n"," 4   Stage                21593 non-null  object \n"," 5   Lost Reason          16124 non-null  object \n"," 6   Page                 21593 non-null  object \n"," 7   Campaign             16067 non-null  object \n"," 8   SLA                  15533 non-null  object \n"," 9   Content              14147 non-null  object \n"," 10  Term                 12454 non-null  object \n"," 11  Source               21593 non-null  object \n"," 12  Payment Type         496 non-null    object \n"," 13  Product              3592 non-null   object \n"," 14  Education Type       3300 non-null   object \n"," 15  Created Time         21593 non-null  object \n"," 16  Course duration      3587 non-null   float64\n"," 17  Months of study      840 non-null    float64\n"," 18  Initial Amount Paid  4165 non-null   object \n"," 19  Offer Total Amount   4185 non-null   object \n"," 20  Contact Name         21532 non-null  object \n"," 21  City                 2511 non-null   object \n"," 22  Level of Deutsch     1251 non-null   object \n","dtypes: float64(2), object(21)\n","memory usage: 3.8+ MB\n"]}],"source":["deals_df.info()"]},{"cell_type":"code","execution_count":123,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":359},"executionInfo":{"elapsed":38,"status":"ok","timestamp":1741036517509,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"bDtCiUQTXiqX","outputId":"1a6fee36-c962-480a-881e-5a48c3261029"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Id Deal Owner Name Closing Date            Quality  \\\n","21590  5805028000000945016      Jane Smith   29.08.2023           A - High   \n","21591  5805028000000927004       Bob Brown   09.07.2023     D - Non Target   \n","21592  5805028000000922001       Bob Brown   03.07.2023  E - Non Qualified   \n","21593                  NaN             NaN          NaN                NaN   \n","21594                  NaN             NaN          NaN                NaN   \n","\n","      Stage             Lost Reason                   Page         Campaign  \\\n","21590  Lost        Changed Decision  eng/digital-marketing  02.07.23wide_DE   \n","21591  Lost  Does not speak English  eng/digital-marketing    03.07.23women   \n","21592  Lost                 Refugee                      /              NaN   \n","21593   NaN                     NaN                    NaN              NaN   \n","21594   NaN                     NaN                    NaN              NaN   \n","\n","                     SLA Content  ... Product Education Type  \\\n","21590  56 days, 19:01:59      b3  ...     NaN            NaN   \n","21591                NaN      b3  ...     NaN            NaN   \n","21592   4 days, 22:47:14     NaN  ...     NaN            NaN   \n","21593                NaN     NaN  ...     NaN            NaN   \n","21594                NaN     NaN  ...     NaN          #REF!   \n","\n","           Created Time Course duration Months of study Initial Amount Paid  \\\n","21590  03.07.2023 20:39             NaN             NaN                 NaN   \n","21591  03.07.2023 20:17             NaN             NaN                 NaN   \n","21592  03.07.2023 17:03             NaN             NaN                   0   \n","21593               NaN             NaN             NaN                 NaN   \n","21594               NaN             NaN             NaN                 NaN   \n","\n","       Offer Total Amount         Contact Name City Level of Deutsch  \n","21590                 NaN  5805028000000968001  NaN              NaN  \n","21591                 NaN  5805028000000961001  NaN              NaN  \n","21592                   0  5805028000001009140  NaN              NaN  \n","21593                 NaN                  NaN  NaN              NaN  \n","21594                 NaN                  NaN  NaN              NaN  \n","\n","[5 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-ae414640-486b-491b-a771-9f6f3c2e8407\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Deal Owner Name</th>\n","      <th>Closing Date</th>\n","      <th>Quality</th>\n","      <th>Stage</th>\n","      <th>Lost Reason</th>\n","      <th>Page</th>\n","      <th>Campaign</th>\n","      <th>SLA</th>\n","      <th>Content</th>\n","      <th>...</th>\n","      <th>Product</th>\n","      <th>Education Type</th>\n","      <th>Created Time</th>\n","      <th>Course duration</th>\n","      <th>Months of study</th>\n","      <th>Initial Amount Paid</th>\n","      <th>Offer Total Amount</th>\n","      <th>Contact Name</th>\n","      <th>City</th>\n","      <th>Level of Deutsch</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>21590</th>\n","      <td>5805028000000945016</td>\n","      <td>Jane Smith</td>\n","      <td>29.08.2023</td>\n","      <td>A - High</td>\n","      <td>Lost</td>\n","      <td>Changed Decision</td>\n","      <td>eng/digital-marketing</td>\n","      <td>02.07.23wide_DE</td>\n","      <td>56 days, 19:01:59</td>\n","      <td>b3</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>03.07.2023 20:39</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000000968001</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>21591</th>\n","      <td>5805028000000927004</td>\n","      <td>Bob Brown</td>\n","      <td>09.07.2023</td>\n","      <td>D - Non Target</td>\n","      <td>Lost</td>\n","      <td>Does not speak English</td>\n","      <td>eng/digital-marketing</td>\n","      <td>03.07.23women</td>\n","      <td>NaN</td>\n","      <td>b3</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>03.07.2023 20:17</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000000961001</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>21592</th>\n","      <td>5805028000000922001</td>\n","      <td>Bob Brown</td>\n","      <td>03.07.2023</td>\n","      <td>E - Non Qualified</td>\n","      <td>Lost</td>\n","      <td>Refugee</td>\n","      <td>/</td>\n","      <td>NaN</td>\n","      <td>4 days, 22:47:14</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>03.07.2023 17:03</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5805028000001009140</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>21593</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>21594</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>#REF!</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae414640-486b-491b-a771-9f6f3c2e8407')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ae414640-486b-491b-a771-9f6f3c2e8407 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ae414640-486b-491b-a771-9f6f3c2e8407');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dd76c150-6089-418f-9832-02782e4e9d1d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dd76c150-6089-418f-9832-02782e4e9d1d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dd76c150-6089-418f-9832-02782e4e9d1d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":123}],"source":["deals_df.tail()"]},{"cell_type":"markdown","metadata":{"id":"kpkCyVbDjT_7"},"source":["#### ☑ Removed rows with missing values in the 'Id' column to ensure data integrity and avoid errors in analysis"]},{"cell_type":"code","execution_count":124,"metadata":{"id":"CMlo1czwh2CW","executionInfo":{"status":"ok","timestamp":1741036517559,"user_tz":-60,"elapsed":47,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["deals_df.dropna(subset=[\"Id\"], inplace=True)"]},{"cell_type":"code","execution_count":125,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1741036517569,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"uCpHVyw7j-IU","outputId":"0477a390-0414-4d97-fd30-8cfe235b435f"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 21593 entries, 0 to 21592\n","Data columns (total 23 columns):\n"," #   Column               Non-Null Count  Dtype  \n","---  ------               --------------  -----  \n"," 0   Id                   21593 non-null  object \n"," 1   Deal Owner Name      21564 non-null  object \n"," 2   Closing Date         14645 non-null  object \n"," 3   Quality              19340 non-null  object \n"," 4   Stage                21593 non-null  object \n"," 5   Lost Reason          16124 non-null  object \n"," 6   Page                 21593 non-null  object \n"," 7   Campaign             16067 non-null  object \n"," 8   SLA                  15533 non-null  object \n"," 9   Content              14147 non-null  object \n"," 10  Term                 12454 non-null  object \n"," 11  Source               21593 non-null  object \n"," 12  Payment Type         496 non-null    object \n"," 13  Product              3592 non-null   object \n"," 14  Education Type       3299 non-null   object \n"," 15  Created Time         21593 non-null  object \n"," 16  Course duration      3587 non-null   float64\n"," 17  Months of study      840 non-null    float64\n"," 18  Initial Amount Paid  4165 non-null   object \n"," 19  Offer Total Amount   4185 non-null   object \n"," 20  Contact Name         21532 non-null  object \n"," 21  City                 2511 non-null   object \n"," 22  Level of Deutsch     1251 non-null   object \n","dtypes: float64(2), object(21)\n","memory usage: 4.0+ MB\n"]}],"source":["deals_df.info()"]},{"cell_type":"markdown","metadata":{"id":"A32pEWa4qf1k"},"source":["---\n","## Data Type Conversions\n","---"]},{"cell_type":"code","execution_count":126,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":17,"status":"ok","timestamp":1741036517617,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"6qFyS3tHqf1k","outputId":"1b658436-9674-4930-ba8c-e9314e9283a2"},"outputs":[{"output_type":"stream","name":"stdout","text":["[nan 0 1000 '€ 3.500,00' 500 100 4500 300 200 2000 11000 4000 3000 3500\n"," 11500 1200 1500 1 5000 600 700 350 9 400 450]\n","[nan 2000 9000 11000 3500 4500 '€ 2.900,00' 6500 4000 3000 10000 2500 5000\n"," 11500 1 1000 1200 0 1500 '€ 11398,00' 11111 6000]\n"]}],"source":["print(deals_df['Initial Amount Paid'].unique())\n","print(deals_df['Offer Total Amount'].unique())"]},{"cell_type":"code","source":["def clean_currency_col(df, col_name):\n","    df[col_name] = (df[col_name]\n","                       .replace(r'[€]', '', regex=True)\n","                       .replace(r'\\s+', '', regex=True)\n","                       .replace(r'\\.', '', regex=True)\n","                       .replace(r',', '.', regex=True)\n","                       .astype(float))\n","    return df"],"metadata":{"id":"x4odP8-itaN9","executionInfo":{"status":"ok","timestamp":1741036517622,"user_tz":-60,"elapsed":3,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"execution_count":127,"outputs":[]},{"cell_type":"code","execution_count":128,"metadata":{"id":"RbOrBspRqf1k","executionInfo":{"status":"ok","timestamp":1741036517696,"user_tz":-60,"elapsed":75,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["deals_df = clean_currency_col(deals_df, 'Initial Amount Paid')\n","deals_df = clean_currency_col(deals_df, 'Offer Total Amount')"]},{"cell_type":"code","execution_count":129,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":489},"executionInfo":{"elapsed":76,"status":"ok","timestamp":1741036517768,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"yylWEI7-yHav","outputId":"cb5ccf69-8a62-4a41-f17d-d573445d39df"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["SLA Seconds\n","611.0       6\n","669.0       6\n","646.0       6\n","697.0       5\n","1028.0      5\n","           ..\n","25870.0     1\n","54028.0     1\n","43761.0     1\n","40467.0     1\n","427634.0    1\n","Name: count, Length: 13357, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>SLA Seconds</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>611.0</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>669.0</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>646.0</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>697.0</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1028.0</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>25870.0</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>54028.0</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>43761.0</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>40467.0</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>427634.0</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>13357 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":129}],"source":["def convert_to_seconds(x):\n","    if pd.isna(x):\n","        return np.nan\n","    elif isinstance(x, datetime.time):\n","        return x.hour * 3600 + x.minute * 60 + x.second\n","    elif isinstance(x, datetime.timedelta):\n","        return x.total_seconds()\n","\n","deals_df['SLA Seconds'] = deals_df[\"SLA\"].apply(convert_to_seconds)\n","deals_df['SLA Seconds'].value_counts()"]},{"cell_type":"code","execution_count":130,"metadata":{"id":"E1LcM6bjzMwO","executionInfo":{"status":"ok","timestamp":1741036517769,"user_tz":-60,"elapsed":9,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["deals_df.drop(columns=['SLA'], inplace=True)"]},{"cell_type":"code","execution_count":131,"metadata":{"id":"7niOq1_dkIcC","executionInfo":{"status":"ok","timestamp":1741036517818,"user_tz":-60,"elapsed":55,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["deals_df['Closing Date'] = pd.to_datetime(deals_df['Closing Date'], format='%d.%m.%Y', dayfirst=True, errors='raise')\n","deals_df['Created Time'] = pd.to_datetime(deals_df['Created Time'], format='%d.%m.%Y %H:%M', dayfirst=True, errors='raise')\n","deals_df[['Course duration', 'Months of study']] = deals_df[['Course duration',  'Months of study']].astype('Int8')"]},{"cell_type":"markdown","metadata":{"id":"cINljhC9jsWb"},"source":["---\n","## Processing Missing Values and Data Standardization\n","---"]},{"cell_type":"markdown","source":["#### ☑ We fill  column with the most common city for each 'Contact Name', imputing missing or inconsistent city values based on the mode for each contact. This helps standardize the data and improve its reliability for analysis."],"metadata":{"id":"d8TzhJJySXEp"}},{"cell_type":"code","execution_count":132,"metadata":{"id":"l8IuP2nzmtGQ","executionInfo":{"status":"ok","timestamp":1741036520620,"user_tz":-60,"elapsed":2800,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["mode_values = deals_df.groupby(\n","    'Contact Name')['City'].agg(lambda x: x.mode()[0] if not x.mode()\\\n","                           .empty else None)\n","deals_df['City'] = deals_df['Contact Name'].map(mode_values)"]},{"cell_type":"markdown","source":["#### ☑ We fill  column with the most common city for each 'Contact Name', imputing missing or inconsistent 'Level of Deutsch' values based on the mode for each contact."],"metadata":{"id":"d2x83sZwXCbR"}},{"cell_type":"code","execution_count":133,"metadata":{"id":"xeHxR77GmrxX","executionInfo":{"status":"ok","timestamp":1741036523323,"user_tz":-60,"elapsed":2671,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["mode_values = deals_df.groupby(\n","    'Contact Name')['Level of Deutsch']\\\n","    .agg(lambda x: x.mode()[0] if not x.mode().empty else None)\n","deals_df['Level of Deutsch'] = deals_df['Contact Name'].map(mode_values)"]},{"cell_type":"markdown","metadata":{"id":"gwECdnHiagJ7"},"source":["#### ☑ We standardize entries in the 'Level of Deutsch' column to unify the data"]},{"cell_type":"code","source":["deals_df['Level of Deutsch'].unique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"C_dZmAGCXi-K","executionInfo":{"status":"ok","timestamp":1741036523363,"user_tz":-60,"elapsed":37,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}},"outputId":"76b8c490-0bf7-47dc-8932-5a2ba6156e08"},"execution_count":134,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([None, 'б1', 'в1', 'A2', 'в2', 'b1', 'В1', 'B1', 'в1-в2', 'А2-В1',\n","       'А2 ( Б1 в июне)', '-', 'B2', 'C2', 'с1', 'Б1', 'Б2',\n","       'b1 ждет результаты', 'а2', 'Б1( может будет)', 'а1', 'С1',\n","       'a2 (b1 экзамен 15 июня)', 'а0', 'б2', 'А2',\n","       'B1 будет в феврале 2025', 'Detmold, Paulinenstraße 95, 32756',\n","       'Сам оценивает на B2, 13 лет живет в Германии', 'В1-В2',\n","       'Б1 ( ждет Б2)',\n","       'lэкзамен - 6 июля на В1. курсы вечером (но уверенно говорит на B1)',\n","       'Гражданка Германии уже год в Германии Учит немецкий и в сентябре b1 через гос-во проходит, а не через ДЖЦ, вечером учится 3 р в неделю с 18 до 21',\n","       'B1 в процессе обучения',\n","       'ЯЗ: нем В1 был экз 03.05 повтор и сейчас ждет результаты. Технический англ был. А1 сейчас. ОБР: 2 во информационные и комп сети - инженер системоте',\n","       'В1 в сентябре', 'Нет', 0, 'Ждем B1', 'А1 сертиф, но по факту А2',\n","       'a2', 'Пока А2, сдает 17 05 B1', 'окончание 13.06 курса на b1',\n","       'A1', 'b2', 'В2', 'Thorn-Prikker-Str. 30, Hagen, 58093',\n","       'нулевой уровень, только пошел на курсы.', 'ая в1',\n","       'Ждет результат по B1', 'Учиться на B1',\n","       'А2 (сдает B1 - 12 дек) - не сдал!', 'ня а2, ая в1', 'гражданка',\n","       'А2( ждет итоги Б!)', 'b1 экзамен будет 12 апреля',\n","       'b1 (b2 ждет серт)', 'С2', 'ждем B1',\n","       'Paderborn 33102, Schwabenweg 10', 'b1 (B2 ждет серт)',\n","       'Ждем B1 со дня на день', 'Б2 ( учит С1)', 'B1 еще нет результата',\n","       '31.05.2024', 'Lichtenfelser Straße 25, Untersiemau 96253',\n","       'Учиться до сентября на B1', 'ждет сертификат B1',\n","       'b1 9ждет экзамен)', 'Б1 ( проходит Б2)', 'В январе - В2 сдает',\n","       '5 июля 2024 сдает экз на В2', 'b1+', 'b1 (ждет результат)',\n","       'Б1 (учит Б2)', 'б2+', 'b1 (ждет серт)', 'Гражданин',\n","       '25 лет живет в Германии', 'С1 -ая , Ня -а1',\n","       'Ждем результат по B1', 'b1 (b2 в июле экзамен)',\n","       'Ждет со дня на день В1',\n","       'А2 (В1 с 3 раза не сдала, бератер видела наши доки)', 'а2-в1',\n","       'не сдавал, но гражданин', 'b1 (ждет результаты)',\n","       'А2 ( повтор на Б1)', 'B1, сдает B2 в апреле',\n","       'b1 (b2 экзамен 2 марта)', 'Б2( 16.02 экзамен С1)',\n","       'b1 (b2 15 марта экзамен)', 'b1 ждет серт на днях на руки', '?',\n","       'А1-А2', 'А2, в процессе Б1',\n","       'Учиться на B1 во вторую смену, в первую хочет получить одобрение на обучение у нас',\n","       'А2 ( скоро екзамен)', nan, 'b1 24 февраля экзамен, англ b2',\n","       'B1 (ждет результаты В2)',\n","       'В январе будут результаты по экзамену на B1',\n","       'b2 (с1 экзамен 16 февраля)', 'Б1 ( ждет итог Б2)',\n","       'Нет сертификатов, но есть С1 англ, неоконченное высшее в ИТ (и еще одно высшее юридическое) , очень хочет в ИТ, сильно замотивирована именно н',\n","       'A0', 'учит A2', 'Б1 ( ждет итог )', 'а2, англ B1',\n","       'НЯ - В1, АЯ - В1', 'б1 (ждет рез-тат)', 'в1 ждем результаты',\n","       'А2(ждет итоги Б1)', 'в1-ня , в1-ая', 'ня-0, но англ B2+',\n","       'b1 экзамен в феврале', 'В', 'А1', 'будет B1 в июне',\n","       'А2( включили нем в ангебот)', 'в2-с1',\n","       'курс А2-В1 - сдача в июле, но вечерняя смена инт курсов, настроен получить гутшайн уже сейчас.',\n","       'B1 (B2 должна до конца февраля получить)',\n","       'b1 (b2 экзамен 6 февраля)', 'A1-A2', 'А2 ( в процессе Б1)',\n","       'b1 ждет экзамен в феврале', 'В1, может уже В2?',\n","       'A2 (идет доучивать В1 - 300 часов; предположительно до августа)',\n","       'не учил', 'Без 5 минут B1 (ждет результаты экзамена)',\n","       'а1-а2 , ая свободный', 'b2-c2', 'А2 нем -В2 англ',\n","       'Проходит сейчас B1', 'Ждет результат по B1 в феврале',\n","       'Проходит сейчас повторно B1', 'Б10Б2', 'Б1?',\n","       'B1 есть, ждем B2 в конце месяца', 'B1-B2', 'b1 экзамен 26 января',\n","       'А0', 'а2 (б1 в сер января)', 'f2',\n","       'Сдала экзамен на B1, ждет в начале февраля результат',\n","       'Сдавал 8 12 на B1 - ждет результат. 3 01 - аплейт - получил B1!',\n","       'Б1-Б2', 'б1 (до июля на В2)', 'А2 ( Б1 март )',\n","       'А2 (весной - еще 300 часов В1)', 'б2 (с1 ждет рез-тат)',\n","       'ня-0, ая-B1', 'А2-Б1', 'B1 (почти, не сдала чуть) + англ В1',\n","       'А2 ( хочет просить совмещать)', 'B1 (ждет результаты)', 'А2+',\n","       'а2 (сдавала экз В1, но не сдала похоже)', 'в1, идет на в2',\n","       'b2-c1', 'C1', 'b1-b2',\n","       'не учила ( разговорный) сразу пошла работать',\n","       'Б1 ( проходит Б2 )', 'a0-a1', 'Б1 ( был екзамен ждет итог )',\n","       'Б2-С1', 'b1 (учила, но не сдала В2)', 'A2 (идет на В1)', 'B2-C2',\n","       'немецкий - а1-а2, англ b1-b2', 'А2 (заканчив В1 в июне)', 90,\n","       'b2 (ждет серт)', 'B2+', 'в1, еще нет сертификата', 'б1-б2', 'Бй',\n","       'ждет результаты по B1 экзамену', 'А2 ( Б2 в процессе)',\n","       'b1 результат экзамена в феврале',\n","       'разговорный из украины, без сертификата', 'никакой',\n","       'в1 , хочет совмещать с в2', '.', 'в1 (уже сдала В2)',\n","       'в1 , экзамен на в2 15 декабря', 'идет на А1', 'УТОЧНИТЬ!',\n","       'B2 (говорит без проблем - давно здесь)', 'B1 (до февраля)', 'C',\n","       'б1 заканчивает', 'B1 (B2 экзамен в январе)', 'a2-б1', 'В1?',\n","       'b1 будет в январе экзамен, готов совмещать',\n","       'B1 немецкий и английский Advance', 'A', 'B2 (ждет итог экзамена)',\n","       'b1 (b2 не сдал экзамен)', 'В1 (учится на В2 до авг.',\n","       'В1, учится на В2 до няоб 24', 'В2 - не сдал',\n","       'B2+ (не сдавал, но говорит)', 'Б1 ( ждет результат Б2)',\n","       'B1 вроде был (18 лет назад сдавал)', 'УТОЧНИТЬ', 'b2 ждет серт',\n","       'Ждет B1', 'сдавала А2 в сентябре',\n","       'b1 должна получить результаты в феврале',\n","       'точно уровень не знаю, но говорить могу - учила сама',\n","       'А2-В1 учит', 'В1 (учится на В2 уже)'], dtype=object)"]},"metadata":{},"execution_count":134}]},{"cell_type":"code","execution_count":135,"metadata":{"id":"Jw6fSnCJafL7","executionInfo":{"status":"ok","timestamp":1741036523483,"user_tz":-60,"elapsed":122,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["replace_dict = {\n","    'в1': 'B1', 'б1': 'B1', 'b1': 'B1', 'B1': 'B1', 'в1-в2': 'B1-B2', 'B2': 'B2',\n","    'C2': 'C2', 'с1': 'C1', 'Б1': 'B1', 'а2': 'A2', 'а1': 'A1', 'а0': 'A0',\n","    'б2': 'B2', 'Б2': 'B2', 'В1': 'B1', 'А2': 'A2',\n","    'B1 будет в феврале 2025': 'B1',\n","    'Detmold, Paulinenstraße 95, 32756': 'Неизвестно',\n","    'Сам оценивает на B2, 13 лет живет в Германии': 'B2',\n","    'в2': 'B2', 'В1-В2': 'B1-B2', 'Б1 ( ждет Б2)': 'B1-B2', 'А2-В1': 'A2-B1',\n","    'lэкзамен - 6 июля на В1. курсы вечером (но уверенно говорит на B1)': 'B1',\n","    'Гражданка Германии уже год в Германии Учит немецкий и в сентябре b1 через гос-во проходит, а не через ДЖЦ, вечером учится 3 р в неделю с 18 до 21': 'B1',\n","    '-': 'A0', 'А2 ( Б1 в июне)': 'A2-B1', 'B1 в процессе обучения': 'B1',\n","    'ЯЗ: нем В1 был экз 03.05 повтор и сейчас ждет результаты. Технический англ был. А1 сейчас. ОБР: 2 во информационные и комп сети - инженер системоте': 'B1',\n","    'В1 в сентябре': 'B1', 'Нет': 'Неизвестно', 'С1': 'C1', 0: 'A0',\n","    'Ждем B1': 'B1', 'А1 сертиф, но по факту А2': 'A2', 'a2': 'A2',\n","    'Пока А2, сдает 17 05 B1': 'A2-B1', 'окончание 13.06 курса на b1': 'B1',\n","    'A1': 'A1', 'b2': 'B2', 'Thorn-Prikker-Str. 30, Hagen, 58093': 'Неизвестно',\n","    'В2': 'B2', 'нулевой уровень, только пошел на курсы.': 'A0', 'ая в1': 'B1',\n","    'Ждет результат по B1': 'B1', 'А2( ждет итоги Б!)': 'A2-B1',\n","    'b1 экзамен будет 12 апреля': 'B1', 'b1 (b2 ждет серт)': 'B1-B2', 'С2': 'C2',\n","    'ждем B1': 'B1', 'Paderborn 33102, Schwabenweg 10': 'Неизвестно',\n","    'b1 (B2 ждет серт)': 'B1-B2', 'Ждем B1 со дня на день': 'B1',\n","    'Б2 ( учит С1)': 'B2-C1', 'B1 еще нет результата': 'B1',\n","    '31.05.2024': 'Неизвестно', 'Lichtenfelser Straße 25, Untersiemau 96253': 'Неизвестно',\n","    'Учиться до сентября на B1': 'B1', 'b1 9ждет экзамен)': 'B1',\n","    'b1+': 'B1', 'гражданка': 'B2',\n","    'b1 (ждет результат)': 'B1', 'Б1 (учит Б2)': 'B1-B2',\n","    'б2+': 'B2', 'Гражданин': 'B2', '25 лет живет в Германии': 'C1',\n","    'С1 -ая , Ня -а1': 'C1', 'Ждем результат по B1': 'B1',\n","    'b1 (b2 в июле экзамен)': 'B1-B2', 'Ждет со дня на день В1': 'B1',\n","    'А2 (В1 с 3 раза не сдала, бератер видела наши доки)': 'A2-B1',\n","    'b1 (ждет результаты)': 'B1',\n","    'А2 ( повтор на Б1)': 'A2-B1', 'B1, сдает B2 в апреле': 'B1-B2',\n","    'ждет сертификат B1': 'B1',\n","    'Б2( 16.02 экзамен С1)': 'B2-C1', 'А1-А2': 'A1-A2',\n","    'b1 ждет серт на днях на руки': 'B1',\n","    'b1 24 февраля экзамен, англ b2': 'B1-B2', 'А2 ( скоро екзамен)': 'A2',\n","    'B1 (ждет результаты В2)': 'B1-B2',\n","    'b1 (b2 15 марта экзамен)': 'B1-B2', 'b2 (с1 экзамен 16 февраля)': 'B2-C1',\n","    'Б1 ( ждет итог Б2)': 'B1-B2', 'не сдавал, но гражданин': 'B2',\n","    'Нет сертификатов, но есть С1 англ, неоконченное высшее в ИТ (и еще одно высшее юридическое) , очень хочет в ИТ, сильно замотивирована именно н': 'Неизвестно',\n","    'А2, в процессе Б1': 'A2-B1', 'A0': 'A0', 'А2(Б1 в марте экз)': 'A2-B1',\n","    'учит A2': 'A2', 'Б1 ( проходит Б2)': 'B1-B2', 'Б1 ( ждет итог )': 'B1-B2',\n","    'НЯ - В1, АЯ - В1': 'B1', 'б1 (ждет рез-тат)': 'B1',\n","    'А2(ждет итоги Б1)': 'A2-B1', 'в1-ня , в1-ая': 'B1',\n","    'ня-0, но англ B2+': 'A0', 'В': 'B1', 'будет B1 в июне': 'B1',\n","    'А2( включили нем в ангебот)': 'A2', 'а2-в1': 'A2-B1', 'в2-с1': 'B2-C1',\n","    'курс А2-В1 - сдача в июле, но вечерняя смена инт курсов, настроен получить гутшайн уже сейчас.': 'A2-B1',\n","    'B1 (B2 должна до конца февраля получить)': 'B1-B2',\n","    'b1 (b2 экзамен 6 февраля)': 'B1-B2',\n","    'A1-A2': 'A1-A2', 'Б1( может будет)': 'B1', 'А2 ( в процессе Б1)': 'A2-B1',\n","    'b1 ждет результаты': 'B1',\n","    'b1 ждет экзамен в феврале': 'B1', 'В1, может уже В2?': 'B1-B2',\n","    'A2 (идет доучивать В1 - 300 часов; предположительно до августа)': 'A2-B1',\n","    'не учил': 'A0', 'Без 5 минут B1 (ждет результаты экзамена)': 'B1',\n","    'а1-а2 , ая свободный': 'A1-A2', 'b2-c2': 'B2',\n","    'а2, англ B1': 'A2', 'А1': 'A1', 'А2 нем -В2 англ': 'A2',\n","    'Проходит сейчас B1': 'B1',\n","    'Ждет результат по B1 в феврале': 'B1', 'Проходит сейчас повторно B1': 'B1',\n","    'b1 экзамен в феврале': 'B1',\n","    'Учиться на B1 во вторую смену, в первую хочет получить одобрение на обучение у нас': 'B1',\n","    'Б10Б2': 'B2', 'Б1?': 'B1', 'B1 есть, ждем B2 в конце месяца': 'B1-B2',\n","    'B1-B2': 'B1-B2', '?': 'Неизвестно', 'b1 экзамен 26 января': 'B1', 'А0': 'A0',\n","    'а2 (б1 в сер января)': 'A2-B1', 'f2': 'A2', 'Учиться на B1': 'B1',\n","    'Сдала экзамен на B1, ждет в начале февраля результат': 'B1',\n","    'Сдавал 8 12 на B1 - ждет результат. 3 01 - аплейт - получил B1!': 'B1',\n","    'Б1-Б2': 'B1-B2',     'б1 (до июля на В2)': 'B1-B2',\n","    'А2 ( Б1 март )': 'A2-B1', 'А2 (весной - еще 300 часов В1)': 'A2-B1',\n","    'В январе будут результаты по экзамену на B1': 'B1',\n","    'б2 (с1 ждет рез-тат)': 'B2-C1', 'ня-0, ая-B1': 'A0', 'А2-Б1': 'A2-B1',\n","    'B1 (почти, не сдала чуть) + англ В1': 'B1', 'в1 ждем результаты': 'B1',\n","    'А2 ( хочет просить совмещать)': 'A2', 'B1 (ждет результаты)': 'B1',\n","    'А2+': 'A2', 'а2 (сдавала экз В1, но не сдала похоже)': 'A2',\n","    'в1, идет на в2': 'B1-B2', 'b2-c1': 'B2-C1', 'C1': 'C1', 'b1-b2': 'B1-B2',\n","    'не учила ( разговорный) сразу пошла работать': 'B2',\n","    'Б1 ( проходит Б2 )': 'B1-B2', 'a0-a1': 'A0',\n","    'Б1 ( был екзамен ждет итог )': 'B1', 'Б2-С1': 'B2-C1',\n","    'b1 (учила, но не сдала В2)': 'B1', 'ня а2, ая в1': 'A2-B1',\n","    'A2 (идет на В1)': 'A2-B1', 'B2-C2': 'B2', 'немецкий - а1-а2, англ b1-b2': 'A2',\n","    'B2+': 'B2', 'в1, еще нет сертификата': 'B1', 'б1-б2': 'B1-B2', 'Бй': 'B1',\n","    'ждет результаты по B1 экзамену': 'B1', 'b2 (ждет серт)': 'B2', 'никакой': 'A0',\n","    'в1 , хочет совмещать с в2': 'B1-B2', 90: 'Неизвестно', '.': 'Неизвестно',\n","    'в1 (уже сдала В2)': 'B2', 'b1 результат экзамена в феврале': 'B1',\n","    'в1 , экзамен на в2 15 декабря': 'B1-B2', 'идет на А1': 'A1',\n","    'УТОЧНИТЬ!': 'Неизвестно', 'B2 (говорит без проблем - давно здесь)': 'B2',\n","    'B1 (до февраля)': 'B1',     'А2 ( Б2 в процессе)': 'B1', 'C': 'C1',\n","    'б1 заканчивает': 'B1', 'B1 (B2 экзамен в январе)': 'B1-B2',\n","    '5 июля 2024 сдает экз на В2': 'B2', 'А2 (заканчив В1 в июне)': 'A2-B1',\n","    'a2-б1': 'A2-B1', 'В1?': 'B1', 'b1 будет в январе экзамен, готов совмещать': 'B1',\n","    'b1 (b2 экзамен 2 марта)': 'B1-B2', 'B1 немецкий и английский Advance': 'B1',\n","    'A': 'A1', 'a2 (b1 экзамен 15 июня)': 'A2-B1', 'B2 (ждет итог экзамена)': 'B2',\n","    'b1 (b2 не сдал экзамен)': 'B1', 'В1 (учится на В2 до авг.': 'B1-B2',\n","    'В2 - не сдал': 'B2', 'B2+ (не сдавал, но говорит)': 'B2',\n","    'b1 (ждет серт)': 'B1', 'B1 вроде был (18 лет назад сдавал)': 'B1',\n","    'А2 (сдает B1 - 12 дек) - не сдал!': 'A2', 'УТОЧНИТЬ': 'Неизвестно',\n","    'b2 ждет серт': 'B2', 'разговорный из украины, без сертификата': 'B2',\n","    'Ждет B1': 'B1', 'сдавала А2 в сентябре': 'A2',\n","    'В1, учится на В2 до няоб 24': 'B1-B2',\n","    'Б1 ( ждет результат Б2)': 'B1-B2',\n","    'точно уровень не знаю, но говорить могу - учила сама': 'B2',\n","    'А2-В1 учит': 'A2-B1', 'В1 (учится на В2 уже)': 'B1',\n","    'В январе - В2 сдает': 'B2',\n","    'b1 должна получить результаты в феврале': 'B1'\n","}\n","deals_df['Level of Deutsch'] = deals_df['Level of Deutsch']\\\n",".replace(replace_dict).fillna(\"Unknown\")"]},{"cell_type":"code","execution_count":136,"metadata":{"id":"8Kxy6VtZa0uc","executionInfo":{"status":"ok","timestamp":1741036523490,"user_tz":-60,"elapsed":5,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["replace_take_two = {\"B1-B2\": \"B2\", 'A2-B1': 'B1', 'B2-C1': 'C1', 'A1-A2': \"A2\", \"Неизвестно\": \"Unknown\"}\n","deals_df['Level of Deutsch'] = deals_df['Level of Deutsch'].replace(replace_take_two)"]},{"cell_type":"code","source":["deals_df['Level of Deutsch'].unique()"],"metadata":{"id":"uh0RoRWmh2tm","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1741036523565,"user_tz":-60,"elapsed":73,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}},"outputId":"11e371cf-1a77-4c42-efe4-a911bf21102a"},"execution_count":137,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Unknown', 'B1', 'A2', 'B2', 'A0', 'C2', 'C1', 'A1'], dtype=object)"]},"metadata":{},"execution_count":137}]},{"cell_type":"code","execution_count":138,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":26,"status":"ok","timestamp":1741036523570,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"dxBBi7y1plrj","outputId":"63f60f3a-5549-4b6f-b2c7-f27f6b00d544"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Course duration\n","11    3012\n","6      575\n","Name: count, dtype: Int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Course duration</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>11</th>\n","      <td>3012</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>575</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> Int64</label>"]},"metadata":{},"execution_count":138}],"source":["deals_df['Course duration'].value_counts()"]},{"cell_type":"code","execution_count":139,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"executionInfo":{"elapsed":65,"status":"ok","timestamp":1741036523623,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"BLLOHd7aqhra","outputId":"b136d80e-7e67-402d-da16-e3c84d91c7ca"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Product\n","Data Analytics         <NA>\n","Digital Marketing        11\n","Find yourself in IT    <NA>\n","UX/UI Design             11\n","Web Developer             6\n","Name: Course duration, dtype: Int8"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Course duration</th>\n","    </tr>\n","    <tr>\n","      <th>Product</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Data Analytics</th>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>Digital Marketing</th>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>Find yourself in IT</th>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>UX/UI Design</th>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>Web Developer</th>\n","      <td>6</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> Int8</label>"]},"metadata":{},"execution_count":139}],"source":["mode_duration = deals_df.groupby('Product')['Course duration'].agg(lambda x: x.mode()[0] if not x.mode().empty else None)\n","mode_duration"]},{"cell_type":"markdown","metadata":{"id":"-no2w49IeAtX"},"source":["#### ☑ The 'Digital Marketing' is the same course 'Data Analytics.' To ensure consistency and avoid confusion in analysis, I standardized the values by renaming all instances of 'Data Analytics' to 'Digital Marketing."]},{"cell_type":"code","execution_count":140,"metadata":{"id":"PUKrk8P9rqMU","executionInfo":{"status":"ok","timestamp":1741036523627,"user_tz":-60,"elapsed":16,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["deals_df['Product'] = deals_df['Product'].replace('Data Analytics', 'Digital Marketing')"]},{"cell_type":"code","execution_count":141,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":19,"status":"ok","timestamp":1741036523641,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"6r6qO_GBY4Fl","outputId":"2e531498-48ac-47e0-cf31-809d93dffda3"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Education Type\n","Morning    2895\n","Evening     404\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Education Type</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Morning</th>\n","      <td>2895</td>\n","    </tr>\n","    <tr>\n","      <th>Evening</th>\n","      <td>404</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":141}],"source":["deals_df['Education Type'].value_counts()"]},{"cell_type":"code","execution_count":142,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":85,"status":"ok","timestamp":1741036523725,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"Z8WbCNVK1pA3","outputId":"d537e409-383a-41da-e35f-6a0cdd79548f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Education Type        18294\n","Course duration       17997\n","Offer Total Amount    17303\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Education Type</th>\n","      <td>18294</td>\n","    </tr>\n","    <tr>\n","      <th>Course duration</th>\n","      <td>17997</td>\n","    </tr>\n","    <tr>\n","      <th>Offer Total Amount</th>\n","      <td>17303</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":142}],"source":["deals_df[deals_df['Education Type'].isna()][['Education Type', 'Course duration', 'Offer Total Amount']].isna().sum()\n"]},{"cell_type":"code","execution_count":143,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1741036523731,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"e3BXH9GO51k-","outputId":"9bc3c508-f2b1-495f-c1b3-4579c4319364"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Product\n","Digital Marketing      Morning\n","Find yourself in IT       None\n","UX/UI Design           Morning\n","Web Developer          Morning\n","Name: Education Type, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Education Type</th>\n","    </tr>\n","    <tr>\n","      <th>Product</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Digital Marketing</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>Find yourself in IT</th>\n","      <td>None</td>\n","    </tr>\n","    <tr>\n","      <th>UX/UI Design</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>Web Developer</th>\n","      <td>Morning</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":143}],"source":["mode_education = deals_df.groupby('Product')['Education Type'].agg(lambda x: x.mode()[0] if not x.mode().empty else None)\n","mode_education"]},{"cell_type":"code","execution_count":144,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":59,"status":"ok","timestamp":1741036523793,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"s7NxDA3ZsQU7","outputId":"5c6e555b-af51-40f1-fcaa-b3a5ed44eed6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Offer Total Amount  Course duration  Product          \n","0.0                 11               Digital Marketing    Evening\n","1000.0              6                Web Developer        Morning\n","1200.0              11               Digital Marketing    Morning\n","1500.0              11               Digital Marketing    Morning\n","                                     UX/UI Design         Morning\n","2000.0              6                Web Developer        Morning\n","                    11               UX/UI Design         Evening\n","2500.0              6                Web Developer        Morning\n","                    11               Digital Marketing    Morning\n","                                     UX/UI Design         Evening\n","2900.0              6                Web Developer        Morning\n","                    11               Digital Marketing    Evening\n","                                     UX/UI Design         Morning\n","3000.0              11               Digital Marketing    Evening\n","                                     UX/UI Design         Morning\n","3500.0              6                Web Developer        Morning\n","                    11               Digital Marketing    Evening\n","                                     UX/UI Design         Evening\n","4000.0              11               Digital Marketing    Evening\n","                                     UX/UI Design         Evening\n","4500.0              11               Digital Marketing    Evening\n","                                     UX/UI Design         Evening\n","5000.0              6                Web Developer        Morning\n","                    11               Digital Marketing    Evening\n","6500.0              6                Web Developer        Morning\n","9000.0              6                Web Developer        Morning\n","                    11               UX/UI Design         Morning\n","10000.0             6                Web Developer        Morning\n","11000.0             6                Web Developer        Morning\n","                    11               Digital Marketing    Morning\n","                                     UX/UI Design         Morning\n","11111.0             11               Digital Marketing    Morning\n","11398.0             11               Digital Marketing    Morning\n","11500.0             11               Digital Marketing    Morning\n","                                     UX/UI Design         Morning\n","Name: Education Type, dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th>Education Type</th>\n","    </tr>\n","    <tr>\n","      <th>Offer Total Amount</th>\n","      <th>Course duration</th>\n","      <th>Product</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0.0</th>\n","      <th>11</th>\n","      <th>Digital Marketing</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th>1000.0</th>\n","      <th>6</th>\n","      <th>Web Developer</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>1200.0</th>\n","      <th>11</th>\n","      <th>Digital Marketing</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">1500.0</th>\n","      <th rowspan=\"2\" valign=\"top\">11</th>\n","      <th>Digital Marketing</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>UX/UI Design</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">2000.0</th>\n","      <th>6</th>\n","      <th>Web Developer</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <th>UX/UI Design</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">2500.0</th>\n","      <th>6</th>\n","      <th>Web Developer</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">11</th>\n","      <th>Digital Marketing</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>UX/UI Design</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">2900.0</th>\n","      <th>6</th>\n","      <th>Web Developer</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">11</th>\n","      <th>Digital Marketing</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th>UX/UI Design</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">3000.0</th>\n","      <th rowspan=\"2\" valign=\"top\">11</th>\n","      <th>Digital Marketing</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th>UX/UI Design</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">3500.0</th>\n","      <th>6</th>\n","      <th>Web Developer</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">11</th>\n","      <th>Digital Marketing</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th>UX/UI Design</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">4000.0</th>\n","      <th rowspan=\"2\" valign=\"top\">11</th>\n","      <th>Digital Marketing</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th>UX/UI Design</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">4500.0</th>\n","      <th rowspan=\"2\" valign=\"top\">11</th>\n","      <th>Digital Marketing</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th>UX/UI Design</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">5000.0</th>\n","      <th>6</th>\n","      <th>Web Developer</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <th>Digital Marketing</th>\n","      <td>Evening</td>\n","    </tr>\n","    <tr>\n","      <th>6500.0</th>\n","      <th>6</th>\n","      <th>Web Developer</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">9000.0</th>\n","      <th>6</th>\n","      <th>Web Developer</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <th>UX/UI Design</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>10000.0</th>\n","      <th>6</th>\n","      <th>Web Developer</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"3\" valign=\"top\">11000.0</th>\n","      <th>6</th>\n","      <th>Web Developer</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">11</th>\n","      <th>Digital Marketing</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>UX/UI Design</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>11111.0</th>\n","      <th>11</th>\n","      <th>Digital Marketing</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>11398.0</th>\n","      <th>11</th>\n","      <th>Digital Marketing</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">11500.0</th>\n","      <th rowspan=\"2\" valign=\"top\">11</th>\n","      <th>Digital Marketing</th>\n","      <td>Morning</td>\n","    </tr>\n","    <tr>\n","      <th>UX/UI Design</th>\n","      <td>Morning</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":144}],"source":["mode_education = deals_df.groupby(\n","    ['Offer Total Amount', 'Course duration', 'Product']\n",")['Education Type'].agg(lambda x: x.mode().iloc[0] if not x.mode().empty else None)\n","mode_education"]},{"cell_type":"markdown","source":["#### ☑ We fill missing values in 'Education Type' with the most frequent type for each combination of 'Offer Total Amount', 'Course duration', and 'Product'. This ensures uniformity in the data and improves accuracy for analysis."],"metadata":{"id":"GaFvVSfhku0s"}},{"cell_type":"code","execution_count":145,"metadata":{"id":"oVg5wwWY14NL","executionInfo":{"status":"ok","timestamp":1741036523810,"user_tz":-60,"elapsed":9,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["mode_education = deals_df.groupby(\n","    ['Offer Total Amount', 'Course duration', 'Product']\n",")['Education Type'].agg(lambda x: x.mode().iloc[0] if not x.mode().empty else None).reset_index()\n","\n","deals_df = deals_df.merge(mode_education, on=['Offer Total Amount', 'Course duration', 'Product'], how='left', suffixes=('', '_mode'))\n","\n","deals_df['Education Type'] = deals_df['Education Type'].fillna(deals_df['Education Type_mode'])\n","\n","deals_df.drop(columns=['Education Type_mode'], inplace=True)"]},{"cell_type":"code","execution_count":146,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":49,"status":"ok","timestamp":1741036523857,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"OoenQQrzppCg","outputId":"5272c84a-08eb-443b-b824-78f121b96dad"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["18154"]},"metadata":{},"execution_count":146}],"source":["deals_df['Education Type'].isna().sum()"]},{"cell_type":"code","execution_count":147,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":805},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1741036523869,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"eYCI-kSSi8z9","outputId":"c9a1a360-d9e7-4db5-c524-3c96aee8aa9f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Id                         0\n","Deal Owner Name           29\n","Closing Date            6948\n","Quality                 2253\n","Stage                      0\n","Lost Reason             5469\n","Page                       0\n","Campaign                5526\n","Content                 7446\n","Term                    9139\n","Source                     0\n","Payment Type           21097\n","Product                18001\n","Education Type         18154\n","Created Time               0\n","Course duration        18006\n","Months of study        20753\n","Initial Amount Paid    17428\n","Offer Total Amount     17408\n","Contact Name              61\n","City                   18307\n","Level of Deutsch           0\n","SLA Seconds             6060\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Id</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Deal Owner Name</th>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>Closing Date</th>\n","      <td>6948</td>\n","    </tr>\n","    <tr>\n","      <th>Quality</th>\n","      <td>2253</td>\n","    </tr>\n","    <tr>\n","      <th>Stage</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Lost Reason</th>\n","      <td>5469</td>\n","    </tr>\n","    <tr>\n","      <th>Page</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Campaign</th>\n","      <td>5526</td>\n","    </tr>\n","    <tr>\n","      <th>Content</th>\n","      <td>7446</td>\n","    </tr>\n","    <tr>\n","      <th>Term</th>\n","      <td>9139</td>\n","    </tr>\n","    <tr>\n","      <th>Source</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Payment Type</th>\n","      <td>21097</td>\n","    </tr>\n","    <tr>\n","      <th>Product</th>\n","      <td>18001</td>\n","    </tr>\n","    <tr>\n","      <th>Education Type</th>\n","      <td>18154</td>\n","    </tr>\n","    <tr>\n","      <th>Created Time</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Course duration</th>\n","      <td>18006</td>\n","    </tr>\n","    <tr>\n","      <th>Months of study</th>\n","      <td>20753</td>\n","    </tr>\n","    <tr>\n","      <th>Initial Amount Paid</th>\n","      <td>17428</td>\n","    </tr>\n","    <tr>\n","      <th>Offer Total Amount</th>\n","      <td>17408</td>\n","    </tr>\n","    <tr>\n","      <th>Contact Name</th>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>City</th>\n","      <td>18307</td>\n","    </tr>\n","    <tr>\n","      <th>Level of Deutsch</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>SLA Seconds</th>\n","      <td>6060</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":147}],"source":["deals_df.isna().sum()"]},{"cell_type":"markdown","source":["#### ☑ We fill missing values in 'Contact Name' fot 'Unknown'. That ensures that all data is retained during grouping and mapping, preventing errors and missing values. It also simplifies filtering and analysis by avoiding undefined entries."],"metadata":{"id":"wae5N3eGmpzM"}},{"cell_type":"code","execution_count":148,"metadata":{"id":"vqmLtahcCSlP","executionInfo":{"status":"ok","timestamp":1741036523955,"user_tz":-60,"elapsed":93,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["deals_df['Contact Name'] = deals_df['Contact Name'].fillna('Unknown')\n"]},{"cell_type":"code","execution_count":149,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":18,"status":"ok","timestamp":1741036523974,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"9lKxG02XxdhQ","outputId":"58ae882a-5f34-463a-9e3b-4f6b18f62374"},"outputs":[{"output_type":"stream","name":"stdout","text":["<IntegerArray>\n","[<NA>, 6, 11]\n","Length: 3, dtype: Int8\n","<IntegerArray>\n","[<NA>, 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n","Length: 13, dtype: Int8\n"]}],"source":["print(deals_df['Course duration'].unique())\n","print(deals_df['Months of study'].unique())"]},{"cell_type":"code","execution_count":150,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":178},"executionInfo":{"elapsed":8,"status":"ok","timestamp":1741036523984,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"1mcH6NL7vhri","outputId":"db1e4fe9-2150-4cd6-f00f-a21e539a833c"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Deal Owner Name        29\n","Offer Total Amount     13\n","Initial Amount Paid    13\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Deal Owner Name</th>\n","      <td>29</td>\n","    </tr>\n","    <tr>\n","      <th>Offer Total Amount</th>\n","      <td>13</td>\n","    </tr>\n","    <tr>\n","      <th>Initial Amount Paid</th>\n","      <td>13</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":150}],"source":["deals_df[deals_df['Deal Owner Name'].isna()][['Deal Owner Name', 'Offer Total Amount', 'Initial Amount Paid']].isna().sum()"]},{"cell_type":"code","execution_count":151,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":958},"executionInfo":{"elapsed":16,"status":"ok","timestamp":1741036524077,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"Z9vDgHotvYMc","outputId":"27e836f2-89cb-4e8a-ea32-36d9693b3093"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Deal Owner Name  Offer Total Amount  Initial Amount Paid\n","14007             NaN                 0.0                  0.0\n","18834             NaN                 NaN                  NaN\n","18954             NaN                 NaN                  NaN\n","19054             NaN                 NaN                  NaN\n","19150             NaN                 NaN                  NaN\n","19248             NaN                 NaN                  NaN\n","19254             NaN                 NaN                  NaN\n","19337             NaN                 NaN                  NaN\n","19382             NaN                 NaN                  NaN\n","19438             NaN                 NaN                  NaN\n","19439             NaN                 NaN                  NaN\n","19482             NaN                 NaN                  NaN\n","19727             NaN                 NaN                  NaN\n","19728             NaN                 NaN                  NaN\n","21357             NaN                 0.0                  0.0\n","21385             NaN                 0.0                  0.0\n","21416             NaN                 0.0                  0.0\n","21424             NaN                 0.0                  0.0\n","21432             NaN                 0.0                  0.0\n","21440             NaN                 0.0                  0.0\n","21451             NaN                 0.0                  0.0\n","21463             NaN                 0.0                  0.0\n","21518             NaN                 0.0                  0.0\n","21527             NaN                 0.0                  0.0\n","21531             NaN                 0.0                  0.0\n","21538             NaN                 0.0                  0.0\n","21544             NaN                 0.0                  0.0\n","21560             NaN                 0.0                  0.0\n","21568             NaN                 0.0                  0.0"],"text/html":["\n","  <div id=\"df-43583c43-db48-497c-8f36-28223bbf52dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Deal Owner Name</th>\n","      <th>Offer Total Amount</th>\n","      <th>Initial Amount Paid</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>14007</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>18834</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>18954</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19054</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19150</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19248</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19254</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19337</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19382</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19438</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19439</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19482</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19727</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>19728</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>21357</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21385</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21416</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21424</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21432</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21440</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21451</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21463</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21518</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21527</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21531</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21538</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21544</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21560</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>21568</th>\n","      <td>NaN</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-43583c43-db48-497c-8f36-28223bbf52dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-43583c43-db48-497c-8f36-28223bbf52dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-43583c43-db48-497c-8f36-28223bbf52dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3eba2e9f-4e28-4946-b1a2-94922d3bb9e3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3eba2e9f-4e28-4946-b1a2-94922d3bb9e3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3eba2e9f-4e28-4946-b1a2-94922d3bb9e3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":151}],"source":["deals_df[deals_df['Deal Owner Name'].isna()][['Deal Owner Name', 'Offer Total Amount', 'Initial Amount Paid']]"]},{"cell_type":"markdown","source":["#### ☑ We remove rows where Deal Owner Name is Nan, becouse, Offer Total Amount and Initial Amount Paid are all zero in them, as they do not provide useful information and may distort data analysis."],"metadata":{"id":"L07yFnbtngDt"}},{"cell_type":"code","execution_count":152,"metadata":{"id":"HQoyAciDxrPS","executionInfo":{"status":"ok","timestamp":1741036524108,"user_tz":-60,"elapsed":29,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["deals_df = deals_df.dropna(subset=['Deal Owner Name'])"]},{"cell_type":"code","execution_count":153,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":26,"status":"ok","timestamp":1741036524110,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"9DBRUmAAztWe","outputId":"c58f506d-9d83-45e0-ed6a-b8dd583d0e55"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":153}],"source":["deals_df['Deal Owner Name'].isna().sum()"]},{"cell_type":"code","execution_count":154,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1741036524221,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"iQj3q_5a1-am","outputId":"0e118695-2b5e-4927-9856-a7bf36db50b8"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 21564 entries, 0 to 21592\n","Data columns (total 23 columns):\n"," #   Column               Non-Null Count  Dtype         \n","---  ------               --------------  -----         \n"," 0   Id                   21564 non-null  object        \n"," 1   Deal Owner Name      21564 non-null  object        \n"," 2   Closing Date         14638 non-null  datetime64[ns]\n"," 3   Quality              19311 non-null  object        \n"," 4   Stage                21564 non-null  object        \n"," 5   Lost Reason          16118 non-null  object        \n"," 6   Page                 21564 non-null  object        \n"," 7   Campaign             16040 non-null  object        \n"," 8   Content              14123 non-null  object        \n"," 9   Term                 12431 non-null  object        \n"," 10  Source               21564 non-null  object        \n"," 11  Payment Type         495 non-null    object        \n"," 12  Product              3592 non-null   object        \n"," 13  Education Type       3439 non-null   object        \n"," 14  Created Time         21564 non-null  datetime64[ns]\n"," 15  Course duration      3587 non-null   Int8          \n"," 16  Months of study      840 non-null    Int8          \n"," 17  Initial Amount Paid  4149 non-null   float64       \n"," 18  Offer Total Amount   4169 non-null   float64       \n"," 19  Contact Name         21564 non-null  object        \n"," 20  City                 3284 non-null   object        \n"," 21  Level of Deutsch     21564 non-null  object        \n"," 22  SLA Seconds          15518 non-null  float64       \n","dtypes: Int8(2), datetime64[ns](2), float64(3), object(16)\n","memory usage: 3.7+ MB\n"]}],"source":["deals_df.info()"]},{"cell_type":"code","execution_count":155,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1741036524229,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"kzBdXp6alhgB","outputId":"c31ff70c-9a11-4439-cf7d-7be25792a434"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Quality\n","E - Non Qualified    7633\n","D - Non Target       6248\n","C - Low              3442\n","B - Medium           1556\n","A - High              429\n","F                       3\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Quality</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>E - Non Qualified</th>\n","      <td>7633</td>\n","    </tr>\n","    <tr>\n","      <th>D - Non Target</th>\n","      <td>6248</td>\n","    </tr>\n","    <tr>\n","      <th>C - Low</th>\n","      <td>3442</td>\n","    </tr>\n","    <tr>\n","      <th>B - Medium</th>\n","      <td>1556</td>\n","    </tr>\n","    <tr>\n","      <th>A - High</th>\n","      <td>429</td>\n","    </tr>\n","    <tr>\n","      <th>F</th>\n","      <td>3</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":155}],"source":["deals_df['Quality'].value_counts()"]},{"cell_type":"code","execution_count":156,"metadata":{"id":"6YFdzXUFl2CK","executionInfo":{"status":"ok","timestamp":1741036524235,"user_tz":-60,"elapsed":8,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["deals_df = deals_df[deals_df['Quality'] != 'F']"]},{"cell_type":"markdown","metadata":{"id":"SuDW1_JUqf1k"},"source":["---\n","### Removing duplicates\n","---"]},{"cell_type":"code","execution_count":157,"metadata":{"id":"0qsgXmcinkOC","executionInfo":{"status":"ok","timestamp":1741036524241,"user_tz":-60,"elapsed":3,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["deals_df = deals_df[deals_df['Lost Reason'] != 'Duplicate']"]},{"cell_type":"code","execution_count":158,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":28,"status":"ok","timestamp":1741036524272,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"huPs4S5Iqf1l","outputId":"ecaf7b7f-09e2-496a-e819-14f449e2a6e6"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{},"execution_count":158}],"source":["deals_df.duplicated(subset=deals_df.columns[1:]).sum()"]},{"cell_type":"code","execution_count":159,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":794},"executionInfo":{"elapsed":72,"status":"ok","timestamp":1741036524340,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"aPloJNa2qf1l","outputId":"0a9f0c07-b741-44bd-b121-037b1491fa83"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Id Deal Owner Name Closing Date Quality  \\\n","1067   5805028000054269273        John Doe          NaT     NaN   \n","1069   5805028000054269205        John Doe          NaT     NaN   \n","11084  5805028000029580838   Charlie Davis          NaT     NaN   \n","11085  5805028000029576850   Charlie Davis          NaT     NaN   \n","14754  5805028000020283932   Charlie Davis          NaT     NaN   \n","14755  5805028000020420273   Charlie Davis          NaT     NaN   \n","14807  5805028000020313482     Diana Evans          NaT     NaN   \n","14808  5805028000020284716     Diana Evans          NaT     NaN   \n","15534  5805028000018428977      Nina Scott          NaT     NaN   \n","15535  5805028000018507379      Nina Scott          NaT     NaN   \n","\n","                       Stage Lost Reason       Page                 Campaign  \\\n","1067                New Lead         NaN   /webinar                      NaN   \n","1069                New Lead         NaN   /webinar                      NaN   \n","11084  Registered on Webinar         NaN  /workshop                      NaN   \n","11085  Registered on Webinar         NaN  /workshop                      NaN   \n","14754  Registered on Webinar         NaN  /workshop                      NaN   \n","14755  Registered on Webinar         NaN  /workshop                      NaN   \n","14807  Registered on Webinar         NaN  /workshop                      NaN   \n","14808  Registered on Webinar         NaN  /workshop                      NaN   \n","15534  Registered on Webinar         NaN  /workshop  14.11.23wide_webinar_DE   \n","15535  Registered on Webinar         NaN  /workshop  14.11.23wide_webinar_DE   \n","\n","                     Content  Term  ... Education Type        Created Time  \\\n","1067                     NaN   NaN  ...            NaN 2024-06-10 12:37:00   \n","1069                     NaN   NaN  ...            NaN 2024-06-10 12:37:00   \n","11084                    NaN   NaN  ...            NaN 2024-02-01 20:45:00   \n","11085                    NaN   NaN  ...            NaN 2024-02-01 20:45:00   \n","14754             invitation   NaN  ...            NaN 2023-12-08 22:06:00   \n","14755             invitation   NaN  ...            NaN 2023-12-08 22:06:00   \n","14807             invitation   NaN  ...            NaN 2023-12-08 15:44:00   \n","14808             invitation   NaN  ...            NaN 2023-12-08 15:44:00   \n","15534  bloggersvideo8webinar  wide  ...            NaN 2023-11-23 14:06:00   \n","15535  bloggersvideo8webinar  wide  ...            NaN 2023-11-23 14:06:00   \n","\n","      Course duration Months of study Initial Amount Paid  Offer Total Amount  \\\n","1067             <NA>            <NA>                 NaN                 NaN   \n","1069             <NA>            <NA>                 NaN                 NaN   \n","11084            <NA>            <NA>                 NaN                 NaN   \n","11085            <NA>            <NA>                 NaN                 NaN   \n","14754            <NA>            <NA>                 NaN                 NaN   \n","14755            <NA>            <NA>                 NaN                 NaN   \n","14807            <NA>            <NA>                 NaN                 NaN   \n","14808            <NA>            <NA>                 NaN                 NaN   \n","15534            <NA>            <NA>                 NaN                 NaN   \n","15535            <NA>            <NA>                 NaN                 NaN   \n","\n","              Contact Name  City  Level of Deutsch SLA Seconds  \n","1067   5805028000005448163  None           Unknown         NaN  \n","1069   5805028000005448163  None           Unknown         NaN  \n","11084  5805028000025816321  None           Unknown         NaN  \n","11085  5805028000025816321  None           Unknown         NaN  \n","14754  5805028000020421099  None           Unknown         NaN  \n","14755  5805028000020421099  None           Unknown         NaN  \n","14807  5805028000020300454  None           Unknown         NaN  \n","14808  5805028000020300454  None           Unknown         NaN  \n","15534  5805028000018427915  None           Unknown         NaN  \n","15535  5805028000018427915  None           Unknown         NaN  \n","\n","[10 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-135cd0c0-ddbd-4a33-9c6e-28ac93f4be7b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Deal Owner Name</th>\n","      <th>Closing Date</th>\n","      <th>Quality</th>\n","      <th>Stage</th>\n","      <th>Lost Reason</th>\n","      <th>Page</th>\n","      <th>Campaign</th>\n","      <th>Content</th>\n","      <th>Term</th>\n","      <th>...</th>\n","      <th>Education Type</th>\n","      <th>Created Time</th>\n","      <th>Course duration</th>\n","      <th>Months of study</th>\n","      <th>Initial Amount Paid</th>\n","      <th>Offer Total Amount</th>\n","      <th>Contact Name</th>\n","      <th>City</th>\n","      <th>Level of Deutsch</th>\n","      <th>SLA Seconds</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1067</th>\n","      <td>5805028000054269273</td>\n","      <td>John Doe</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>New Lead</td>\n","      <td>NaN</td>\n","      <td>/webinar</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-06-10 12:37:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000005448163</td>\n","      <td>None</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1069</th>\n","      <td>5805028000054269205</td>\n","      <td>John Doe</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>New Lead</td>\n","      <td>NaN</td>\n","      <td>/webinar</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-06-10 12:37:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000005448163</td>\n","      <td>None</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>11084</th>\n","      <td>5805028000029580838</td>\n","      <td>Charlie Davis</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>Registered on Webinar</td>\n","      <td>NaN</td>\n","      <td>/workshop</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-02-01 20:45:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000025816321</td>\n","      <td>None</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>11085</th>\n","      <td>5805028000029576850</td>\n","      <td>Charlie Davis</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>Registered on Webinar</td>\n","      <td>NaN</td>\n","      <td>/workshop</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-02-01 20:45:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000025816321</td>\n","      <td>None</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>14754</th>\n","      <td>5805028000020283932</td>\n","      <td>Charlie Davis</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>Registered on Webinar</td>\n","      <td>NaN</td>\n","      <td>/workshop</td>\n","      <td>NaN</td>\n","      <td>invitation</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2023-12-08 22:06:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000020421099</td>\n","      <td>None</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>14755</th>\n","      <td>5805028000020420273</td>\n","      <td>Charlie Davis</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>Registered on Webinar</td>\n","      <td>NaN</td>\n","      <td>/workshop</td>\n","      <td>NaN</td>\n","      <td>invitation</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2023-12-08 22:06:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000020421099</td>\n","      <td>None</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>14807</th>\n","      <td>5805028000020313482</td>\n","      <td>Diana Evans</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>Registered on Webinar</td>\n","      <td>NaN</td>\n","      <td>/workshop</td>\n","      <td>NaN</td>\n","      <td>invitation</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2023-12-08 15:44:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000020300454</td>\n","      <td>None</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>14808</th>\n","      <td>5805028000020284716</td>\n","      <td>Diana Evans</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>Registered on Webinar</td>\n","      <td>NaN</td>\n","      <td>/workshop</td>\n","      <td>NaN</td>\n","      <td>invitation</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2023-12-08 15:44:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000020300454</td>\n","      <td>None</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15534</th>\n","      <td>5805028000018428977</td>\n","      <td>Nina Scott</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>Registered on Webinar</td>\n","      <td>NaN</td>\n","      <td>/workshop</td>\n","      <td>14.11.23wide_webinar_DE</td>\n","      <td>bloggersvideo8webinar</td>\n","      <td>wide</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2023-11-23 14:06:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000018427915</td>\n","      <td>None</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15535</th>\n","      <td>5805028000018507379</td>\n","      <td>Nina Scott</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>Registered on Webinar</td>\n","      <td>NaN</td>\n","      <td>/workshop</td>\n","      <td>14.11.23wide_webinar_DE</td>\n","      <td>bloggersvideo8webinar</td>\n","      <td>wide</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2023-11-23 14:06:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000018427915</td>\n","      <td>None</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-135cd0c0-ddbd-4a33-9c6e-28ac93f4be7b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-135cd0c0-ddbd-4a33-9c6e-28ac93f4be7b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-135cd0c0-ddbd-4a33-9c6e-28ac93f4be7b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-75d2819d-20ca-49c4-b63e-d6d2da915bd9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-75d2819d-20ca-49c4-b63e-d6d2da915bd9')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-75d2819d-20ca-49c4-b63e-d6d2da915bd9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":159}],"source":["deals_df[deals_df.duplicated(keep=False, subset=deals_df.columns[1:])]"]},{"cell_type":"code","execution_count":160,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":120,"status":"ok","timestamp":1741036524450,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"JrVtvLYwqf1l","outputId":"a15ce7f2-f337-4bdc-9372-31aba75c9b26"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0, 23)"]},"metadata":{},"execution_count":160}],"source":["deals_df.drop_duplicates(subset=deals_df.columns[1:], inplace=True)\n","\n","deals_df[deals_df.duplicated(subset=deals_df.columns[1:])].shape"]},{"cell_type":"code","execution_count":161,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1741036524455,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"wuK1_a5c3J6u","outputId":"188890b9-eb33-4f6f-939c-d033fb4604bf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Offer Total Amount  Initial Amount Paid  Months of study\n","0                     NaN                  NaN             <NA>\n","2                     NaN                  NaN             <NA>\n","3                     NaN                  NaN             <NA>\n","4                     NaN                  NaN             <NA>\n","5                     NaN                  NaN             <NA>\n","...                   ...                  ...              ...\n","21584                 NaN                  NaN             <NA>\n","21587                 NaN                  NaN             <NA>\n","21589                 NaN                  NaN             <NA>\n","21590                 NaN                  NaN             <NA>\n","21591                 NaN                  NaN             <NA>\n","\n","[15724 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-a7538adf-13c9-4310-b563-991a7e58a74b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Offer Total Amount</th>\n","      <th>Initial Amount Paid</th>\n","      <th>Months of study</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>21584</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>21587</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>21589</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>21590</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>21591</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>&lt;NA&gt;</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15724 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a7538adf-13c9-4310-b563-991a7e58a74b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a7538adf-13c9-4310-b563-991a7e58a74b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a7538adf-13c9-4310-b563-991a7e58a74b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-73fe0480-03f6-43f5-a9ca-8e0ca69bc898\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73fe0480-03f6-43f5-a9ca-8e0ca69bc898')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-73fe0480-03f6-43f5-a9ca-8e0ca69bc898 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"deals_df[deals_df['Offer Total Amount']\",\n  \"rows\": 15724,\n  \"fields\": [\n    {\n      \"column\": \"Offer Total Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initial Amount Paid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 328.63353450309967,\n        \"min\": 100.0,\n        \"max\": 1000.0,\n        \"num_unique_values\": 4,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months of study\",\n      \"properties\": {\n        \"dtype\": \"Int8\",\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":161}],"source":["deals_df[deals_df['Offer Total Amount'].isna()][['Offer Total Amount', 'Initial Amount Paid', 'Months of study']]"]},{"cell_type":"code","execution_count":162,"metadata":{"id":"1_Tymghwq8FY","executionInfo":{"status":"ok","timestamp":1741036524462,"user_tz":-60,"elapsed":6,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["category_columns = ['Deal Owner Name', 'Quality', 'Stage', 'Lost Reason', 'Page', 'Campaign', 'Content',\n","                     'Term', 'Source', 'Payment Type', 'Product', 'City', 'Level of Deutsch', 'Education Type']\n","for col in category_columns:\n","  deals_df[col] = deals_df[col].astype('category')"]},{"cell_type":"markdown","metadata":{"id":"Kti-sRcMqf1n"},"source":["---\n","### Results Output\n","---"]},{"cell_type":"code","execution_count":163,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":463},"executionInfo":{"elapsed":38,"status":"ok","timestamp":1741036524505,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"1QKBZGPeqf1o","outputId":"47d81737-c5c4-4be6-abc8-aa5735689899"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                    Id Deal Owner Name Closing Date            Quality  \\\n","0  5805028000056864695        Ben Hall          NaT                NaN   \n","1  5805028000056859489   Ulysses Adams          NaT                NaN   \n","2  5805028000056832357   Ulysses Adams   2024-06-21     D - Non Target   \n","3  5805028000056824246        Eva Kent   2024-06-21  E - Non Qualified   \n","4  5805028000056873292        Ben Hall   2024-06-21     D - Non Target   \n","\n","      Stage     Lost Reason       Page                  Campaign  \\\n","0  New Lead             NaN  /eng/test             03.07.23women   \n","1  New Lead             NaN    /at-eng                       NaN   \n","2      Lost      Non target    /at-eng                engwien_AT   \n","3      Lost  Invalid number       /eng  04.07.23recentlymoved_DE   \n","4      Lost      Non target       /eng              discovery_DE   \n","\n","              Content           Term  ... Education Type        Created Time  \\\n","0                 v16          women  ...            NaN 2024-06-21 15:30:00   \n","1                 NaN            NaN  ...        Morning 2024-06-21 15:23:00   \n","2               b1-at     21_06_2024  ...            NaN 2024-06-21 14:45:00   \n","3  bloggersvideo14com  recentlymoved  ...            NaN 2024-06-21 13:32:00   \n","4             website            NaN  ...            NaN 2024-06-21 13:21:00   \n","\n","  Course duration Months of study Initial Amount Paid  Offer Total Amount  \\\n","0            <NA>            <NA>                 NaN                 NaN   \n","1               6            <NA>                 0.0              2000.0   \n","2            <NA>            <NA>                 NaN                 NaN   \n","3            <NA>            <NA>                 NaN                 NaN   \n","4            <NA>            <NA>                 NaN                 NaN   \n","\n","          Contact Name  City  Level of Deutsch SLA Seconds  \n","0  5805028000056849495   NaN           Unknown         NaN  \n","1  5805028000056834471   NaN           Unknown         NaN  \n","2  5805028000056854421   NaN           Unknown      1603.0  \n","3  5805028000056889351   NaN           Unknown      3604.0  \n","4  5805028000056876176   NaN           Unknown      3192.0  \n","\n","[5 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-0b2ffe98-2d30-4f7e-8b0e-f5f714532972\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Deal Owner Name</th>\n","      <th>Closing Date</th>\n","      <th>Quality</th>\n","      <th>Stage</th>\n","      <th>Lost Reason</th>\n","      <th>Page</th>\n","      <th>Campaign</th>\n","      <th>Content</th>\n","      <th>Term</th>\n","      <th>...</th>\n","      <th>Education Type</th>\n","      <th>Created Time</th>\n","      <th>Course duration</th>\n","      <th>Months of study</th>\n","      <th>Initial Amount Paid</th>\n","      <th>Offer Total Amount</th>\n","      <th>Contact Name</th>\n","      <th>City</th>\n","      <th>Level of Deutsch</th>\n","      <th>SLA Seconds</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5805028000056864695</td>\n","      <td>Ben Hall</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>New Lead</td>\n","      <td>NaN</td>\n","      <td>/eng/test</td>\n","      <td>03.07.23women</td>\n","      <td>v16</td>\n","      <td>women</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-06-21 15:30:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056849495</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5805028000056859489</td>\n","      <td>Ulysses Adams</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>New Lead</td>\n","      <td>NaN</td>\n","      <td>/at-eng</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>Morning</td>\n","      <td>2024-06-21 15:23:00</td>\n","      <td>6</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>0.0</td>\n","      <td>2000.0</td>\n","      <td>5805028000056834471</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5805028000056832357</td>\n","      <td>Ulysses Adams</td>\n","      <td>2024-06-21</td>\n","      <td>D - Non Target</td>\n","      <td>Lost</td>\n","      <td>Non target</td>\n","      <td>/at-eng</td>\n","      <td>engwien_AT</td>\n","      <td>b1-at</td>\n","      <td>21_06_2024</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-06-21 14:45:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056854421</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>1603.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5805028000056824246</td>\n","      <td>Eva Kent</td>\n","      <td>2024-06-21</td>\n","      <td>E - Non Qualified</td>\n","      <td>Lost</td>\n","      <td>Invalid number</td>\n","      <td>/eng</td>\n","      <td>04.07.23recentlymoved_DE</td>\n","      <td>bloggersvideo14com</td>\n","      <td>recentlymoved</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-06-21 13:32:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056889351</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>3604.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5805028000056873292</td>\n","      <td>Ben Hall</td>\n","      <td>2024-06-21</td>\n","      <td>D - Non Target</td>\n","      <td>Lost</td>\n","      <td>Non target</td>\n","      <td>/eng</td>\n","      <td>discovery_DE</td>\n","      <td>website</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-06-21 13:21:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056876176</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>3192.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0b2ffe98-2d30-4f7e-8b0e-f5f714532972')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0b2ffe98-2d30-4f7e-8b0e-f5f714532972 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0b2ffe98-2d30-4f7e-8b0e-f5f714532972');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fab1ba3a-694e-405e-a5ff-c5f7ced85400\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fab1ba3a-694e-405e-a5ff-c5f7ced85400')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fab1ba3a-694e-405e-a5ff-c5f7ced85400 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"deals_df"}},"metadata":{},"execution_count":163}],"source":["deals_df.head()"]},{"cell_type":"code","execution_count":164,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":76,"status":"ok","timestamp":1741036524577,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"zjcNKJ4Oqf1o","outputId":"eaa4f9ef-bb30-413a-861e-fb23273611cd"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 19788 entries, 0 to 21592\n","Data columns (total 23 columns):\n"," #   Column               Non-Null Count  Dtype         \n","---  ------               --------------  -----         \n"," 0   Id                   19788 non-null  object        \n"," 1   Deal Owner Name      19788 non-null  category      \n"," 2   Closing Date         13129 non-null  datetime64[ns]\n"," 3   Quality              17557 non-null  category      \n"," 4   Stage                19788 non-null  category      \n"," 5   Lost Reason          14347 non-null  category      \n"," 6   Page                 19788 non-null  category      \n"," 7   Campaign             15555 non-null  category      \n"," 8   Content              13771 non-null  category      \n"," 9   Term                 12077 non-null  category      \n"," 10  Source               19788 non-null  category      \n"," 11  Payment Type         482 non-null    category      \n"," 12  Product              3537 non-null   category      \n"," 13  Education Type       3390 non-null   category      \n"," 14  Created Time         19788 non-null  datetime64[ns]\n"," 15  Course duration      3533 non-null   Int8          \n"," 16  Months of study      838 non-null    Int8          \n"," 17  Initial Amount Paid  4044 non-null   float64       \n"," 18  Offer Total Amount   4064 non-null   float64       \n"," 19  Contact Name         19788 non-null  object        \n"," 20  City                 3115 non-null   category      \n"," 21  Level of Deutsch     19788 non-null  category      \n"," 22  SLA Seconds          14980 non-null  float64       \n","dtypes: Int8(2), category(14), datetime64[ns](2), float64(3), object(2)\n","memory usage: 1.7+ MB\n"]}],"source":["deals_df.info()"]},{"cell_type":"code","execution_count":165,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"executionInfo":{"elapsed":26,"status":"ok","timestamp":1741036524601,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"fG-PrQtMqf1o","outputId":"268ac26f-adbb-444b-9807-97b0cf1001e7"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Closing Date                   Created Time  \\\n","count                          13129                          19788   \n","mean   2024-01-28 16:28:52.957574656  2024-01-28 16:11:33.999393536   \n","min              2022-10-11 00:00:00            2023-07-03 17:03:00   \n","25%              2023-11-11 00:00:00            2023-11-18 23:15:30   \n","50%              2024-02-08 00:00:00            2024-02-06 16:15:00   \n","75%              2024-04-19 00:00:00            2024-04-14 23:28:45   \n","max              2024-12-11 00:00:00            2024-06-21 15:30:00   \n","std                              NaN                            NaN   \n","\n","       Course duration  Months of study  Initial Amount Paid  \\\n","count           3533.0            838.0          4044.000000   \n","mean         10.197566         5.445107           961.006429   \n","min                6.0              0.0             0.000000   \n","25%               11.0              3.0           300.000000   \n","50%               11.0              5.0          1000.000000   \n","75%               11.0              8.0          1000.000000   \n","max               11.0             11.0         11500.000000   \n","std           1.835545         2.918031          1417.220439   \n","\n","       Offer Total Amount   SLA Seconds  \n","count         4064.000000  1.498000e+04  \n","mean          7238.117618  1.115745e+05  \n","min              0.000000  3.000000e+00  \n","25%           3500.000000  4.408250e+03  \n","50%          11000.000000  1.982000e+04  \n","75%          11000.000000  5.596900e+04  \n","max          11500.000000  2.690846e+07  \n","std           4584.678975  7.268762e+05  "],"text/html":["\n","  <div id=\"df-6743df7f-68d1-43d9-85f9-e5db74a10b21\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Closing Date</th>\n","      <th>Created Time</th>\n","      <th>Course duration</th>\n","      <th>Months of study</th>\n","      <th>Initial Amount Paid</th>\n","      <th>Offer Total Amount</th>\n","      <th>SLA Seconds</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>13129</td>\n","      <td>19788</td>\n","      <td>3533.0</td>\n","      <td>838.0</td>\n","      <td>4044.000000</td>\n","      <td>4064.000000</td>\n","      <td>1.498000e+04</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2024-01-28 16:28:52.957574656</td>\n","      <td>2024-01-28 16:11:33.999393536</td>\n","      <td>10.197566</td>\n","      <td>5.445107</td>\n","      <td>961.006429</td>\n","      <td>7238.117618</td>\n","      <td>1.115745e+05</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2022-10-11 00:00:00</td>\n","      <td>2023-07-03 17:03:00</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2023-11-11 00:00:00</td>\n","      <td>2023-11-18 23:15:30</td>\n","      <td>11.0</td>\n","      <td>3.0</td>\n","      <td>300.000000</td>\n","      <td>3500.000000</td>\n","      <td>4.408250e+03</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2024-02-08 00:00:00</td>\n","      <td>2024-02-06 16:15:00</td>\n","      <td>11.0</td>\n","      <td>5.0</td>\n","      <td>1000.000000</td>\n","      <td>11000.000000</td>\n","      <td>1.982000e+04</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2024-04-19 00:00:00</td>\n","      <td>2024-04-14 23:28:45</td>\n","      <td>11.0</td>\n","      <td>8.0</td>\n","      <td>1000.000000</td>\n","      <td>11000.000000</td>\n","      <td>5.596900e+04</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2024-12-11 00:00:00</td>\n","      <td>2024-06-21 15:30:00</td>\n","      <td>11.0</td>\n","      <td>11.0</td>\n","      <td>11500.000000</td>\n","      <td>11500.000000</td>\n","      <td>2.690846e+07</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.835545</td>\n","      <td>2.918031</td>\n","      <td>1417.220439</td>\n","      <td>4584.678975</td>\n","      <td>7.268762e+05</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6743df7f-68d1-43d9-85f9-e5db74a10b21')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6743df7f-68d1-43d9-85f9-e5db74a10b21 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6743df7f-68d1-43d9-85f9-e5db74a10b21');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d50c9ba5-dc70-47c9-89e5-0078eb47e622\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d50c9ba5-dc70-47c9-89e5-0078eb47e622')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d50c9ba5-dc70-47c9-89e5-0078eb47e622 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"deals_df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Closing Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000013129\",\n        \"max\": \"2024-12-11 00:00:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"13129\",\n          \"2024-01-28 16:28:52.957574656\",\n          \"2024-04-19 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Created Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000019788\",\n        \"max\": \"2024-06-21 15:30:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"19788\",\n          \"2024-01-28 16:11:33.999393536\",\n          \"2024-04-14 23:28:45\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Course duration\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          10.197565808095103,\n          1.8355445979618457,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months of study\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.445107398568019,\n          8.0,\n          838.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initial Amount Paid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3826.7605787642947,\n        \"min\": 0.0,\n        \"max\": 11500.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          4044.0,\n          961.0064292779426,\n          11500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Offer Total Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4256.072421905612,\n        \"min\": 0.0,\n        \"max\": 11500.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          4064.0,\n          7238.117618110236,\n          11500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SLA Seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9469592.090654101,\n        \"min\": 3.0,\n        \"max\": 26908464.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          111574.48090787717,\n          55969.0,\n          14980.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":165}],"source":["deals_df.describe()"]},{"cell_type":"code","execution_count":166,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":825},"executionInfo":{"elapsed":126,"status":"ok","timestamp":1741036524728,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"DMxYuXL0qf1o","outputId":"810ada3f-d863-4f88-86fc-af2c8b0e5711"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Id Deal Owner Name Closing Date            Quality  \\\n","0      5805028000056864695        Ben Hall          NaT                NaN   \n","1      5805028000056859489   Ulysses Adams          NaT                NaN   \n","2      5805028000056832357   Ulysses Adams   2024-06-21     D - Non Target   \n","3      5805028000056824246        Eva Kent   2024-06-21  E - Non Qualified   \n","4      5805028000056873292        Ben Hall   2024-06-21     D - Non Target   \n","...                    ...             ...          ...                ...   \n","21587  5805028000000935025    Kevin Parker   2023-07-06  E - Non Qualified   \n","21589  5805028000000948010      Jane Smith   2023-08-29         B - Medium   \n","21590  5805028000000945016      Jane Smith   2023-08-29           A - High   \n","21591  5805028000000927004       Bob Brown   2023-07-09     D - Non Target   \n","21592  5805028000000922001       Bob Brown   2023-07-03  E - Non Qualified   \n","\n","          Stage             Lost Reason                   Page  \\\n","0      New Lead                     NaN              /eng/test   \n","1      New Lead                     NaN                /at-eng   \n","2          Lost              Non target                /at-eng   \n","3          Lost          Invalid number                   /eng   \n","4          Lost              Non target                   /eng   \n","...         ...                     ...                    ...   \n","21587      Lost          Doesn't Answer  eng/digital-marketing   \n","21589      Lost     needs time to think  eng/digital-marketing   \n","21590      Lost        Changed Decision  eng/digital-marketing   \n","21591      Lost  Does not speak English  eng/digital-marketing   \n","21592      Lost                 Refugee                      /   \n","\n","                       Campaign             Content           Term  ...  \\\n","0                 03.07.23women                 v16          women  ...   \n","1                           NaN                 NaN            NaN  ...   \n","2                    engwien_AT               b1-at     21_06_2024  ...   \n","3      04.07.23recentlymoved_DE  bloggersvideo14com  recentlymoved  ...   \n","4                  discovery_DE             website            NaN  ...   \n","...                         ...                 ...            ...  ...   \n","21587           02.07.23wide_DE                  b3           wide  ...   \n","21589             03.07.23women                  b3          women  ...   \n","21590           02.07.23wide_DE                  b3           wide  ...   \n","21591             03.07.23women                  b3          women  ...   \n","21592                       NaN                 NaN            NaN  ...   \n","\n","      Education Type        Created Time Course duration Months of study  \\\n","0                NaN 2024-06-21 15:30:00            <NA>            <NA>   \n","1            Morning 2024-06-21 15:23:00               6            <NA>   \n","2                NaN 2024-06-21 14:45:00            <NA>            <NA>   \n","3                NaN 2024-06-21 13:32:00            <NA>            <NA>   \n","4                NaN 2024-06-21 13:21:00            <NA>            <NA>   \n","...              ...                 ...             ...             ...   \n","21587            NaN 2023-07-04 09:34:00            <NA>            <NA>   \n","21589            NaN 2023-07-04 07:10:00            <NA>            <NA>   \n","21590            NaN 2023-07-03 20:39:00            <NA>            <NA>   \n","21591            NaN 2023-07-03 20:17:00            <NA>            <NA>   \n","21592            NaN 2023-07-03 17:03:00            <NA>            <NA>   \n","\n","      Initial Amount Paid  Offer Total Amount         Contact Name  City  \\\n","0                     NaN                 NaN  5805028000056849495   NaN   \n","1                     0.0              2000.0  5805028000056834471   NaN   \n","2                     NaN                 NaN  5805028000056854421   NaN   \n","3                     NaN                 NaN  5805028000056889351   NaN   \n","4                     NaN                 NaN  5805028000056876176   NaN   \n","...                   ...                 ...                  ...   ...   \n","21587                 NaN                 NaN  5805028000000983028   NaN   \n","21589                 NaN                 NaN  5805028000000979006   NaN   \n","21590                 NaN                 NaN  5805028000000968001   NaN   \n","21591                 NaN                 NaN  5805028000000961001   NaN   \n","21592                 0.0                 0.0  5805028000001009140   NaN   \n","\n","       Level of Deutsch SLA Seconds  \n","0               Unknown         NaN  \n","1               Unknown         NaN  \n","2               Unknown      1603.0  \n","3               Unknown      3604.0  \n","4               Unknown      3192.0  \n","...                 ...         ...  \n","21587           Unknown         NaN  \n","21589           Unknown         NaN  \n","21590           Unknown   4906919.0  \n","21591           Unknown         NaN  \n","21592           Unknown    427634.0  \n","\n","[19788 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-3f919e56-601b-4092-91ad-73dd046e8272\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Id</th>\n","      <th>Deal Owner Name</th>\n","      <th>Closing Date</th>\n","      <th>Quality</th>\n","      <th>Stage</th>\n","      <th>Lost Reason</th>\n","      <th>Page</th>\n","      <th>Campaign</th>\n","      <th>Content</th>\n","      <th>Term</th>\n","      <th>...</th>\n","      <th>Education Type</th>\n","      <th>Created Time</th>\n","      <th>Course duration</th>\n","      <th>Months of study</th>\n","      <th>Initial Amount Paid</th>\n","      <th>Offer Total Amount</th>\n","      <th>Contact Name</th>\n","      <th>City</th>\n","      <th>Level of Deutsch</th>\n","      <th>SLA Seconds</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5805028000056864695</td>\n","      <td>Ben Hall</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>New Lead</td>\n","      <td>NaN</td>\n","      <td>/eng/test</td>\n","      <td>03.07.23women</td>\n","      <td>v16</td>\n","      <td>women</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-06-21 15:30:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056849495</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5805028000056859489</td>\n","      <td>Ulysses Adams</td>\n","      <td>NaT</td>\n","      <td>NaN</td>\n","      <td>New Lead</td>\n","      <td>NaN</td>\n","      <td>/at-eng</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>Morning</td>\n","      <td>2024-06-21 15:23:00</td>\n","      <td>6</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>0.0</td>\n","      <td>2000.0</td>\n","      <td>5805028000056834471</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5805028000056832357</td>\n","      <td>Ulysses Adams</td>\n","      <td>2024-06-21</td>\n","      <td>D - Non Target</td>\n","      <td>Lost</td>\n","      <td>Non target</td>\n","      <td>/at-eng</td>\n","      <td>engwien_AT</td>\n","      <td>b1-at</td>\n","      <td>21_06_2024</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-06-21 14:45:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056854421</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>1603.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5805028000056824246</td>\n","      <td>Eva Kent</td>\n","      <td>2024-06-21</td>\n","      <td>E - Non Qualified</td>\n","      <td>Lost</td>\n","      <td>Invalid number</td>\n","      <td>/eng</td>\n","      <td>04.07.23recentlymoved_DE</td>\n","      <td>bloggersvideo14com</td>\n","      <td>recentlymoved</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-06-21 13:32:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056889351</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>3604.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5805028000056873292</td>\n","      <td>Ben Hall</td>\n","      <td>2024-06-21</td>\n","      <td>D - Non Target</td>\n","      <td>Lost</td>\n","      <td>Non target</td>\n","      <td>/eng</td>\n","      <td>discovery_DE</td>\n","      <td>website</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2024-06-21 13:21:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000056876176</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>3192.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>21587</th>\n","      <td>5805028000000935025</td>\n","      <td>Kevin Parker</td>\n","      <td>2023-07-06</td>\n","      <td>E - Non Qualified</td>\n","      <td>Lost</td>\n","      <td>Doesn't Answer</td>\n","      <td>eng/digital-marketing</td>\n","      <td>02.07.23wide_DE</td>\n","      <td>b3</td>\n","      <td>wide</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2023-07-04 09:34:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000000983028</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>21589</th>\n","      <td>5805028000000948010</td>\n","      <td>Jane Smith</td>\n","      <td>2023-08-29</td>\n","      <td>B - Medium</td>\n","      <td>Lost</td>\n","      <td>needs time to think</td>\n","      <td>eng/digital-marketing</td>\n","      <td>03.07.23women</td>\n","      <td>b3</td>\n","      <td>women</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2023-07-04 07:10:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000000979006</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>21590</th>\n","      <td>5805028000000945016</td>\n","      <td>Jane Smith</td>\n","      <td>2023-08-29</td>\n","      <td>A - High</td>\n","      <td>Lost</td>\n","      <td>Changed Decision</td>\n","      <td>eng/digital-marketing</td>\n","      <td>02.07.23wide_DE</td>\n","      <td>b3</td>\n","      <td>wide</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2023-07-03 20:39:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000000968001</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>4906919.0</td>\n","    </tr>\n","    <tr>\n","      <th>21591</th>\n","      <td>5805028000000927004</td>\n","      <td>Bob Brown</td>\n","      <td>2023-07-09</td>\n","      <td>D - Non Target</td>\n","      <td>Lost</td>\n","      <td>Does not speak English</td>\n","      <td>eng/digital-marketing</td>\n","      <td>03.07.23women</td>\n","      <td>b3</td>\n","      <td>women</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2023-07-03 20:17:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5805028000000961001</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>21592</th>\n","      <td>5805028000000922001</td>\n","      <td>Bob Brown</td>\n","      <td>2023-07-03</td>\n","      <td>E - Non Qualified</td>\n","      <td>Lost</td>\n","      <td>Refugee</td>\n","      <td>/</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>2023-07-03 17:03:00</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>&lt;NA&gt;</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>5805028000001009140</td>\n","      <td>NaN</td>\n","      <td>Unknown</td>\n","      <td>427634.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>19788 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3f919e56-601b-4092-91ad-73dd046e8272')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3f919e56-601b-4092-91ad-73dd046e8272 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3f919e56-601b-4092-91ad-73dd046e8272');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-be50ee08-5e57-4a4c-bfb8-860c01e11072\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-be50ee08-5e57-4a4c-bfb8-860c01e11072')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-be50ee08-5e57-4a4c-bfb8-860c01e11072 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_a14a3fa0-66e5-4a14-a024-36f1c4eea28a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('deals_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_a14a3fa0-66e5-4a14-a024-36f1c4eea28a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('deals_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"deals_df"}},"metadata":{},"execution_count":166}],"source":["deals_df"]},{"cell_type":"code","execution_count":167,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1741036524761,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"tWVKYX1GpGub","outputId":"ecda585d-c23b-4e3f-fc20-c8f8d1a7f217"},"outputs":[{"output_type":"stream","name":"stdout","text":["Empty DataFrame\n","Columns: [Id, Deal Owner Name, Closing Date, Quality, Stage, Lost Reason, Page, Campaign, Content, Term, Source, Payment Type, Product, Education Type, Created Time, Course duration, Months of study, Initial Amount Paid, Offer Total Amount, Contact Name, City, Level of Deutsch, SLA Seconds]\n","Index: []\n","\n","[0 rows x 23 columns]\n"]}],"source":["mask = deals_df['Initial Amount Paid'] > deals_df['Offer Total Amount']\n","if mask.any():\n","    deals_df.loc[mask, ['Initial Amount Paid', 'Offer Total Amount']] = \\\n","        deals_df.loc[mask, ['Offer Total Amount', 'Initial Amount Paid']].values\n","\n","print(deals_df[deals_df['Offer Total Amount'] < deals_df['Initial Amount Paid']])\n"]},{"cell_type":"code","execution_count":168,"metadata":{"id":"vXjzxD_EqNHB","executionInfo":{"status":"ok","timestamp":1741036534393,"user_tz":-60,"elapsed":9629,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"}}},"outputs":[],"source":["deals_df.to_excel(\"Deals (Result).xlsx\", index=False)"]},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"TiJbJddLpBIF"}},{"cell_type":"markdown","metadata":{"id":"j22qrmziz_81"},"source":["# **Descriptive Statistics:**\n","1. Calculate summary statistics (mean, median, mode, range) for numeric fields.\n","2. Analyze categorical fields such as quality, stage, source, and product."]},{"cell_type":"markdown","source":["\n","\n","---\n","\n"],"metadata":{"id":"MGd2Dp_opESi"}},{"cell_type":"code","execution_count":169,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"executionInfo":{"elapsed":28,"status":"ok","timestamp":1741036534419,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"lOx966vEE7wc","outputId":"a1c614ea-7b41-4ab2-cc0d-17e84dfee196"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Created Time                  Modified Time\n","count                          18510                          18510\n","mean   2024-01-24 14:25:56.155591680  2024-02-15 09:11:05.273905920\n","min              2023-06-27 11:28:00            2023-07-06 10:54:00\n","25%              2023-11-15 16:49:15            2023-12-09 14:51:45\n","50%              2024-02-01 18:44:30            2024-02-29 01:12:30\n","75%              2024-04-12 16:15:45            2024-04-26 22:40:45\n","max              2024-06-21 15:30:00            2024-06-21 15:32:00"],"text/html":["\n","  <div id=\"df-5822febd-f6a2-4042-930d-cff3a81256ec\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Created Time</th>\n","      <th>Modified Time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>18510</td>\n","      <td>18510</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2024-01-24 14:25:56.155591680</td>\n","      <td>2024-02-15 09:11:05.273905920</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2023-06-27 11:28:00</td>\n","      <td>2023-07-06 10:54:00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2023-11-15 16:49:15</td>\n","      <td>2023-12-09 14:51:45</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2024-02-01 18:44:30</td>\n","      <td>2024-02-29 01:12:30</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2024-04-12 16:15:45</td>\n","      <td>2024-04-26 22:40:45</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2024-06-21 15:30:00</td>\n","      <td>2024-06-21 15:32:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5822febd-f6a2-4042-930d-cff3a81256ec')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5822febd-f6a2-4042-930d-cff3a81256ec button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5822febd-f6a2-4042-930d-cff3a81256ec');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-88d3548b-1528-4b93-a19e-e27a5a3efba2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88d3548b-1528-4b93-a19e-e27a5a3efba2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-88d3548b-1528-4b93-a19e-e27a5a3efba2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"contacts_df\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"Created Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000018510\",\n        \"max\": \"2024-06-21 15:30:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"18510\",\n          \"2024-01-24 14:25:56.155591680\",\n          \"2024-04-12 16:15:45\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Modified Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000018510\",\n        \"max\": \"2024-06-21 15:32:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"18510\",\n          \"2024-02-15 09:11:05.273905920\",\n          \"2024-04-26 22:40:45\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":169}],"source":["contacts_df.describe()"]},{"cell_type":"markdown","source":["### **Descriptive Statistics Insights:**\n","\n","1. **Data Volume**: 18,510 records, indicating a significant number of events included in the analysis.\n","\n","2. **Mean Values**:  \n","   - Average creation date: January 24, 2024.  \n","   - Average modification date: February 15, 2024.  \n","   This suggests that, on average, records are modified approximately 21 days after creation.\n","\n","3. **Min and Max Values**:  \n","   - The earliest record was created on June 27, 2023, and the latest on June 21, 2024.  \n","   - The first modification occurred on July 6, 2023, and the last on June 21, 2024.  \n","   The data covers a span of almost one year.\n","\n","4. **Median Values (50th Percentile)**:  \n","   - Half of the records were created before February 1, 2024.  \n","   - Half of the modifications occurred before February 29, 2024.  \n","   This indicates high activity in record creation during late 2023 and early 2024.\n","\n","5. **25th and 75th Percentiles**:  \n","   - 25% of records were created before November 15, 2023, and 75% before April 12, 2024.  \n","   - For modifications, the corresponding dates are December 9, 2023, and April 26, 2024.  \n","   This suggests a relatively even distribution with a slight skew toward the end of the period.\n","\n","6. **Time Between Creation and Modification**:  \n","   - On average, records are modified a few weeks after creation.  \n","   - The spread of values indicates that some records are updated quickly, while others remain unchanged for extended periods.\n","\n","### **Conclusion: **\n","The data shows steady growth in activity, peaking in early 2024. The average time to modify a record is a few weeks, which may indicate either frequent need for data adjustments or a workflow that involves refining records after their initial creation."],"metadata":{"id":"B2Yspy9_p_Ic"}},{"cell_type":"code","execution_count":170,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":335},"executionInfo":{"elapsed":64,"status":"ok","timestamp":1741036534485,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"KSxm6zvzz_dF","outputId":"95335186-4115-4bee-a86a-fcc939c123f2"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                        Closing Date                   Created Time  \\\n","count                          13129                          19788   \n","mean   2024-01-28 16:28:52.957574656  2024-01-28 16:11:33.999393536   \n","min              2022-10-11 00:00:00            2023-07-03 17:03:00   \n","25%              2023-11-11 00:00:00            2023-11-18 23:15:30   \n","50%              2024-02-08 00:00:00            2024-02-06 16:15:00   \n","75%              2024-04-19 00:00:00            2024-04-14 23:28:45   \n","max              2024-12-11 00:00:00            2024-06-21 15:30:00   \n","std                              NaN                            NaN   \n","\n","       Course duration  Months of study  Initial Amount Paid  \\\n","count           3533.0            838.0          4044.000000   \n","mean         10.197566         5.445107           940.479970   \n","min                6.0              0.0             0.000000   \n","25%               11.0              3.0           300.000000   \n","50%               11.0              5.0          1000.000000   \n","75%               11.0              8.0          1000.000000   \n","max               11.0             11.0         11000.000000   \n","std           1.835545         2.918031          1341.419686   \n","\n","       Offer Total Amount   SLA Seconds  \n","count         4064.000000  1.498000e+04  \n","mean          7258.543061  1.115745e+05  \n","min              0.000000  3.000000e+00  \n","25%           3500.000000  4.408250e+03  \n","50%          11000.000000  1.982000e+04  \n","75%          11000.000000  5.596900e+04  \n","max          11500.000000  2.690846e+07  \n","std           4579.304930  7.268762e+05  "],"text/html":["\n","  <div id=\"df-ec43dc58-56c3-4fae-9565-5bd7263a3fec\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Closing Date</th>\n","      <th>Created Time</th>\n","      <th>Course duration</th>\n","      <th>Months of study</th>\n","      <th>Initial Amount Paid</th>\n","      <th>Offer Total Amount</th>\n","      <th>SLA Seconds</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>13129</td>\n","      <td>19788</td>\n","      <td>3533.0</td>\n","      <td>838.0</td>\n","      <td>4044.000000</td>\n","      <td>4064.000000</td>\n","      <td>1.498000e+04</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2024-01-28 16:28:52.957574656</td>\n","      <td>2024-01-28 16:11:33.999393536</td>\n","      <td>10.197566</td>\n","      <td>5.445107</td>\n","      <td>940.479970</td>\n","      <td>7258.543061</td>\n","      <td>1.115745e+05</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2022-10-11 00:00:00</td>\n","      <td>2023-07-03 17:03:00</td>\n","      <td>6.0</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2023-11-11 00:00:00</td>\n","      <td>2023-11-18 23:15:30</td>\n","      <td>11.0</td>\n","      <td>3.0</td>\n","      <td>300.000000</td>\n","      <td>3500.000000</td>\n","      <td>4.408250e+03</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2024-02-08 00:00:00</td>\n","      <td>2024-02-06 16:15:00</td>\n","      <td>11.0</td>\n","      <td>5.0</td>\n","      <td>1000.000000</td>\n","      <td>11000.000000</td>\n","      <td>1.982000e+04</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2024-04-19 00:00:00</td>\n","      <td>2024-04-14 23:28:45</td>\n","      <td>11.0</td>\n","      <td>8.0</td>\n","      <td>1000.000000</td>\n","      <td>11000.000000</td>\n","      <td>5.596900e+04</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2024-12-11 00:00:00</td>\n","      <td>2024-06-21 15:30:00</td>\n","      <td>11.0</td>\n","      <td>11.0</td>\n","      <td>11000.000000</td>\n","      <td>11500.000000</td>\n","      <td>2.690846e+07</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.835545</td>\n","      <td>2.918031</td>\n","      <td>1341.419686</td>\n","      <td>4579.304930</td>\n","      <td>7.268762e+05</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec43dc58-56c3-4fae-9565-5bd7263a3fec')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ec43dc58-56c3-4fae-9565-5bd7263a3fec button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ec43dc58-56c3-4fae-9565-5bd7263a3fec');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d020389c-8b33-4248-a2a4-dd01532ac45c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d020389c-8b33-4248-a2a4-dd01532ac45c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d020389c-8b33-4248-a2a4-dd01532ac45c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"deals_df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Closing Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000013129\",\n        \"max\": \"2024-12-11 00:00:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"13129\",\n          \"2024-01-28 16:28:52.957574656\",\n          \"2024-04-19 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Created Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000019788\",\n        \"max\": \"2024-06-21 15:30:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"19788\",\n          \"2024-01-28 16:11:33.999393536\",\n          \"2024-04-14 23:28:45\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Course duration\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          10.197565808095103,\n          1.8355445979618457,\n          6.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Months of study\",\n      \"properties\": {\n        \"dtype\": \"Float64\",\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.445107398568019,\n          8.0,\n          838.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Initial Amount Paid\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3664.1282959273885,\n        \"min\": 0.0,\n        \"max\": 11000.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          4044.0,\n          940.4799703264094,\n          11000.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Offer Total Amount\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4256.8748916316545,\n        \"min\": 0.0,\n        \"max\": 11500.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          4064.0,\n          7258.543061023622,\n          11500.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"SLA Seconds\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9469592.090654101,\n        \"min\": 3.0,\n        \"max\": 26908464.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          111574.48090787717,\n          55969.0,\n          14980.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":170}],"source":["deals_df.describe()"]},{"cell_type":"markdown","metadata":{"id":"k78iy7ECOhn3"},"source":["### Key Insights from the Data:  \n","\n","1. **Dates**:  \n","   - Average deal closing date: January 28, 2024.  \n","   - Earliest closing: October 11, 2022; latest: December 11, 2024.  \n","   - Average deal creation date: January 28, 2024 (almost matches the average closing date).  \n","\n","2. **Course Duration**:  \n","   - Average course duration: 10.2 months; median: 11 months.  \n","   - Minimum duration: 6 months; maximum: 11 months.  \n","   - Distribution is tight, with most courses lasting 11 months.  \n","\n","3. **Financial Metrics**:  \n","   - Average initial payment: 961 USD; median: 1,000 USD.  \n","   - Average offer amount: 7,238 USD; median: 11,000 USD.  \n","   - Minimum payment: 0 USD; maximum: 11,500 USD, indicating possible trial/free courses.  \n","\n","4. **SLA (Deal Processing Time in Seconds)**:  \n","   - Average processing time: 111,574 seconds (~31 hours).  \n","   - Median: 19,820 seconds (~5.5 hours), indicating strong asymmetry.  \n","   - Maximum value: 26,908,460 seconds (~311 days) — potential outliers.  \n","\n","### Overall Conclusion:  \n","- Most courses last 11 months, with a high average cost of 7,238 USD.  \n","- Some deals were processed for free or with minimal upfront payment.  \n","- Processing time varies significantly, with some extreme outliers.  \n","- SLA analysis requires further investigation into anomalously high values."]},{"cell_type":"code","execution_count":171,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":43,"status":"ok","timestamp":1741036534530,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"oRyNt3eBqf1p","outputId":"f4788919-87dc-4fd8-937e-bc2406931ee4"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                Date    Impressions         Spend  \\\n","count                          14967   14967.000000  14967.000000   \n","mean   2024-01-09 18:42:18.544798464    3411.951092      9.970728   \n","min              2023-07-03 00:00:00       0.000000      0.000000   \n","25%              2023-10-07 00:00:00      35.000000      0.310000   \n","50%              2024-01-20 00:00:00     286.000000      2.350000   \n","75%              2024-04-11 00:00:00    1057.000000      8.890000   \n","max              2024-06-21 00:00:00  431445.000000    774.000000   \n","std                              NaN   13361.336847     31.077729   \n","\n","             Clicks  \n","count  14967.000000  \n","mean      30.978686  \n","min        0.000000  \n","25%        0.000000  \n","50%        4.000000  \n","75%       17.000000  \n","max     2415.000000  \n","std       98.175199  "],"text/html":["\n","  <div id=\"df-099bfcb4-4f88-4464-a381-eba9224bd6ed\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date</th>\n","      <th>Impressions</th>\n","      <th>Spend</th>\n","      <th>Clicks</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>14967</td>\n","      <td>14967.000000</td>\n","      <td>14967.000000</td>\n","      <td>14967.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2024-01-09 18:42:18.544798464</td>\n","      <td>3411.951092</td>\n","      <td>9.970728</td>\n","      <td>30.978686</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2023-07-03 00:00:00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2023-10-07 00:00:00</td>\n","      <td>35.000000</td>\n","      <td>0.310000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2024-01-20 00:00:00</td>\n","      <td>286.000000</td>\n","      <td>2.350000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2024-04-11 00:00:00</td>\n","      <td>1057.000000</td>\n","      <td>8.890000</td>\n","      <td>17.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2024-06-21 00:00:00</td>\n","      <td>431445.000000</td>\n","      <td>774.000000</td>\n","      <td>2415.000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>NaN</td>\n","      <td>13361.336847</td>\n","      <td>31.077729</td>\n","      <td>98.175199</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-099bfcb4-4f88-4464-a381-eba9224bd6ed')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-099bfcb4-4f88-4464-a381-eba9224bd6ed button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-099bfcb4-4f88-4464-a381-eba9224bd6ed');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9a4fde29-70e8-4387-b3c8-5b1474b8250d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9a4fde29-70e8-4387-b3c8-5b1474b8250d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9a4fde29-70e8-4387-b3c8-5b1474b8250d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"spend_df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000014967\",\n        \"max\": \"2024-06-21 00:00:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"14967\",\n          \"2024-01-09 18:42:18.544798464\",\n          \"2024-04-11 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Impressions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 150988.54500259485,\n        \"min\": 0.0,\n        \"max\": 431445.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3411.951092403287,\n          1057.0,\n          14967.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Spend\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5256.718094343936,\n        \"min\": 0.0,\n        \"max\": 14967.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9.970727600721588,\n          8.89,\n          14967.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clicks\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5229.479140505357,\n        \"min\": 0.0,\n        \"max\": 14967.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          14967.0,\n          30.978686443509055,\n          2415.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":171}],"source":["spend_df.describe()"]},{"cell_type":"markdown","metadata":{"id":"ZGPd07O1PE1k"},"source":["### **Insights from Descriptive Statistics of Advertising Data:**\n","\n","1. **Data Volume**:  \n","   - The sample contains 14,967 records, representing a significant amount of information on ad impressions, costs, and clicks.\n","\n","2. **Mean Values**:  \n","   - Average ad display date: January 9, 2024.  \n","   - Per record, there are on average 3,411 impressions, 9.97 monetary units spent, and 30.98 clicks.  \n","   - However, high standard deviations (especially for impressions: 13,361; clicks: 98.18) indicate significant data variability.\n","\n","3. **Min and Max Values**:  \n","   - Earliest ad display: July 3, 2023; latest: June 21, 2024.  \n","   - Minimum values for all metrics are 0 (some records have no impressions, clicks, or costs).  \n","   - Maximum values:  \n","     - Impressions: 431,445 (a huge gap from the median, indicating rare outliers).  \n","     - Costs: 774 units.  \n","     - Clicks: 2,415.  \n","\n","4. **Percentile Analysis (Value Distribution)**:  \n","   - 25% of records have 35 or fewer impressions, costs up to 0.31, and 0 clicks (a significant portion of campaigns receive no engagement).  \n","   - 50% (median) records have 286 impressions, 2.35 costs, and 4 clicks – a more realistic benchmark for typical campaigns.  \n","   - 75% of records receive up to 1,057 impressions, 8.89 costs, and 17 clicks – above average but far from maximum values.  \n","\n","5. **Data Spread and Features**:  \n","   - The distribution is uneven, with many records showing low metrics but rare records with extremely high impressions, costs, and clicks.  \n","   - A large share of records (25%) receive no clicks, indicating low audience engagement for some ads.  \n","   - Mean values (3,411 impressions, 9.97 costs, 30.98 clicks) are inflated by rare spikes in activity.\n","\n","### *Conclusion:*  \n","- Most records show low impressions, costs, and clicks, but rare records with anomalously high values skew the averages.  \n","- Median values (286 impressions, 2.35 costs, 4 clicks) better reflect the real picture than the means.  \n","- A quarter of records receive no clicks, suggesting ineffective ads or poor targeting.  \n","- High data variance indicates that some campaigns significantly outperform others in reach and engagement."]},{"cell_type":"code","execution_count":172,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":103,"status":"ok","timestamp":1741036534635,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"o8VS4hsoqej6","outputId":"32785139-e63f-4e5e-98ae-a446549498d5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Call Start Time  Call Duration (in seconds)\n","count                          92617                92538.000000\n","mean   2024-02-04 19:21:56.171329024                  170.330178\n","min              2023-06-30 08:43:00                    0.000000\n","25%              2023-11-23 17:14:00                    4.000000\n","50%              2024-02-16 16:00:00                    9.000000\n","75%              2024-04-22 14:39:00                  107.000000\n","max              2024-06-21 15:31:00                 7625.000000\n","std                              NaN                  406.944468"],"text/html":["\n","  <div id=\"df-b1408c5a-6589-4ee5-8d87-d009f7da6c98\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Call Start Time</th>\n","      <th>Call Duration (in seconds)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>92617</td>\n","      <td>92538.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>2024-02-04 19:21:56.171329024</td>\n","      <td>170.330178</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>2023-06-30 08:43:00</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2023-11-23 17:14:00</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>2024-02-16 16:00:00</td>\n","      <td>9.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2024-04-22 14:39:00</td>\n","      <td>107.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2024-06-21 15:31:00</td>\n","      <td>7625.000000</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>NaN</td>\n","      <td>406.944468</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b1408c5a-6589-4ee5-8d87-d009f7da6c98')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b1408c5a-6589-4ee5-8d87-d009f7da6c98 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b1408c5a-6589-4ee5-8d87-d009f7da6c98');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9e0f9a4d-4621-45f6-9e30-53afbb71547d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9e0f9a4d-4621-45f6-9e30-53afbb71547d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9e0f9a4d-4621-45f6-9e30-53afbb71547d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"calls_df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Call Start Time\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000092617\",\n        \"max\": \"2024-06-21 15:31:00\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"92617\",\n          \"2024-02-04 19:21:56.171329024\",\n          \"2024-04-22 14:39:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Call Duration (in seconds)\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32403.76710016808,\n        \"min\": 0.0,\n        \"max\": 92538.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          170.33017787287383,\n          107.0,\n          92538.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":172}],"source":["calls_df.describe()"]},{"cell_type":"markdown","metadata":{"id":"NCp5RJmxPWV9"},"source":["### **Insights from Descriptive Statistics of Call Data:**\n","\n","1. **Data Volume**:  \n","   - Total recorded calls: 92,617.  \n","   - Call duration is available for 92,538 records*, indicating a small number of calls with missing duration data.\n","\n","2. **Mean Values**:  \n","   - Average call start time: February 4, 2024.  \n","   - Average call duration: 170 seconds (2 minutes 50 seconds).  \n","   - However, the high standard deviation (406.94 seconds) indicates significant variability in call lengths.\n","\n","3. **Min and Max Values**:  \n","   - Earliest call in the dataset: June 30, 2023; latest: June 21, 2024, covering almost 1 year.  \n","   - Minimum call duration: 0 seconds (possibly unanswered calls).  \n","   - Maximum call duration: 7,625 seconds (~2 hours 7 minutes), indicating rare but very long calls.\n","\n","4. **Percentile Analysis (Duration Distribution)**:  \n","   - 25% of calls lasted up to 4 seconds — very short interactions (possibly missed calls or hang-ups).  \n","   - 50% (median) of calls lasted 9 seconds, highlighting a high proportion of short calls.  \n","   - 75% of calls lasted up to 107 seconds (1 minute 47 seconds), bringing the average closer to more typical call durations.  \n","\n","5. **Data Spread and Features**:  \n","   - Most calls are short (under 10 seconds), but there is a significant number of longer calls, which inflates the average duration.  \n","   - High standard deviation suggests the presence of rare, extremely long calls that heavily influence the mean.\n","\n","### *Conclusion: *\n","- Most calls are short, with a median duration of 9 seconds.  \n","- Around 25% of calls last less than 4 seconds, potentially indicating frequent missed or dropped calls.  \n","- Long calls (over 7,000 seconds) are rare but significantly increase the average duration.  \n","- The data shows a trend of many short calls with a small number of very long ones."]},{"cell_type":"markdown","metadata":{"id":"HkQDNAt7FbyO"},"source":["## 🏷️ **Category**"]},{"cell_type":"markdown","metadata":{"id":"u9IVkI5gHYlR"},"source":["#-- Counting unique values --"]},{"cell_type":"code","execution_count":173,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1741036534650,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"tnuhTux7FbPX","outputId":"458da0cc-0094-4553-93bd-b8110a65c30d"},"outputs":[{"output_type":"stream","name":"stdout","text":["Уникальные значения в Quality:\n","[NaN, 'D - Non Target', 'E - Non Qualified', 'B - Medium', 'C - Low', 'A - High']\n","Categories (5, object): ['A - High', 'B - Medium', 'C - Low', 'D - Non Target',\n","                         'E - Non Qualified'] \n","\n","Уникальные значения в Stage:\n","['New Lead', 'Lost', 'Need a consultation', 'Need To Call', 'Call Delayed', ..., 'Need to Call - Sales', 'Test Sent', 'Payment Done', 'Registered on Offline Day', 'Free Education']\n","Length: 13\n","Categories (13, object): ['Call Delayed', 'Free Education', 'Lost', 'Need To Call', ...,\n","                          'Registered on Offline Day', 'Registered on Webinar', 'Test Sent',\n","                          'Waiting For Payment'] \n","\n","Уникальные значения в Source:\n","['Facebook Ads', 'Organic', 'Telegram posts', 'Google Ads', 'Youtube Ads', ..., 'Bloggers', 'Webinar', 'Partnership', 'Test', 'Offline']\n","Length: 13\n","Categories (13, object): ['Bloggers', 'CRM', 'Facebook Ads', 'Google Ads', ..., 'Test', 'Tiktok Ads',\n","                          'Webinar', 'Youtube Ads'] \n","\n","Уникальные значения в Product:\n","[NaN, 'Web Developer', 'Digital Marketing', 'UX/UI Design', 'Find yourself in IT']\n","Categories (4, object): ['Digital Marketing', 'Find yourself in IT', 'UX/UI Design', 'Web Developer'] \n","\n"]}],"source":["categorical_columns = ['Quality', 'Stage', 'Source', 'Product']\n","\n","for col in categorical_columns:\n","    print(f\"Уникальные значения в {col}:\")\n","    print(deals_df[col].unique(), \"\\n\")"]},{"cell_type":"markdown","metadata":{"id":"Q_fq0ylWHuWU"},"source":["# -- Counting the frequencies of occurrence --"]},{"cell_type":"code","execution_count":174,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":54,"status":"ok","timestamp":1741036534702,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"UmGa6PpRGciO","outputId":"5d8cc76b-e4ed-4da5-fbd5-8de97ce9b61b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Распределение значений в Quality:\n","Quality\n","E - Non Qualified    6143\n","D - Non Target       6078\n","C - Low              3386\n","B - Medium           1535\n","A - High              415\n","Name: count, dtype: int64 \n","\n","Распределение значений в Stage:\n","Stage\n","Lost                         13991\n","Call Delayed                  2243\n","Registered on Webinar         2066\n","Payment Done                   855\n","Waiting For Payment            324\n","Qualificated                   106\n","Registered on Offline Day       85\n","Need to Call - Sales            33\n","Need To Call                    31\n","Test Sent                       25\n","Need a consultation             23\n","New Lead                         5\n","Free Education                   1\n","Name: count, dtype: int64 \n","\n","Распределение значений в Source:\n","Source\n","Facebook Ads      4711\n","Google Ads        4110\n","Tiktok Ads        2001\n","SMM               1668\n","Youtube Ads       1618\n","Organic           1497\n","CRM               1455\n","Bloggers          1071\n","Telegram posts     993\n","Webinar            305\n","Partnership        201\n","Test               156\n","Offline              2\n","Name: count, dtype: int64 \n","\n","Распределение значений в Product:\n","Product\n","Digital Marketing      1954\n","UX/UI Design           1013\n","Web Developer           567\n","Find yourself in IT       3\n","Name: count, dtype: int64 \n","\n"]}],"source":["for col in categorical_columns:\n","    print(f\"Распределение значений в {col}:\")\n","    print(deals_df[col].value_counts(), \"\\n\")"]},{"cell_type":"markdown","metadata":{"id":"visujXLbH4WH"},"source":["# -- Percentage Distribution --"]},{"cell_type":"code","execution_count":175,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":272},"executionInfo":{"elapsed":6,"status":"ok","timestamp":1741036534709,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"ugP_JwbLGhvo","outputId":"c87ec8db-43b9-408e-f3cd-e25dc099c35f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Quality\n","E - Non Qualified    34.988893\n","D - Non Target       34.618671\n","C - Low              19.285755\n","B - Medium            8.742952\n","A - High              2.363730\n","Name: proportion, dtype: float64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>proportion</th>\n","    </tr>\n","    <tr>\n","      <th>Quality</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>E - Non Qualified</th>\n","      <td>34.988893</td>\n","    </tr>\n","    <tr>\n","      <th>D - Non Target</th>\n","      <td>34.618671</td>\n","    </tr>\n","    <tr>\n","      <th>C - Low</th>\n","      <td>19.285755</td>\n","    </tr>\n","    <tr>\n","      <th>B - Medium</th>\n","      <td>8.742952</td>\n","    </tr>\n","    <tr>\n","      <th>A - High</th>\n","      <td>2.363730</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> float64</label>"]},"metadata":{},"execution_count":175}],"source":["deals_df['Quality'].value_counts(normalize=True) * 100"]},{"cell_type":"markdown","metadata":{"id":"NGktZBjIIJS9"},"source":["# -- Analysis of the Relationship Between Categories and Numerical Variables --"]},{"cell_type":"code","execution_count":176,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27,"status":"ok","timestamp":1741036534739,"user":{"displayName":"Tikhomirova Ivanna (Iv)","userId":"14430960450480672260"},"user_tz":-60},"id":"3W1ZNppmHIQQ","outputId":"8858b926-2233-4e04-8657-98b11690d5ba"},"outputs":[{"output_type":"stream","name":"stdout","text":["Quality\n","A - High             7899.444444\n","B - Medium           8027.845884\n","C - Low              7790.862004\n","D - Non Target       8047.854027\n","E - Non Qualified     847.480106\n","Name: Offer Total Amount, dtype: float64 \n","\n","Stage\n","Call Delayed                  9195.379781\n","Free Education                4000.000000\n","Lost                          6523.138811\n","Need To Call                          NaN\n","Need a consultation                   NaN\n","Need to Call - Sales                  NaN\n","New Lead                      2000.000000\n","Payment Done                  7547.739286\n","Qualificated                  5733.333333\n","Registered on Offline Day     5000.000000\n","Registered on Webinar         4000.000000\n","Test Sent                    10666.666667\n","Waiting For Payment          10084.829721\n","Name: Offer Total Amount, dtype: float64 \n","\n","Source\n","Bloggers           8679.005525\n","CRM                8864.634146\n","Facebook Ads       7281.619820\n","Google Ads         6225.492341\n","Offline           11000.000000\n","Organic            8203.396624\n","Partnership        9000.000000\n","SMM                8038.505747\n","Telegram posts     6444.901235\n","Test              10250.000000\n","Tiktok Ads         6693.093093\n","Webinar            8312.820513\n","Youtube Ads        7381.851852\n","Name: Offer Total Amount, dtype: float64 \n","\n","Product\n","Digital Marketing      9748.221244\n","Find yourself in IT       0.333333\n","UX/UI Design           9454.925054\n","Web Developer          5368.785047\n","Name: Offer Total Amount, dtype: float64 \n","\n"]}],"source":["for col in categorical_columns:\n","    print(deals_df.groupby(col, observed=True)['Offer Total Amount'].mean(), \"\\n\")"]}],"metadata":{"colab":{"provenance":[{"file_id":"1qewGLjhetsfA5GIlzW7PXWVJc9z9kg-L","timestamp":1740933055316},{"file_id":"1X6TzL7gCksacEqB6uWhXd2vQqGH2BMzz","timestamp":1739880193632}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}